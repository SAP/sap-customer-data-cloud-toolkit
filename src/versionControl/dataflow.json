{
  "callId": "40ce9ba520c9453a98b55220910ec146",
  "context": "{\"id\":\"dataflows_search\",\"targetApiKey\":\"4_6Tv6z8O6NmUO_BZoHcXIRw\"}",
  "errorCode": 0,
  "apiVersion": 2,
  "statusCode": 200,
  "statusReason": "OK",
  "time": "2024-10-17T14:26:55.062Z",
  "resultCount": 10,
  "totalCount": 10,
  "result": [
    {
      "apiKey": "4_6Tv6z8O6NmUO_BZoHcXIRw",
      "siteId": 435061734600,
      "id": "83ec0f85760141e8944bfa74966f786d",
      "name": "Krux_Dataflow",
      "status": "published",
      "description": "account > rename > krux > lzo > s3",
      "steps": [
        {
          "id": "account",
          "type": "datasource.read.gigya.account",
          "params": {
            "select": "UID,profile.gender,profile.age",
            "from": "accounts",
            "deltaField": "lastUpdatedTimestamp",
            "keepFieldNamesWithDotAsIs": false,
            "batchSize": 300,
            "maxConcurrency": 1
          },
          "next": ["rename"]
        },
        {
          "id": "rename",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "UID",
                "targetField": "id"
              },
              {
                "sourceField": "profile.gender",
                "targetField": "g_gender"
              },
              {
                "sourceField": "profile.age",
                "targetField": "g_age"
              },
              {
                "sourceField": "profile.likes",
                "targetField": "likes"
              }
            ]
          },
          "next": ["krux"]
        },
        {
          "id": "krux",
          "type": "file.format.krux",
          "params": {
            "fileName": "Gigya_Krux_M6.csv",
            "createEmptyFile": true,
            "quoteFields": false,
            "separator": ";"
          },
          "next": ["lzo"]
        },
        {
          "id": "lzo",
          "type": "file.compress.lzo",
          "params": {
            "createIndexFile": true
          },
          "next": ["s3"]
        },
        {
          "id": "s3",
          "type": "datasource.write.amazon.s3",
          "params": {
            "bucketName": "...",
            "accessKey": "...",
            "secretKey": "********",
            "objectKeyPrefix": "...",
            "region": "not specified"
          }
        }
      ],
      "version": 1,
      "createTime": "2023-04-21T10:28:31.777Z",
      "updateTime": "2023-04-21T10:28:31.777Z",
      "updatedByEmail": "g.lopes@sap.com"
    },
    {
      "apiKey": "4_6Tv6z8O6NmUO_BZoHcXIRw",
      "siteId": 435061734600,
      "id": "5e14ee0b96264f2c812e0c255c7f4e55",
      "name": "Import Lite Accounts from SFTP",
      "status": "published",
      "description": "sftp > parse > injectJobId > importLiteAccount > format > sftp",
      "steps": [
        {
          "id": "Read files from SFTP",
          "type": "datasource.read.sftp",
          "params": {
            "host": "...",
            "username": "...",
            "password": "********",
            "fileNameRegex": ".*.json",
            "port": 22,
            "sortOrder": "ASC",
            "sortBy": "time",
            "timeout": 60
          },
          "next": ["parse JSON"]
        },
        {
          "id": "parse JSON",
          "type": "file.parse.json",
          "params": {
            "addFilename": false
          },
          "next": ["sharedvariable"]
        },
        {
          "id": "Import Lite Account",
          "type": "datasource.write.gigya.generic",
          "params": {
            "apiMethod": "accounts.importLiteAccount",
            "maxConnections": 20,
            "apiParams": [
              {
                "sourceField": "profile",
                "paramName": "profile",
                "value": ""
              },
              {
                "sourceField": "data",
                "paramName": "data",
                "value": ""
              },
              {
                "sourceField": "email",
                "paramName": "email",
                "value": ""
              }
            ],
            "addResponse": false
          },
          "next": [],
          "error": ["Format Error File"]
        },
        {
          "id": "Format Error File",
          "type": "file.format.json",
          "params": {
            "fileName": "import_lite_accounts_errors_${now}.json",
            "maxFileSize": 5000,
            "createEmptyFile": false
          },
          "next": ["Save errors to SFTP"]
        },
        {
          "id": "Save errors to SFTP",
          "type": "datasource.write.sftp",
          "params": {
            "host": "...",
            "username": "...",
            "password": "********",
            "port": 22,
            "remotePath": "errors",
            "temporaryUploadExtension": true,
            "timeout": 60
          }
        },
        {
          "id": "sharedvariable",
          "type": "datasource.read.sharedvariable",
          "next": ["Import Lite Account"]
        }
      ],
      "version": 1,
      "createTime": "2023-05-30T16:16:03.733Z",
      "updateTime": "2023-05-30T16:16:03.733Z",
      "updatedByEmail": "g.lopes@sap.com"
    },
    {
      "apiKey": "4_6Tv6z8O6NmUO_BZoHcXIRw",
      "siteId": 435061734600,
      "id": "dbfbabf8452c40fa867f485efd5468ca",
      "name": "TESTING DATAFLOW",
      "status": "published",
      "description": "account > rename > dsv > gzip > sftp",
      "steps": [
        {
          "id": "account",
          "type": "datasource.read.gigya.account",
          "params": {
            "select": "profile.email,profile.lastName,profile.firstName,profile.gender,profile.birthDay,profile.birthMonth,profile.birthYear,profile.address,profile.zip,profile.city,profile.state,profile.country,profile.phones.number,profile.nickname",
            "from": "accounts",
            "deltaField": "lastUpdatedTimestamp",
            "keepFieldNamesWithDotAsIs": false,
            "batchSize": 300,
            "maxConcurrency": 1
          },
          "next": ["rename"]
        },
        {
          "id": "rename",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "profile.email",
                "targetField": "MAIL"
              },
              {
                "sourceField": "profile.lastName",
                "targetField": "NAME"
              },
              {
                "sourceField": "profile.firstName",
                "targetField": "FIRSTNAME"
              },
              {
                "sourceField": "profile.gender",
                "targetField": "GENDER"
              },
              {
                "sourceField": "profile.birthDay",
                "targetField": "BIRTH_DAY"
              },
              {
                "sourceField": "profile.birthMonth",
                "targetField": "BIRTH_MONTH"
              },
              {
                "sourceField": "profile.birthYear",
                "targetField": "BIRTH_YEAR"
              },
              {
                "sourceField": "profile.address",
                "targetField": "STREET"
              },
              {
                "sourceField": "profile.zip",
                "targetField": "POSTALCODE"
              },
              {
                "sourceField": "profile.city",
                "targetField": "CITY"
              },
              {
                "sourceField": "profile.state",
                "targetField": "PROVINCE"
              },
              {
                "sourceField": "profile.country",
                "targetField": "COUNTRY"
              },
              {
                "sourceField": "profile.phones",
                "targetField": "PHONE"
              },
              {
                "sourceField": "profile.nickname",
                "targetField": "USERNAME"
              }
            ]
          },
          "next": ["remove"]
        },
        {
          "id": "remove",
          "type": "field.remove",
          "params": {
            "fields": ["profile"]
          },
          "next": ["dsv"]
        },
        {
          "id": "dsv",
          "type": "file.format.dsv",
          "params": {
            "fileName": "GIGYA_TO_SFTP_${now}.csv",
            "columnSeparator": ",",
            "escapeCharacter": "\"",
            "quoteFields": true,
            "maxFileSize": 5000,
            "writeHeader": true,
            "dsvFormatVersion": "Legacy",
            "lineEnd": "\n",
            "createEmptyFile": false
          },
          "next": ["gzip"]
        },
        {
          "id": "gzip",
          "type": "file.compress.gzip",
          "next": ["sftp"]
        },
        {
          "id": "sftp",
          "type": "datasource.write.sftp",
          "params": {
            "host": "...",
            "username": "...",
            "password": "********",
            "remotePath": "GigyaDaily",
            "port": 22,
            "timeout": 60,
            "temporaryUploadExtension": false
          }
        }
      ],
      "version": 2,
      "createTime": "2023-04-17T16:09:42.745Z",
      "updateTime": "2023-04-18T13:57:22.702Z",
      "updatedByEmail": "g.lopes@sap.com"
    },
    {
      "apiKey": "4_6Tv6z8O6NmUO_BZoHcXIRw",
      "siteId": 435061734600,
      "id": "3d7f9654342d43888ef711e0654d4e16",
      "name": "<${{Testing}}$>",
      "status": "published",
      "description": "{{DESCRIPTION}}",
      "steps": [
        {
          "id": "Read files from SFTP",
          "type": "datasource.read.sftp",
          "params": {
            "host": "...",
            "username": "<${{name}}$>",
            "password": "********",
            "fileNameRegex": ".*.json",
            "port": 22,
            "sortOrder": "ASC",
            "sortBy": "time",
            "timeout": 60
          },
          "next": ["parse JSON"]
        },
        {
          "id": "parse JSON",
          "type": "file.parse.json",
          "params": {
            "addFilename": false
          },
          "next": ["sharedvariable"]
        },
        {
          "id": "Import Lite Account",
          "type": "datasource.write.gigya.generic",
          "params": {
            "apiMethod": "accounts.importLiteAccount",
            "maxConnections": 20,
            "apiParams": [
              {
                "sourceField": "profile",
                "paramName": "profile",
                "value": ""
              },
              {
                "sourceField": "data",
                "paramName": "data",
                "value": ""
              },
              {
                "sourceField": "email",
                "paramName": "email",
                "value": ""
              }
            ],
            "addResponse": false
          },
          "next": [],
          "error": ["Format Error File"]
        },
        {
          "id": "Format Error File",
          "type": "file.format.json",
          "params": {
            "fileName": "import_lite_accounts_errors_${now}.json",
            "maxFileSize": 5000,
            "createEmptyFile": false
          },
          "next": ["Save errors to SFTP"]
        },
        {
          "id": "Save errors to SFTP",
          "type": "datasource.write.sftp",
          "params": {
            "host": "...",
            "username": "...",
            "password": "********",
            "port": 22,
            "remotePath": "errors",
            "temporaryUploadExtension": true,
            "timeout": 60
          }
        },
        {
          "id": "sharedvariable",
          "type": "datasource.read.sharedvariable",
          "next": ["Import Lite Account"]
        }
      ],
      "version": 3,
      "createTime": "2024-03-12T12:08:42.812Z",
      "updateTime": "2024-03-12T13:00:22.981Z",
      "updatedByEmail": "g.lopes@sap.com"
    },
    {
      "apiKey": "4_6Tv6z8O6NmUO_BZoHcXIRw",
      "siteId": 435061734600,
      "id": "f1d41954122542128218c60b25c00ea4",
      "name": "[FULL ACCOUNTS] - Import from DQV (BLOB STORAGE)",
      "status": "published",
      "description": "[FULL ACCOUNTS] - Import from DQV (BLOB STORAGE)",
      "steps": [
        {
          "id": "10B. Remove Fields",
          "type": "field.remove",
          "params": {
            "fields": [
              "_loginIDs",
              "_emails",
              "_identities",
              "_phoneNumber",
              "profile._email",
              "password",
              "_response",
              "query",
              "data._areaOfInterest",
              "data._child",
              "data._pet",
              "data._externalApplication",
              "_lastUpdated",
              "data._initialAppSourceCode",
              "isRegistered",
              "lastUpdated",
              "identities",
              "loginIDs",
              "_subscriptions"
            ]
          },
          "next": ["11C. Update Account"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": " 7A. Perform Merge Logic",
          "type": "record.evaluate",
          "params": {
            "script": "",
            "notifyLastRecord": false,
            "ECMAScriptVersion": "12"
          },
          "next": ["7A bis. Perform Merge Logic Area of Interest"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "12B. Import Full Account Insert",
          "type": "datasource.write.gigya.importaccount",
          "params": {
            "importPolicy": "insert",
            "maxConnections": 10,
            "addResponse": false
          },
          "next": ["13. Take phone number for update"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "7B. Rename Fields To Merge",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "data.areaOfInterest",
                "targetField": "data._areaOfInterest"
              },
              {
                "sourceField": "data.pet",
                "targetField": "data._pet"
              },
              {
                "sourceField": "data.child",
                "targetField": "data._child"
              },
              {
                "sourceField": "data.externalApplication",
                "targetField": "data._externalApplication"
              },
              {
                "sourceField": "lastUpdated",
                "targetField": "_lastUpdated"
              },
              {
                "sourceField": "data.initialAppSourceCode",
                "targetField": "data._initialAppSourceCode"
              },
              {
                "sourceField": "identities",
                "targetField": "_identities"
              },
              {
                "sourceField": "subscriptions",
                "targetField": "_subscriptions"
              }
            ]
          },
          "next": ["8B. Existing Accounts", "8C. New Accounts"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "8A. New Accounts",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "UID",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "process",
            "lookupFields": [
              {
                "sourceField": "_phoneNumber",
                "gigyaField": "phoneNumber"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "remove",
            "isCaseSensitive": false,
            "from": "accounts",
            "batchSize": 200,
            "maxConcurrency": 1,
            "multiMatchBehavior": "error"
          },
          "next": ["9A. Rename Fields"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "6A. Existing Accounts",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "UID,identities,data.areaOfInterest,data.pet,data.child,data.externalApplication,lastUpdated,data.initialAppSourceCode,phoneNumber,profile.email",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "remove",
            "lookupFields": [
              {
                "sourceField": "_phoneNumber",
                "gigyaField": "phoneNumber"
              },
              {
                "sourceField": "profile._email",
                "gigyaField": "loginIDs.unverifiedEmails"
              },
              {
                "sourceField": "profile._email",
                "gigyaField": "loginIDs.emails"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "process",
            "isCaseSensitive": false,
            "from": "accounts",
            "batchSize": 200,
            "maxConcurrency": 1,
            "multiMatchBehavior": "error"
          },
          "next": [" 7A. Perform Merge Logic", "Prepare existent accounts to extract"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "9A. Rename Fields",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "data._areaOfInterest",
                "targetField": "data.areaOfInterest"
              },
              {
                "sourceField": "data._pet",
                "targetField": "data.pet"
              },
              {
                "sourceField": "data._child",
                "targetField": "data.child"
              },
              {
                "sourceField": "data._externalApplication",
                "targetField": "data.externalApplication"
              },
              {
                "sourceField": "_lastUpdated",
                "targetField": "lastUpdated"
              },
              {
                "sourceField": "data._initialAppSourceCode",
                "targetField": "data.initialAppSourceCode"
              },
              {
                "sourceField": "profile._email",
                "targetField": "profile.email"
              },
              {
                "sourceField": "_phoneNumber",
                "targetField": "phoneNumber"
              },
              {
                "sourceField": "_loginIDs",
                "targetField": "loginIDs"
              },
              {
                "sourceField": "_emails",
                "targetField": "emails"
              },
              {
                "sourceField": "_identities",
                "targetField": "identities"
              }
            ]
          },
          "next": ["10A. Set standard data"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "5. Generate UID and check lang",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7CiAgICByZWNvcmQuVUlEID0gJ3h4eHh4eHh4eHh4eDR4eHh5eHh4eHh4eHh4eHh4eHh4Jy5yZXBsYWNlKC9beHldL2csIGZ1bmN0aW9uKGMpIHsKICAgICAgICB2YXIgciA9IE1hdGgucmFuZG9tKCkgKiAxNiB8IDAsIHYgPSBjID09ICd4JyA/IHIgOiAociAmIDB4MyB8IDB4OCk7CiAgICAgICAgcmV0dXJuIHYudG9TdHJpbmcoMTYpOwogICAgfSk7CiAgICBpZiAocmVjb3JkLnByZWZlcmVuY2VzICYmICFyZWNvcmQubGFuZykgewogICAgICAgIGlmIChyZWNvcmQucHJvZmlsZSAmJiByZWNvcmQucHJvZmlsZS5sb2NhbGUpIHsKICAgICAgICAgICAgcmVjb3JkLmxhbmcgPSByZWNvcmQucHJvZmlsZS5sb2NhbGU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICByZWNvcmQubGFuZyA9ICJlbiI7IAogICAgICAgIH0KICAgIH0KICAgIHJldHVybiByZWNvcmQ7Cn0=",
            "notifyLastRecord": false,
            "ECMAScriptVersion": "12"
          },
          "next": ["6A. PhoneNumber accounts", "6B. Email accounts"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "10A. Set standard data",
          "type": "record.evaluate",
          "params": {
            "script": "",
            "notifyLastRecord": false,
            "ECMAScriptVersion": "12"
          },
          "next": ["10A bis. Set standard Area of Interest"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "2. Decrypt PGP",
          "type": "file.decrypt.pgp",
          "params": {
            "pgpKey": "LS0tLS1CRUdJTiBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tCgptUUlOQkYwSG5iRUJFQUN5WHUrekJzanYveUlpNkFYSFBnL081b2VnRGVDTTRMaDMxY2xMMVhjK0J0dWFQb1B0CktVRHJLQXVhR1Q4cngzNGlzeExYdmJvSTVFRU96NTd5VEVxWDhMTHFadlY4U1ZFZUtVdzE1WVhKVkpFVDhFWXIKVTV0TmVvK0Zpajd1elEwWHV3a0JTOGpxMERGcFRUeXl1c3ZreHRtZWNnQW85a3FlQ0JmOEF3V0EwSXpiRmptTwpSbVBYSTBjYmMyWWplVXZ1WUkyOXVOa2hMbUM5VFVDcU9jMFlTaDJDWVZ6a3hBZjF5dGVOZ1BtQkVnRTBWNmFiCmlDMFhlSERBSTN0Z3ZxV2c0Nk8rWFNDTXZTclVndXV3aXRpbmtObXB5SWtadnFvWE9kUmtBN0hCcmc1VVRqVEMKOFM5L3lHMlF3anNvRUtRRmxhWHM2NzZJdTBwaTM2K1l0RHVuYnNITlZmbnEraSt5ZHFEcmlPRDZhRmpXNEFVYQp2NTNwOVJQQXEydDdCVnN0SklieHV2TWRRcDJJOEp0MW12NXFTeHJBOVZTeU9BMXFMcUl4NHd4T0t0RlhXZXJhCnFmVkRaV3RtS0NkQytPREpnbnVHMHdTRkQyRFY2WHN3YTNkdXJ4Sk5RaEZpc2JpTXJJTjZhc0dzSU5WUm9YNmEKd1hROEU2K2cyTjdKbitCeHpkNDllZ2h1Z3k2dHR4KzNjbTBJQ2lYVTVJRTZyZVdnNTVFU2cxdzQ4S3B1SmVtMwo2TWhUUEUwcksyY0c2em5FZUV0R0dFTzhxcXBtRDVjbmUzVzJRdGhJL3duVTR4aitpSXJaV0NSbCtYZkdlc2xYCjZkNDVMSTZBK3BpTGRkaVdUSWFZSzQ1OHVrVnFreTRRUm5SZVpqT3ZzbDY0bVlGdDFPYnlpSWhlc3dBUkFRQUIKdEIxRFNVRk5JRWx0Y0c5eWRDQThZMmxoYlVCdVpYTjBiR1V1WTI5dFBva0NUZ1FUQVFnQU9CWWhCQ2U3WkxlLwpxb2Qva2hYQUd5clJ3MnJFdzd6cUJRSmRCNTJ4QWhzREJRc0pDQWNDQmhVS0NRZ0xBZ1FXQWdNQkFoNEJBaGVBCkFBb0pFQ3JSdzJyRXc3enEwK0FQL1J0TldyR0xwK3BSV09IU1BNRlNoUUJBU1FZdUk5Sk5Sdk9vM3FhVnRpaTcKNHlvZzVKSVZ2M2VBS0tmVThhZjVPOEl6eXZKaWdoOEpTd1Blc2UzQldnT2M2amYrRStCZkdLa0ZBMGFyVFAvNgpLV0NGUzR0ZlA4VkpwVVBzVkUwbS9lanNRK0wzNW5hb0FUUnIrRmtKN0VBRldZVzhYT0xPOU94dGZDOVYyV3B0CkJQRDRmVUFXZXArQnB5ZTN3ZXBSVFNOelhHbkhKS0FjaEVCcUc1NjRTRmVCNWN2RXcydnE2RytNeTZ1MDdnRHMKZ1BUVzE4NnNrWkk2YkFOWEJucjVSaFg1YzBIRlRaNlZXTEJxYTI0U0pXNnVsemxmZWtpQlY3d0RDakxFbUljVQpId3JDSjhsSkh0dEcxT2JNYjBUT3pEb2I4anVSM1JWUFp0MzhXa3hwS0s1RmowbGlYeHgycWlacEtIN2RWYzRlCmZLNnZkWUJNcUZkL3B3SlpvOW12cHUwYTA1Nm9lMVhTcTRzbWxmalJ3WDhYMDRzb01USTEvbUxFK1c1aWJEREEKQ0tsQlNsSC9NZHdTTlQ1SXV4TzFxdUdjMjBKQ0x2WVF3OUhWVXNTMjV5NHhzNTZqa3U2MkVuZFJYZHFVM0FuSgp3TnBCOCtoNEVHVnFERmQybFVOV1hveUxZSk5IblcyUDZ6MlRyZ00wWWpqazRrTzQ2VWdzL1Zkcmd3czAzYUU3CjcwbDh3aHJLSm1GR1hJYWtJYk9qeENuRG4zaW5IV3ZGNUQ5dHkxanVkZ3dtY01rTE1OWnJ5SjEwbXRMWDlRbUkKVlRWekdRQ1RqL3laNmxGb1B5YkV0YTc3Z0N2ZlV6MEZYeEp6bzJCSjAycUdzSE1za3NJN2xqYmNSVE5IMVF6VAp1UUlOQkYwSG5iRUJFQURPVkVxeCtONWhNTHlpZEt3TjY3emN4SUVOalo2N0JPcjhOcjYydEFTY0Q2SnFMaTBvCml4b08zdUs0ZVI3YW9vWjVuMExER2hSNUVtQkZEdGVsY2VIR0dLYmFVcjRwNEt4NUdhKy8wWXlsN3lHZzNIMjEKMk1ub3lWS1NnUmVwMis3QVpPbHdWL1dablk1YmxmN0Jua21lSXowOTRodFE1T1BMa3NVUWZxZUZKemc1WmhUKwpSRzlOTUY1OE1xd2d1U3VldWVBa1JBc3NldncvSW9jbE05cHUyTEh3d0lmNHFKbG5iMEt6K3RQQjdqendPR2tCCjVOR2FIUXkvcjh2eTlIaThiSzNrWk8xK0FZcm5jdmdHSDJkUi9KRVlXU2MzWmlQZXQ2bDFWT3RPK3NlMVkzdjIKblQ1NW9UZDlRV2lkbFNPeGxiQStrckVtRDRuMUxIbHhPQit1MzRMQk1LLy9pWk1Hb0RpZUNTTHFSdlNONkRwZQo4d2J5SlQ4Mm9ITEtxN2lyYTNmeXA3blR0UUNneEdZMmVhUGU1NkVVc0FOakEvWjQyS3c4ZGRpeFFFR2paMHRrCkVXMEhNWVA2UjZlaFc4ODBFSjYxeWFhYXlJbE1zN0FEdlV4SjgzWmxReFhXVVdiMExweFRLRXdEemRlNkZxMEsKQUxzcXZOdGdhSXNXNzlYeVBRRkNqSnR6Y0JwUmJwQWo5bEl3UXU3L1lVM0E0TzBXWTBGYnNoQmxhaXlXMHI2cQo3cit2ZzE5OVovTld5SlhiUy9Ob01nZjdlSzdZL2JxOTA2VkFqVXBvUG1HdmRWMmFndzE1S29XaUZ2MU9NZi9vClVBS2tnN29ZcEdSVW9ybU9XcC8wYTUwemhpc1VCTjR0Qi9qZnkyNHJmVmR3ckRCeDNEbHNNRE90MVFBUkFRQUIKaVFJMkJCZ0JDQUFnRmlFRUo3dGt0NytxaDMrU0ZjQWJLdEhEYXNURHZPb0ZBbDBIbmJFQ0d3d0FDZ2tRS3RIRAphc1REdk9vak5SQUFpMWpzQWtheTA1eG51bU40b0J3TGpoczJUbEp6QjJqTEdmWVYvMzBQZHZWeTFrc1hHbmVaClV6a1ZRUGlqYWZlV3dGQTQwMzFSWG11b2lmczM5b0Zvek5yeXZYNTJ5WlV4a0hSMVRlbThNbzZCUmhYR2J5alcKNkZXMnJ1bFE5VUM0bEZzbUdzc2xQeGtnWVdOaE5nSlFFMTBJWHhkVGtWMnBjZndMNE9sK2YvWnpZVmV6WjliWgpqUHJxaExkcUwwWkJZV05CTnYxbVAyNlVmbTJkNnhwcGJxSGxabHplNEJVM1JwM0R2aWhzU2Frd0FiRnJQVVViClJ1dXJ1dHJ0K1pvMTY0M0VSWFo5eXpWQmZXWFU2UkU2QVVQL2RJZjlhdlV3REJpQllGc056UXlvZXovU213NzQKN0JqQU1pK1JSWDIzcCtpWVhzdm1yMjBFWGpmd3laRVhYcGVHNVhXYi9FeGNJbGIwN0hKNTl1ZHl5ODVPOFN1VgpXaWxNTFVaZUQvejhRZFhwMUdQMGI3L2dWbExCYjBTMEl5RmZwcjZJRlB5TU5pR3FOVGpqdVltV0FvODVNQzY4Cm9Bb2dCYUJHcGJmNk10TFMzMzcxcTNpR0NuTU9SaDJ6TWsvZDRLSkV5bkQ4Nm9qZHg0Z0V2R2dvK0g1M2d4ckkKOEp6MXZ5QXl5UzAzODc0M1RoVGFsck9yWVg5UnVxUWIySXVRRVh6YUhMUjdUYUxKbnRDdU5tQ00xTG5QUisxeApvSmpHSDhJOHdEdnkvS0tENjAyV2pyWjdJTnNHZzgrcndPeWxvTmcybXJ1U052VnVmaklFTDUzUnRBOHgreVlpCk1wakRLL2I4VmdYZHV6Myt2b2pka1FNeVJLM2NEYVJoV0hyS0JvVzNOVFk5Q251U2tJMWlvUUU9Cj1pMDlqCi0tLS0tRU5EIFBHUCBQVUJMSUMgS0VZIEJMT0NLLS0tLS0=",
            "pgpKey.importedPrivateKey": ""
          },
          "next": ["3. Parse JSON"],
          "error": []
        },
        {
          "id": "3. Parse JSON",
          "type": "file.parse.json",
          "params": {
            "addFilename": false
          },
          "next": ["4. Add data.idxImportJobId"],
          "error": []
        },
        {
          "id": "13. Take phone number for update",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgdmFyIG5ld3JlY29yZCA9IHt9Ow0KICAgIG5ld3JlY29yZC5VSUQgPSByZWNvcmQuVUlEOw0KICAgIG5ld3JlY29yZC5waG9uZU51bWJlciA9IHJlY29yZC5waG9uZU51bWJlcjsNCiAgICByZXR1cm4gbmV3cmVjb3JkOw0KfQ==",
            "notifyLastRecord": false,
            "ECMAScriptVersion": "12"
          },
          "next": ["14. Update account phone number"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "14. Update account phone number",
          "type": "datasource.write.gigya.account",
          "params": {
            "updatePolicy": "append",
            "maxConnections": 10
          },
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "1. Read From Blob Storage",
          "type": "datasource.read.azure.blob_token",
          "params": {
            "baseUri": "{{AZURE_BASE_URI}}",
            "accessToken": "********",
            "container": "{{AZURE_CONTAINER}}",
            "blobPrefix": "{{AZURE_BLOB_PREFIX}}"
          },
          "next": ["2. Decrypt PGP"],
          "error": []
        },
        {
          "id": "6A. PhoneNumber accounts",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgaWYocmVjb3JkLnBob25lTnVtYmVyKQ0KICAgICAgICByZXR1cm4gcmVjb3JkOw0KfQ==",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["7A. Rename Fields To Merge"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "6B. Email accounts",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgaWYoIXJlY29yZC5waG9uZU51bWJlcikNCiAgICAgICAgcmV0dXJuIHJlY29yZDsNCn0=",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["7B. Rename Fields To Merge"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "8B. Existing Accounts",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "UID,data.areaOfInterest,data.pet,data.child,data.externalApplication,lastUpdated,data.initialAppSourceCode",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "remove",
            "lookupFields": [
              {
                "sourceField": "profile.email",
                "gigyaField": "loginIDs.emails"
              },
              {
                "sourceField": "profile.email",
                "gigyaField": "loginIDs.unverifiedEmails"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "process",
            "isCaseSensitive": false,
            "from": "accounts",
            "batchSize": 200,
            "maxConcurrency": 1,
            "multiMatchBehavior": "error"
          },
          "next": [" 9B. Perform Merge Logic", "Prepare existent accounts to extract"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": " 9B. Perform Merge Logic",
          "type": "record.evaluate",
          "params": {
            "script": "",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["9B bis. Perform Merge Area Of Interest Logic"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "10C. Remove Fields",
          "type": "field.remove",
          "params": {
            "fields": [
              "_identities",
              "password",
              "_response",
              "query",
              "data._areaOfInterest",
              "data._child",
              "data._pet",
              "data._externalApplication",
              "_lastUpdated",
              "data._initialAppSourceCode",
              "_subscriptions"
            ]
          },
          "next": ["11D. Import Full Account Upsert"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "8C. New Accounts",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "UID",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "process",
            "lookupFields": [
              {
                "sourceField": "profile.email",
                "gigyaField": "loginIDs.emails"
              },
              {
                "sourceField": "profile.email",
                "gigyaField": "loginIDs.unverifiedEmails"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "remove",
            "isCaseSensitive": false,
            "from": "accounts",
            "batchSize": 200,
            "maxConcurrency": 1,
            "multiMatchBehavior": "error"
          },
          "next": ["9C. Rename fields"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "9C. Rename fields",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "data._areaOfInterest",
                "targetField": "data.areaOfInterest"
              },
              {
                "sourceField": "data._pet",
                "targetField": "data.pet"
              },
              {
                "sourceField": "data._child",
                "targetField": "data.child"
              },
              {
                "sourceField": "data._externalApplication",
                "targetField": "data.externalApplication"
              },
              {
                "sourceField": "data._initialAppSourceCode",
                "targetField": "data.initialAppSourceCode"
              },
              {
                "sourceField": "_identities",
                "targetField": "identities"
              }
            ]
          },
          "next": ["10E. Set Standard Data"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "10E. Set Standard Data",
          "type": "record.evaluate",
          "params": {
            "script": "",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["10E bis. Set standard Area Of Interest"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "11F. Import Full Account Insert",
          "type": "datasource.write.gigya.importaccount",
          "params": {
            "importPolicy": "insert",
            "maxConnections": 20,
            "addResponse": false
          },
          "next": ["12C. Set Account Info Webhook"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "7A. Rename Fields To Merge",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "data.areaOfInterest",
                "targetField": "data._areaOfInterest"
              },
              {
                "sourceField": "data.pet",
                "targetField": "data._pet"
              },
              {
                "sourceField": "data.child",
                "targetField": "data._child"
              },
              {
                "sourceField": "data.externalApplication",
                "targetField": "data._externalApplication"
              },
              {
                "sourceField": "lastUpdated",
                "targetField": "_lastUpdated"
              },
              {
                "sourceField": "data.initialAppSourceCode",
                "targetField": "data._initialAppSourceCode"
              },
              {
                "sourceField": "profile.email",
                "targetField": "profile._email"
              },
              {
                "sourceField": "phoneNumber",
                "targetField": "_phoneNumber"
              },
              {
                "sourceField": "loginIDs",
                "targetField": "_loginIDs"
              },
              {
                "sourceField": "emails",
                "targetField": "_emails"
              },
              {
                "sourceField": "identities",
                "targetField": "_identities"
              },
              {
                "sourceField": "subscriptions",
                "targetField": "_subscriptions"
              }
            ]
          },
          "next": ["8A. New Accounts", "6A. Existing Accounts"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "11B. Remove Fields",
          "type": "field.remove",
          "params": {
            "fields": ["lastUpdated", "_subscriptions"]
          },
          "next": ["12B. Import Full Account Insert"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "12C. Set Account Info Webhook",
          "type": "datasource.write.gigya.generic",
          "params": {
            "apiMethod": "accounts.setAccountInfo",
            "maxConnections": 10,
            "apiParams": [
              {
                "sourceField": "UID",
                "paramName": "UID",
                "value": ""
              }
            ],
            "addResponse": false
          },
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "Generate file",
          "type": "file.format.json",
          "params": {
            "fileName": "{{AZURE_ERRORS_FILENAME}}_${now:yyMMddHHmm}.json",
            "maxFileSize": 5000,
            "createEmptyFile": false
          },
          "next": ["Encrypt file"]
        },
        {
          "id": "Prepare fields to extract phone as ID",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgdmFyIHJlY29yZFRvRXh0cmFjdCA9IHt9Ow0KICAgIHJlY29yZFRvRXh0cmFjdC5waG9uZU51bWJlciA9IHJlY29yZC5waG9uZU51bWJlcjsNCiAgICAgICAgaWYgKHJlY29yZC5VSUQgJiYgcmVjb3JkLlVJRC5sZW5ndGgpIHsNCiAgICAgICAgcmVjb3JkVG9FeHRyYWN0LlVJRCA9IHJlY29yZC5VSUQ7DQogICAgfQ0KICAgIA0KICAgIHJlY29yZFRvRXh0cmFjdC5lcnJvckRldGFpbHMgPSByZWNvcmQuX2Vycm9yRGV0YWlsczsNCiAgICANCiAgICBpZiAocmVjb3JkVG9FeHRyYWN0LmVycm9yRGV0YWlscy5lcnJvck1lc3NhZ2UgIT09ICJJZ25vcmVkIFBhcmFtczogW3twYXJhbU5hbWUgPSBwaG9uZU51bWJlciwgd2FybmluZ0NvZGUgPSA0MDMwMDcsIG1lc3NhZ2UgPSBUaGlzIHBhcmFtZXRlciB3YXMgbm90IHJlY29nbml6ZWQgYXMgdmFsaWQgZm9yIHRoaXMgQVBJIG1ldGhvZCB3aXRoIHlvdXIgc2VjdXJpdHkgY3JlZGVudGlhbHMgbm9yIHdhcyBpdCByZWNvZ25pemVkIGFzIGEgc3RhbmRhcmQgR2lneWEgY29udHJvbCBwYXJhbWV0ZXIufV0iKSB7DQogICAgICAgIHJldHVybiByZWNvcmRUb0V4dHJhY3Q7DQogICAgfQ0KfQ==",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["Generate file"]
        },
        {
          "id": "Prepare fields to extract email",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgdmFyIHJlY29yZFRvRXh0cmFjdCA9IHt9Ow0KICAgIHJlY29yZFRvRXh0cmFjdC5lbWFpbCA9IHJlY29yZC5wcm9maWxlLmVtYWlsOw0KICAgIGlmIChyZWNvcmQuVUlEICYmIHJlY29yZC5VSUQubGVuZ3RoKSB7DQogICAgICAgIHJlY29yZFRvRXh0cmFjdC5VSUQgPSByZWNvcmQuVUlEOw0KICAgIH0NCiAgICANCiAgICByZWNvcmRUb0V4dHJhY3QuZXJyb3JEZXRhaWxzID0gcmVjb3JkLl9lcnJvckRldGFpbHM7DQoNCiAgICByZXR1cm4gcmVjb3JkVG9FeHRyYWN0Ow0KfQ==",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["Generate file"]
        },
        {
          "id": "Encrypt file",
          "type": "file.encrypt.pgp",
          "params": {
            "publicKey": "{{PGP_Public_Key_Base64_Encoded}}",
            "asciiArmor": true
          },
          "next": ["Upload to Blob Storage"]
        },
        {
          "id": "Remove auxiliar fields",
          "type": "field.remove",
          "params": {
            "fields": ["_lastUpdated", "_subscriptions"]
          },
          "next": ["11F. Import Full Account Insert"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "Generate Existent Accounts File",
          "type": "file.format.json",
          "params": {
            "fileName": "{{AZURE_EXISTENT_ACCOUNTS_FILENAME}}_${now:yyMMddHHmm}.json",
            "maxFileSize": 5000,
            "createEmptyFile": false
          },
          "next": ["Encrypt file"]
        },
        {
          "id": "Prepare existent accounts to extract",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgdmFyIG5ld1JlY29yZCA9IHsNCiAgICAgICAgIlVJRCI6IHJlY29yZC5VSUQsDQogICAgICAgICJlbWFpbCI6IHJlY29yZC5wcm9maWxlLmVtYWlsLA0KICAgICAgICAiaW5pdGlhbEFwcFNvdXJjZUNvZGUiOiByZWNvcmQuZGF0YS5pbml0aWFsQXBwU291cmNlQ29kZQ0KICAgIH0NCiAgICANCiAgICBpZiAocmVjb3JkLnBob25lTnVtYmVyKSB7DQogICAgICAgIG5ld1JlY29yZC5waG9uZU51bWJlciA9IHJlY29yZC5waG9uZU51bWJlcjsNCiAgICB9DQogICAgDQogICAgcmV0dXJuIG5ld1JlY29yZDsNCn0=",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["Generate Existent Accounts File"]
        },
        {
          "id": "4. Add data.idxImportJobId",
          "type": "field.add",
          "params": {
            "fields": [
              {
                "field": "data.idxImportJobId",
                "value": "${jobId}"
              },
              {
                "field": "isRegistered",
                "value": "true"
              }
            ]
          },
          "next": ["5. Generate UID and check lang"]
        },
        {
          "id": "9B bis. Perform Merge Area Of Interest Logic",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0LCBlcnJvcikgewogICAgLy8gSWYgc2V0IHRvIHRydWUgdGhlIHJlY29yZCB3aWxsIGJlIHByb2Nlc3NlZCBvbmx5IGlmIHRoZSBsYXN0VXBkYXRlIGluIHRoZSBmaWxlIGlzID4gbGFzdHVwZGF0ZSBpbiBTQVAtQ0RDLiBJZiBzZXQgdG8gZmFsc2UgdGhlIHJlY29yZCB3aWxsIGJlIGFsd2F5cyBwcm9jZXNzZWQuCiAgICB2YXIgY2hlY2tMYXN0VXBkYXRlZCA9IGZhbHNlOwogICAgLy8gSWYgc2V0IHRvIHRydWUgd2Ugd2lsbCBhcHBseSB0aGUgbWVyZ2UgbG9naWMgZm9yIHRoZSBjYXRlZ29yeS4gSWYgc2V0IHRvIGZhbHNlIHdlIHdpbGwgbm90IGFwcGx5IHRoZSBtZXJnaW5nIGxvZ2ljLgogICAgdmFyIG1lcmdlQXJlYU9mSW50ZXJlc3QgPSB0cnVlOwoKICAgIGlmKCBjaGVja0xhc3RVcGRhdGVkICYmIHJlY29yZC5sYXN0VXBkYXRlZCA+IHJlY29yZC5fbGFzdFVwZGF0ZWQgKSByZXR1cm47CiAgICAKICAgIHZhciBtYXRjaGluZ0NvbmRpdGlvbkFyZWFPZkludGVyZXN0ID0gWyJpbnRlcmVzdENvZGUiXTsKICAgIHZhciBzdHJhdGVneUNob29zZW4gPSAie3tNRVJHRV9TVFJBVEVHWX19IjsKCiAgICBpZiAoIG1lcmdlQXJlYU9mSW50ZXJlc3QgKSBjYWxsTWVyZ2VMb2dpYyggcmVjb3JkLCAiYXJlYU9mSW50ZXJlc3QiLCBzdHJhdGVneUNob29zZW4sIGxvZ2dlciwgZXJyb3IpOwogICAgCiAgICBpZiAocmVjb3JkLl9lcnJvckRldGFpbHMgJiYgcmVjb3JkLl9lcnJvckRldGFpbHMubGVuZ3RoKSB7CiAgICAgICAgZXJyb3IuYWNjZXB0KHJlY29yZCwgcmVjb3JkKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHJlY29yZDsKICAgIH0KfQoKZnVuY3Rpb24gY2FsbE1lcmdlTG9naWMoIHJlY29yZCwgcHJvcGVydHlOYW1lLCBzdHJhdGVneUNob29zZW4sIGxvZ2dlciwgZXJyb3IpIHsKICAgIHZhciBfcHJvcGVydHlOYW1lID0gIl8iICsgcHJvcGVydHlOYW1lOwogICAgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdICYmICFyZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdKSB7CiAgICAgICAgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdLmxlbmd0aCAhPT0gMCkgewogICAgICAgICAgICByZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdID0gZGVsZXRlUmVwZWF0ZWRzKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdKTsKICAgICAgICB9CiAgICB9IGVsc2UgaWYgKHJlY29yZC5kYXRhW3Byb3BlcnR5TmFtZV0gJiYgcmVjb3JkLmRhdGFbX3Byb3BlcnR5TmFtZV0pIHsKICAgICAgICBpZiAocmVjb3JkLmRhdGFbcHJvcGVydHlOYW1lXS5sZW5ndGggPT09IDAgJiYgcmVjb3JkLmRhdGFbX3Byb3BlcnR5TmFtZV0ubGVuZ3RoICE9PSAwKSByZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdID0gZGVsZXRlUmVwZWF0ZWRzKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdKTsgIAogICAgICAgIGVsc2UgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdLmxlbmd0aCAhPT0gMCkgewogICAgICAgICAgICBjb25zdCBtZXJnZVJlc3VsdCA9IHByb2Nlc3NNZXJnZShyZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdLCByZWNvcmQuZGF0YVtfcHJvcGVydHlOYW1lXSwgc3RyYXRlZ3lDaG9vc2VuKTsKICAgICAgICAgICAgaWYgKHR5cGVvZiBtZXJnZVJlc3VsdCA9PT0gJ3N0cmluZycpIHJlY29yZC5fZXJyb3JEZXRhaWxzID0gbWVyZ2VSZXN1bHQ7CiAgICAgICAgICAgIGVsc2UgcmVjb3JkLmRhdGFbcHJvcGVydHlOYW1lXSA9IG1lcmdlUmVzdWx0OwogICAgICAgIH0KICAgIH0KfQoKCmZ1bmN0aW9uIHByb2Nlc3NNZXJnZShleGlzdGluZ1JlY29yZEFycmF5LCBuZXdSZWNvcmRBcnJheSwgc3RyYXRlZ3kpIHsKICAgIHZhciByZXN1bHQgPSBbXTsKICAgIHZhciBjaGVjayA9IGZhbHNlOwogICAgaWYgKCBzdHJhdGVneSA9PT0gImZ1bGxSZXBsYWNlIikgewogICAgICAgIHJlc3VsdCA9IG5ld1JlY29yZEFycmF5OwogICAgICAgIHJldHVybiBkZWxldGVSZXBlYXRlZHMocmVzdWx0KTsKICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZXhpc3RpbmdSZWNvcmRBcnJheSkpIHsKICAgICAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSAicmVwbGFjZVBhcnRpYWxseSIpIHsKICAgICAgICAgICAgICAgIGNvbnN0IG5ld0ludGVyZXN0Q29kZXMgPSBuZXdSZWNvcmRBcnJheS5tYXAocmVjb3JkID0+IHJlY29yZC5pbnRlcmVzdENvZGUpOwogICAgCiAgICAgICAgICAgICAgICBleGlzdGluZ1JlY29yZEFycmF5ID0gWy4uLmV4aXN0aW5nUmVjb3JkQXJyYXkuZmlsdGVyKHJlY29yZCA9PiAhISFuZXdJbnRlcmVzdENvZGVzLmZpbmQoaW50ZXJlc3RDb2RlID0+IGludGVyZXN0Q29kZSA9PT0gcmVjb3JkLmludGVyZXN0Q29kZSkpXTsKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSAibWVyZ2UiKSB7CiAgICAgICAgICAgICAgICBjb25zdCBleGlzdGluZ1JlY29yZEFycmF5V291dFJlcGVhdGVkID0gZXhpc3RpbmdSZWNvcmRBcnJheS5maWx0ZXIocmVjb3JkID0+ICFuZXdSZWNvcmRBcnJheS5maW5kKF9yZWNvcmQgPT4gX3JlY29yZC5pbnRlcmVzdENvZGUgPT09IHJlY29yZC5pbnRlcmVzdENvZGUgJiYgX3JlY29yZC5hbnN3ZXJEZXRhaWxzID09PSByZWNvcmQuYW5zd2VyRGV0YWlscykpOwogICAgICAgICAgICAgICAgcmVzdWx0ID0gWy4uLmV4aXN0aW5nUmVjb3JkQXJyYXlXb3V0UmVwZWF0ZWQsIC4uLm5ld1JlY29yZEFycmF5XTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCA9IGV4aXN0aW5nUmVjb3JkQXJyYXkgJiYgZXhpc3RpbmdSZWNvcmRBcnJheS5sZW5ndGggPyBbLi4uZXhpc3RpbmdSZWNvcmRBcnJheV0gOiBbXTsKICAgIAogICAgICAgICAgICAgICAgZm9yICh2YXIgbSBpbiBuZXdSZWNvcmRBcnJheSkgewogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG4gaW4gZXhpc3RpbmdSZWNvcmRBcnJheSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV3UmVjb3JkQXJyYXlbbV0gJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXSAmJiBuZXdSZWNvcmRBcnJheVttXS5pbnRlcmVzdENvZGUgJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXS5pbnRlcmVzdENvZGUgJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXS5pbnRlcmVzdENvZGUgPT09IG5ld1JlY29yZEFycmF5W21dLmludGVyZXN0Q29kZSApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAoIWNoZWNrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKG5ld1JlY29yZEFycmF5W21dKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgY2hlY2sgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZVJlcGVhdGVkcyhyZXN1bHQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiAiVGhlIGFyZWEgb2YgaW50ZXJlc3QgaXMgbm90IGFuIGFycmF5LiI7CiAgICAgICAgfQogICAgfQp9CgpmdW5jdGlvbiBkZWxldGVSZXBlYXRlZHMocmVzdWx0KSB7CiAgICBjb25zdCBlcnJvcnMgPSBuZXcgU2V0KCk7CiAgICBjb25zdCBfcmVzdWx0ID0gWy4uLnJlc3VsdC5maWx0ZXIoKHZhbHVlLCBpbmRleCkgPT4gewogICAgICAgIGlmICghdmFsdWUuaW50ZXJlc3RDb2RlIHx8ICF2YWx1ZS5hbnN3ZXJEZXRhaWxzKSB7CiAgICAgICAgICAgIGVycm9ycy5hZGQoYFRoZSByZWNvcmQgaGFzIGFuIGludGVyZXN0IGluIHRoZSByZXBvIHdpdGhvdXQgaW50ZXJlc3RDb2RlIG9yIHdpdGhvdXQgYW5zd2VyRGV0YWlscy5gKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb25zdCBpbnRlcmVzdENvZGVWYWx1ZSA9IHR5cGVvZiB2YWx1ZS5pbnRlcmVzdENvZGUgPT09ICJzdHJpbmciID8gdmFsdWUuaW50ZXJlc3RDb2RlLnRvTG93ZXJDYXNlKCkgOiBgJHt2YWx1ZS5pbnRlcmVzdENvZGV9YC50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICBjb25zdCBhbnN3ZXJEZXRhaWxzVmFsdWUgPSB0eXBlb2YgdmFsdWUuYW5zd2VyRGV0YWlscyA9PT0gInN0cmluZyIgPyB2YWx1ZS5hbnN3ZXJEZXRhaWxzLnRvTG93ZXJDYXNlKCkgOiBgJHt2YWx1ZS5hbnN3ZXJEZXRhaWxzfWAudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgY29uc3QgX3ZhbHVlID0gYCR7IGludGVyZXN0Q29kZVZhbHVlIH0gLSAkeyBhbnN3ZXJEZXRhaWxzVmFsdWUgfWA7CiAgICAgICAgICAgIHJldHVybiBpbmRleCA9PT0gcmVzdWx0LmZpbmRJbmRleChvYmogPT4gewogICAgICAgICAgICAgICAgaWYgKCFvYmouaW50ZXJlc3RDb2RlIHx8ICFvYmouYW5zd2VyRGV0YWlscykgewogICAgICAgICAgICAgICAgICAgIGVycm9ycy5hZGQoYFRoZSByZWNvcmQgaGFzIGFuIGludGVyZXN0IGluIHRoZSByZXBvIHdpdGhvdXQgaW50ZXJlc3RDb2RlIG9yIHdpdGhvdXQgYW5zd2VyRGV0YWlscy5gKQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBpbnRlcmVzdENvZGVPYmogPSB0eXBlb2Ygb2JqLmludGVyZXN0Q29kZSA9PT0gInN0cmluZyIgPyBvYmouaW50ZXJlc3RDb2RlLnRvTG93ZXJDYXNlKCkgOiBgJHtvYmouaW50ZXJlc3RDb2RlfWAudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgICAgICAgICBjb25zdCBhbnN3ZXJEZXRhaWxzT2JqID0gdHlwZW9mIG9iai5hbnN3ZXJEZXRhaWxzID09PSAic3RyaW5nIiA/IG9iai5hbnN3ZXJEZXRhaWxzLnRvTG93ZXJDYXNlKCkgOiBgJHtvYmouYW5zd2VyRGV0YWlsc31gLnRvTG93ZXJDYXNlKCk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGAkeyBpbnRlcmVzdENvZGVPYmogfSAtICR7IGFuc3dlckRldGFpbHNPYmogfWAgPT0gX3ZhbHVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9KV07CiAgICAKICAgIGlmIChlcnJvcnMuc2l6ZSkgewogICAgICAgIGxldCBlcnJvck1lc3NhZ2UgPSAiIjsKICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgZXJyb3JzKSB7CiAgICAgICAgICAgIGlmIChlcnJvck1lc3NhZ2UgJiYgZXJyb3JNZXNzYWdlLmxlbmd0aCkgZXJyb3JNZXNzYWdlICs9IGAsICR7aXRlbX1gOwogICAgICAgICAgICBlbHNlIGVycm9yTWVzc2FnZSA9IGl0ZW07CiAgICAgICAgfQogICAgICAgIHJldHVybiBlcnJvck1lc3NhZ2U7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBfcmVzdWx0OwogICAgfQp9",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["10C. Remove Fields"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "10E bis. Set standard Area Of Interest",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0LCBlcnJvcikgew0KICAgIC8vYXZvaWQgcmVwZWF0ZWQgaW50ZXJlc3RDb2Rlcy1hbnN3ZXJEZXRhaWxzIG9uIGFyZWEgb2YgaW50ZXJlc3QNCiAgICBjb25zdCBlcnJvcnMgPSBuZXcgU2V0KCk7DQoNCiAgICBpZiAocmVjb3JkLmRhdGEuYXJlYU9mSW50ZXJlc3QgJiYgcmVjb3JkLmRhdGEuYXJlYU9mSW50ZXJlc3QubGVuZ3RoID4gMCkgew0KICAgICAgICByZWNvcmQuZGF0YS5hcmVhT2ZJbnRlcmVzdCA9IFsuLi5yZWNvcmQuZGF0YS5hcmVhT2ZJbnRlcmVzdC5maWx0ZXIoKHZhbHVlLCBpbmRleCkgPT4gew0KICAgICAgICAgICAgaWYgKCF2YWx1ZS5pbnRlcmVzdENvZGUgfHwgIXZhbHVlLmFuc3dlckRldGFpbHMpIHsNCiAgICAgICAgICAgICAgICBlcnJvcnMuYWRkKGBJbnZhbGlkIHJlY29yZCBzZW50LiBUaGUgcmVjb3JkIGhhcyBhbiBpbnRlcmVzdCB3aXRob3V0IGludGVyZXN0Q29kZSBvciB3aXRob3V0IGFuc3dlckRldGFpbHMuYCk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIGNvbnN0IF92YWx1ZSA9IGAke3ZhbHVlLmludGVyZXN0Q29kZS50b0xvd2VyQ2FzZSgpfSAtICR7dmFsdWUuYW5zd2VyRGV0YWlscy50b0xvd2VyQ2FzZSgpfWA7DQogICAgICAgICAgICAgICAgcmV0dXJuIGluZGV4ID09PSByZWNvcmQuZGF0YS5hcmVhT2ZJbnRlcmVzdC5maW5kSW5kZXgob2JqID0+IHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFvYmouaW50ZXJlc3RDb2RlIHx8ICFvYmouYW5zd2VyRGV0YWlscykgew0KICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JzLmFkZChgSW52YWxpZCByZWNvcmQgc2VudC4gVGhlIHJlY29yZCBoYXMgYW4gaW50ZXJlc3Qgd2l0aG91dCBpbnRlcmVzdENvZGUgb3Igd2l0aG91dCBhbnN3ZXJEZXRhaWxzLmApOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGAke29iai5pbnRlcmVzdENvZGUudG9Mb3dlckNhc2UoKX0gLSAke29iai5hbnN3ZXJEZXRhaWxzLnRvTG93ZXJDYXNlKCl9YCA9PSBfdmFsdWU7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSldOw0KICAgIH0NCiAgICBpZiAoZXJyb3JzLnNpemUpIHsNCiAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGVycm9ycykgew0KICAgICAgICAgICAgaWYgKHJlY29yZC5fZXJyb3JEZXRhaWxzICYmIHJlY29yZC5fZXJyb3JEZXRhaWxzLmxlbmd0aCkgcmVjb3JkLl9lcnJvckRldGFpbHMgKz0gYCwgJHtpdGVtfWA7DQogICAgICAgICAgICBlbHNlIHJlY29yZC5fZXJyb3JEZXRhaWxzID0gaXRlbTsNCiAgICAgICAgfQ0KICAgICAgICBlcnJvci5hY2NlcHQocmVjb3JkLCByZWNvcmQpOw0KICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiByZWNvcmQ7DQogICAgfQ0KfQ0K",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["Remove auxiliar fields"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "7A bis. Perform Merge Logic Area of Interest",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0LCBlcnJvcikgewogICAgLy8gSWYgc2V0IHRvIHRydWUgdGhlIHJlY29yZCB3aWxsIGJlIHByb2Nlc3NlZCBvbmx5IGlmIHRoZSBsYXN0VXBkYXRlIGluIHRoZSBmaWxlIGlzID4gbGFzdHVwZGF0ZSBpbiBTQVAtQ0RDLiBJZiBzZXQgdG8gZmFsc2UgdGhlIHJlY29yZCB3aWxsIGJlIGFsd2F5cyBwcm9jZXNzZWQuCiAgICB2YXIgY2hlY2tMYXN0VXBkYXRlZCA9IGZhbHNlOwogICAgLy8gSWYgc2V0IHRvIHRydWUgd2Ugd2lsbCBhcHBseSB0aGUgbWVyZ2UgbG9naWMgZm9yIHRoZSBjYXRlZ29yeS4gSWYgc2V0IHRvIGZhbHNlIHdlIHdpbGwgbm90IGFwcGx5IHRoZSBtZXJnaW5nIGxvZ2ljLgogICAgdmFyIG1lcmdlQXJlYU9mSW50ZXJlc3QgPSB0cnVlOwoKICAgIGlmKCBjaGVja0xhc3RVcGRhdGVkICYmIHJlY29yZC5sYXN0VXBkYXRlZCA+IHJlY29yZC5fbGFzdFVwZGF0ZWQgKSByZXR1cm47CiAgICAKICAgIHZhciBtYXRjaGluZ0NvbmRpdGlvbkFyZWFPZkludGVyZXN0ID0gWyJpbnRlcmVzdENvZGUiXTsKICAgIHZhciBzdHJhdGVneUNob29zZW4gPSAie3tNRVJHRV9TVFJBVEVHWX19IjsKCiAgICBpZiAoIG1lcmdlQXJlYU9mSW50ZXJlc3QgKSBjYWxsTWVyZ2VMb2dpYyggcmVjb3JkLCAiYXJlYU9mSW50ZXJlc3QiLCBzdHJhdGVneUNob29zZW4sIGxvZ2dlciwgZXJyb3IpOwogICAgCiAgICBpZiAocmVjb3JkLl9lcnJvckRldGFpbHMgJiYgcmVjb3JkLl9lcnJvckRldGFpbHMubGVuZ3RoKSB7CiAgICAgICAgZXJyb3IuYWNjZXB0KHJlY29yZCwgcmVjb3JkKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHJlY29yZDsKICAgIH0KfQoKZnVuY3Rpb24gY2FsbE1lcmdlTG9naWMoIHJlY29yZCwgcHJvcGVydHlOYW1lLCBzdHJhdGVneUNob29zZW4sIGxvZ2dlciwgZXJyb3IpIHsKICAgIHZhciBfcHJvcGVydHlOYW1lID0gIl8iICsgcHJvcGVydHlOYW1lOwogICAgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdICYmICFyZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdKSB7CiAgICAgICAgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdLmxlbmd0aCAhPT0gMCkgewogICAgICAgICAgICByZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdID0gZGVsZXRlUmVwZWF0ZWRzKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdKTsKICAgICAgICB9CiAgICB9IGVsc2UgaWYgKHJlY29yZC5kYXRhW3Byb3BlcnR5TmFtZV0gJiYgcmVjb3JkLmRhdGFbX3Byb3BlcnR5TmFtZV0pIHsKICAgICAgICBpZiAocmVjb3JkLmRhdGFbcHJvcGVydHlOYW1lXS5sZW5ndGggPT09IDAgJiYgcmVjb3JkLmRhdGFbX3Byb3BlcnR5TmFtZV0ubGVuZ3RoICE9PSAwKSByZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdID0gZGVsZXRlUmVwZWF0ZWRzKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdKTsgIAogICAgICAgIGVsc2UgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdLmxlbmd0aCAhPT0gMCkgewogICAgICAgICAgICBjb25zdCBtZXJnZVJlc3VsdCA9IHByb2Nlc3NNZXJnZShyZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdLCByZWNvcmQuZGF0YVtfcHJvcGVydHlOYW1lXSwgc3RyYXRlZ3lDaG9vc2VuKTsKICAgICAgICAgICAgaWYgKHR5cGVvZiBtZXJnZVJlc3VsdCA9PT0gJ3N0cmluZycpIHJlY29yZC5fZXJyb3JEZXRhaWxzID0gbWVyZ2VSZXN1bHQ7CiAgICAgICAgICAgIGVsc2UgcmVjb3JkLmRhdGFbcHJvcGVydHlOYW1lXSA9IG1lcmdlUmVzdWx0OwogICAgICAgIH0KICAgIH0KfQoKCmZ1bmN0aW9uIHByb2Nlc3NNZXJnZShleGlzdGluZ1JlY29yZEFycmF5LCBuZXdSZWNvcmRBcnJheSwgc3RyYXRlZ3kpIHsKICAgIHZhciByZXN1bHQgPSBbXTsKICAgIHZhciBjaGVjayA9IGZhbHNlOwogICAgaWYgKCBzdHJhdGVneSA9PT0gImZ1bGxSZXBsYWNlIikgewogICAgICAgIHJlc3VsdCA9IG5ld1JlY29yZEFycmF5OwogICAgICAgIHJldHVybiBkZWxldGVSZXBlYXRlZHMocmVzdWx0KTsKICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZXhpc3RpbmdSZWNvcmRBcnJheSkpIHsKICAgICAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSAicmVwbGFjZVBhcnRpYWxseSIpIHsKICAgICAgICAgICAgICAgIGNvbnN0IG5ld0ludGVyZXN0Q29kZXMgPSBuZXdSZWNvcmRBcnJheS5tYXAocmVjb3JkID0+IHJlY29yZC5pbnRlcmVzdENvZGUpOwogICAgCiAgICAgICAgICAgICAgICBleGlzdGluZ1JlY29yZEFycmF5ID0gWy4uLmV4aXN0aW5nUmVjb3JkQXJyYXkuZmlsdGVyKHJlY29yZCA9PiAhISFuZXdJbnRlcmVzdENvZGVzLmZpbmQoaW50ZXJlc3RDb2RlID0+IGludGVyZXN0Q29kZSA9PT0gcmVjb3JkLmludGVyZXN0Q29kZSkpXTsKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSAibWVyZ2UiKSB7CiAgICAgICAgICAgICAgICBjb25zdCBleGlzdGluZ1JlY29yZEFycmF5V291dFJlcGVhdGVkID0gZXhpc3RpbmdSZWNvcmRBcnJheS5maWx0ZXIocmVjb3JkID0+ICFuZXdSZWNvcmRBcnJheS5maW5kKF9yZWNvcmQgPT4gX3JlY29yZC5pbnRlcmVzdENvZGUgPT09IHJlY29yZC5pbnRlcmVzdENvZGUgJiYgX3JlY29yZC5hbnN3ZXJEZXRhaWxzID09PSByZWNvcmQuYW5zd2VyRGV0YWlscykpOwogICAgICAgICAgICAgICAgcmVzdWx0ID0gWy4uLmV4aXN0aW5nUmVjb3JkQXJyYXlXb3V0UmVwZWF0ZWQsIC4uLm5ld1JlY29yZEFycmF5XTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCA9IGV4aXN0aW5nUmVjb3JkQXJyYXkgJiYgZXhpc3RpbmdSZWNvcmRBcnJheS5sZW5ndGggPyBbLi4uZXhpc3RpbmdSZWNvcmRBcnJheV0gOiBbXTsKICAgIAogICAgICAgICAgICAgICAgZm9yICh2YXIgbSBpbiBuZXdSZWNvcmRBcnJheSkgewogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG4gaW4gZXhpc3RpbmdSZWNvcmRBcnJheSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV3UmVjb3JkQXJyYXlbbV0gJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXSAmJiBuZXdSZWNvcmRBcnJheVttXS5pbnRlcmVzdENvZGUgJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXS5pbnRlcmVzdENvZGUgJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXS5pbnRlcmVzdENvZGUgPT09IG5ld1JlY29yZEFycmF5W21dLmludGVyZXN0Q29kZSApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAoIWNoZWNrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKG5ld1JlY29yZEFycmF5W21dKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgY2hlY2sgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZVJlcGVhdGVkcyhyZXN1bHQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiAiVGhlIGFyZWEgb2YgaW50ZXJlc3QgaXMgbm90IGFuIGFycmF5LiI7CiAgICAgICAgfQogICAgfQp9CgpmdW5jdGlvbiBkZWxldGVSZXBlYXRlZHMocmVzdWx0KSB7CiAgICBjb25zdCBlcnJvcnMgPSBuZXcgU2V0KCk7CiAgICBjb25zdCBfcmVzdWx0ID0gWy4uLnJlc3VsdC5maWx0ZXIoKHZhbHVlLCBpbmRleCkgPT4gewogICAgICAgIGlmICghdmFsdWUuaW50ZXJlc3RDb2RlIHx8ICF2YWx1ZS5hbnN3ZXJEZXRhaWxzKSB7CiAgICAgICAgICAgIGVycm9ycy5hZGQoYFRoZSByZWNvcmQgaGFzIGFuIGludGVyZXN0IGluIHRoZSByZXBvIHdpdGhvdXQgaW50ZXJlc3RDb2RlIG9yIHdpdGhvdXQgYW5zd2VyRGV0YWlscy5gKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb25zdCBpbnRlcmVzdENvZGVWYWx1ZSA9IHR5cGVvZiB2YWx1ZS5pbnRlcmVzdENvZGUgPT09ICJzdHJpbmciID8gdmFsdWUuaW50ZXJlc3RDb2RlLnRvTG93ZXJDYXNlKCkgOiBgJHt2YWx1ZS5pbnRlcmVzdENvZGV9YC50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICBjb25zdCBhbnN3ZXJEZXRhaWxzVmFsdWUgPSB0eXBlb2YgdmFsdWUuYW5zd2VyRGV0YWlscyA9PT0gInN0cmluZyIgPyB2YWx1ZS5hbnN3ZXJEZXRhaWxzLnRvTG93ZXJDYXNlKCkgOiBgJHt2YWx1ZS5hbnN3ZXJEZXRhaWxzfWAudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgY29uc3QgX3ZhbHVlID0gYCR7IGludGVyZXN0Q29kZVZhbHVlIH0gLSAkeyBhbnN3ZXJEZXRhaWxzVmFsdWUgfWA7CiAgICAgICAgICAgIHJldHVybiBpbmRleCA9PT0gcmVzdWx0LmZpbmRJbmRleChvYmogPT4gewogICAgICAgICAgICAgICAgaWYgKCFvYmouaW50ZXJlc3RDb2RlIHx8ICFvYmouYW5zd2VyRGV0YWlscykgewogICAgICAgICAgICAgICAgICAgIGVycm9ycy5hZGQoYFRoZSByZWNvcmQgaGFzIGFuIGludGVyZXN0IGluIHRoZSByZXBvIHdpdGhvdXQgaW50ZXJlc3RDb2RlIG9yIHdpdGhvdXQgYW5zd2VyRGV0YWlscy5gKQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBpbnRlcmVzdENvZGVPYmogPSB0eXBlb2Ygb2JqLmludGVyZXN0Q29kZSA9PT0gInN0cmluZyIgPyBvYmouaW50ZXJlc3RDb2RlLnRvTG93ZXJDYXNlKCkgOiBgJHtvYmouaW50ZXJlc3RDb2RlfWAudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgICAgICAgICBjb25zdCBhbnN3ZXJEZXRhaWxzT2JqID0gdHlwZW9mIG9iai5hbnN3ZXJEZXRhaWxzID09PSAic3RyaW5nIiA/IG9iai5hbnN3ZXJEZXRhaWxzLnRvTG93ZXJDYXNlKCkgOiBgJHtvYmouYW5zd2VyRGV0YWlsc31gLnRvTG93ZXJDYXNlKCk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGAkeyBpbnRlcmVzdENvZGVPYmogfSAtICR7IGFuc3dlckRldGFpbHNPYmogfWAgPT0gX3ZhbHVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9KV07CiAgICAKICAgIGlmIChlcnJvcnMuc2l6ZSkgewogICAgICAgIGxldCBlcnJvck1lc3NhZ2UgPSAiIjsKICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgZXJyb3JzKSB7CiAgICAgICAgICAgIGlmIChlcnJvck1lc3NhZ2UgJiYgZXJyb3JNZXNzYWdlLmxlbmd0aCkgZXJyb3JNZXNzYWdlICs9IGAsICR7aXRlbX1gOwogICAgICAgICAgICBlbHNlIGVycm9yTWVzc2FnZSA9IGl0ZW07CiAgICAgICAgfQogICAgICAgIHJldHVybiBlcnJvck1lc3NhZ2U7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBfcmVzdWx0OwogICAgfQp9",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["10B. Remove Fields"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "10A bis. Set standard Area of Interest",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0LCBlcnJvcikgew0KICAgIC8vYXZvaWQgcmVwZWF0ZWQgaW50ZXJlc3RDb2Rlcy1hbnN3ZXJEZXRhaWxzIG9uIGFyZWEgb2YgaW50ZXJlc3QNCiAgICBjb25zdCBlcnJvcnMgPSBuZXcgU2V0KCk7DQoNCiAgICBpZiAocmVjb3JkLmRhdGEuYXJlYU9mSW50ZXJlc3QgJiYgcmVjb3JkLmRhdGEuYXJlYU9mSW50ZXJlc3QubGVuZ3RoID4gMCkgew0KICAgICAgICByZWNvcmQuZGF0YS5hcmVhT2ZJbnRlcmVzdCA9IFsuLi5yZWNvcmQuZGF0YS5hcmVhT2ZJbnRlcmVzdC5maWx0ZXIoKHZhbHVlLCBpbmRleCkgPT4gew0KICAgICAgICAgICAgaWYgKCF2YWx1ZS5pbnRlcmVzdENvZGUgfHwgIXZhbHVlLmFuc3dlckRldGFpbHMpIHsNCiAgICAgICAgICAgICAgICBlcnJvcnMuYWRkKGBJbnZhbGlkIHJlY29yZCBzZW50LiBUaGUgcmVjb3JkIGhhcyBhbiBpbnRlcmVzdCB3aXRob3V0IGludGVyZXN0Q29kZSBvciB3aXRob3V0IGFuc3dlckRldGFpbHMuYCk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIGNvbnN0IF92YWx1ZSA9IGAke3ZhbHVlLmludGVyZXN0Q29kZS50b0xvd2VyQ2FzZSgpfSAtICR7dmFsdWUuYW5zd2VyRGV0YWlscy50b0xvd2VyQ2FzZSgpfWA7DQogICAgICAgICAgICAgICAgcmV0dXJuIGluZGV4ID09PSByZWNvcmQuZGF0YS5hcmVhT2ZJbnRlcmVzdC5maW5kSW5kZXgob2JqID0+IHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFvYmouaW50ZXJlc3RDb2RlIHx8ICFvYmouYW5zd2VyRGV0YWlscykgew0KICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JzLmFkZChgSW52YWxpZCByZWNvcmQgc2VudC4gVGhlIHJlY29yZCBoYXMgYW4gaW50ZXJlc3Qgd2l0aG91dCBpbnRlcmVzdENvZGUgb3Igd2l0aG91dCBhbnN3ZXJEZXRhaWxzLmApOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGAke29iai5pbnRlcmVzdENvZGUudG9Mb3dlckNhc2UoKX0gLSAke29iai5hbnN3ZXJEZXRhaWxzLnRvTG93ZXJDYXNlKCl9YCA9PSBfdmFsdWU7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSldOw0KICAgIH0NCiAgICBpZiAoZXJyb3JzLnNpemUpIHsNCiAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGVycm9ycykgew0KICAgICAgICAgICAgaWYgKHJlY29yZC5fZXJyb3JEZXRhaWxzICYmIHJlY29yZC5fZXJyb3JEZXRhaWxzLmxlbmd0aCkgcmVjb3JkLl9lcnJvckRldGFpbHMgKz0gYCwgJHtpdGVtfWA7DQogICAgICAgICAgICBlbHNlIHJlY29yZC5fZXJyb3JEZXRhaWxzID0gaXRlbTsNCiAgICAgICAgfQ0KICAgICAgICBlcnJvci5hY2NlcHQocmVjb3JkLCByZWNvcmQpOw0KICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiByZWNvcmQ7DQogICAgfQ0KfQ0K",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["11B. Remove Fields"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "Upload to Blob Storage",
          "type": "datasource.write.azure.blob_token",
          "params": {
            "baseUri": "https://ciamprblobdataplatform.blob.core.windows.net",
            "accessToken": "********",
            "container": "{{AZURE_CONTAINER_IMPORT_ERROR}}"
          }
        },
        {
          "id": "11C. Update Account",
          "type": "datasource.write.gigya.importaccount",
          "params": {
            "importPolicy": "upsert",
            "maxConnections": 20,
            "addResponse": false
          },
          "next": ["12A. Rename Fields To Register"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "12A. Rename Fields To Register",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "profile.email",
                "targetField": "profile._email"
              },
              {
                "sourceField": "phoneNumber",
                "targetField": "_phoneNumber"
              },
              {
                "sourceField": "loginIDs",
                "targetField": "_loginIDs"
              },
              {
                "sourceField": "emails",
                "targetField": "_emails"
              }
            ]
          },
          "next": ["13A. Existing Account to Register"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "13A. Existing Account to Register",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "UID,phoneNumber,profile.email,isRegistered",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "remove",
            "lookupFields": [
              {
                "sourceField": "_phoneNumber",
                "gigyaField": "phoneNumber"
              },
              {
                "sourceField": "profile._email",
                "gigyaField": "loginIDs.unverifiedEmails"
              },
              {
                "sourceField": "profile._email",
                "gigyaField": "loginIDs.emails"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "process",
            "isCaseSensitive": true,
            "maxConcurrency": 1,
            "from": "accounts",
            "batchSize": 200,
            "multiMatchBehavior": "error"
          },
          "next": ["14A. Check isRegistered"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "14A. Check isRegistered",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgaWYgKCFyZWNvcmQuaXNSZWdpc3RlcmVkKSB7DQogICAgICAgIHJldHVybiByZWNvcmQ7DQogICAgfQ0KfQ==",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["15. Notify Login"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "15. Notify Login",
          "type": "datasource.write.gigya.generic",
          "params": {
            "apiMethod": "accounts.notifyLogin",
            "maxConnections": 10,
            "apiParams": [
              {
                "sourceField": "UID",
                "paramName": "siteUID",
                "value": ""
              }
            ],
            "addResponse": false
          },
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "11D. Import Full Account Upsert",
          "type": "datasource.write.gigya.importaccount",
          "params": {
            "importPolicy": "upsert",
            "maxConnections": 20,
            "addResponse": false
          },
          "next": ["12C. Set Account Info Webhook"],
          "error": ["Prepare fields to extract email"]
        }
      ],
      "version": 1,
      "createTime": "2024-10-15T09:59:15.877Z",
      "updateTime": "2024-10-15T09:59:15.877Z",
      "updatedByEmail": "l.marques@sap.com"
    },
    {
      "apiKey": "4_6Tv6z8O6NmUO_BZoHcXIRw",
      "siteId": 435061734600,
      "id": "a8387ebce4ab44098cf63db565674ab1",
      "name": "[LITE ACCOUNTS] - Import from DQV (BLOB STORAGE) - ONE-FIELD",
      "status": "published",
      "description": "[LITE ACCOUNTS] - Import from DQV (BLOB STORAGE) - ONE-FIELD",
      "steps": [
        {
          "id": "2. Decrypt PGP",
          "type": "file.decrypt.pgp",
          "params": {
            "pgpKey.importedPrivateKey": "",
            "pgpKey": "LS0tLS1CRUdJTiBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tCgptUUlOQkYwSG5iRUJFQUN5WHUrekJzanYveUlpNkFYSFBnL081b2VnRGVDTTRMaDMxY2xMMVhjK0J0dWFQb1B0CktVRHJLQXVhR1Q4cngzNGlzeExYdmJvSTVFRU96NTd5VEVxWDhMTHFadlY4U1ZFZUtVdzE1WVhKVkpFVDhFWXIKVTV0TmVvK0Zpajd1elEwWHV3a0JTOGpxMERGcFRUeXl1c3ZreHRtZWNnQW85a3FlQ0JmOEF3V0EwSXpiRmptTwpSbVBYSTBjYmMyWWplVXZ1WUkyOXVOa2hMbUM5VFVDcU9jMFlTaDJDWVZ6a3hBZjF5dGVOZ1BtQkVnRTBWNmFiCmlDMFhlSERBSTN0Z3ZxV2c0Nk8rWFNDTXZTclVndXV3aXRpbmtObXB5SWtadnFvWE9kUmtBN0hCcmc1VVRqVEMKOFM5L3lHMlF3anNvRUtRRmxhWHM2NzZJdTBwaTM2K1l0RHVuYnNITlZmbnEraSt5ZHFEcmlPRDZhRmpXNEFVYQp2NTNwOVJQQXEydDdCVnN0SklieHV2TWRRcDJJOEp0MW12NXFTeHJBOVZTeU9BMXFMcUl4NHd4T0t0RlhXZXJhCnFmVkRaV3RtS0NkQytPREpnbnVHMHdTRkQyRFY2WHN3YTNkdXJ4Sk5RaEZpc2JpTXJJTjZhc0dzSU5WUm9YNmEKd1hROEU2K2cyTjdKbitCeHpkNDllZ2h1Z3k2dHR4KzNjbTBJQ2lYVTVJRTZyZVdnNTVFU2cxdzQ4S3B1SmVtMwo2TWhUUEUwcksyY0c2em5FZUV0R0dFTzhxcXBtRDVjbmUzVzJRdGhJL3duVTR4aitpSXJaV0NSbCtYZkdlc2xYCjZkNDVMSTZBK3BpTGRkaVdUSWFZSzQ1OHVrVnFreTRRUm5SZVpqT3ZzbDY0bVlGdDFPYnlpSWhlc3dBUkFRQUIKdEIxRFNVRk5JRWx0Y0c5eWRDQThZMmxoYlVCdVpYTjBiR1V1WTI5dFBva0NUZ1FUQVFnQU9CWWhCQ2U3WkxlLwpxb2Qva2hYQUd5clJ3MnJFdzd6cUJRSmRCNTJ4QWhzREJRc0pDQWNDQmhVS0NRZ0xBZ1FXQWdNQkFoNEJBaGVBCkFBb0pFQ3JSdzJyRXc3enEwK0FQL1J0TldyR0xwK3BSV09IU1BNRlNoUUJBU1FZdUk5Sk5Sdk9vM3FhVnRpaTcKNHlvZzVKSVZ2M2VBS0tmVThhZjVPOEl6eXZKaWdoOEpTd1Blc2UzQldnT2M2amYrRStCZkdLa0ZBMGFyVFAvNgpLV0NGUzR0ZlA4VkpwVVBzVkUwbS9lanNRK0wzNW5hb0FUUnIrRmtKN0VBRldZVzhYT0xPOU94dGZDOVYyV3B0CkJQRDRmVUFXZXArQnB5ZTN3ZXBSVFNOelhHbkhKS0FjaEVCcUc1NjRTRmVCNWN2RXcydnE2RytNeTZ1MDdnRHMKZ1BUVzE4NnNrWkk2YkFOWEJucjVSaFg1YzBIRlRaNlZXTEJxYTI0U0pXNnVsemxmZWtpQlY3d0RDakxFbUljVQpId3JDSjhsSkh0dEcxT2JNYjBUT3pEb2I4anVSM1JWUFp0MzhXa3hwS0s1RmowbGlYeHgycWlacEtIN2RWYzRlCmZLNnZkWUJNcUZkL3B3SlpvOW12cHUwYTA1Nm9lMVhTcTRzbWxmalJ3WDhYMDRzb01USTEvbUxFK1c1aWJEREEKQ0tsQlNsSC9NZHdTTlQ1SXV4TzFxdUdjMjBKQ0x2WVF3OUhWVXNTMjV5NHhzNTZqa3U2MkVuZFJYZHFVM0FuSgp3TnBCOCtoNEVHVnFERmQybFVOV1hveUxZSk5IblcyUDZ6MlRyZ00wWWpqazRrTzQ2VWdzL1Zkcmd3czAzYUU3CjcwbDh3aHJLSm1GR1hJYWtJYk9qeENuRG4zaW5IV3ZGNUQ5dHkxanVkZ3dtY01rTE1OWnJ5SjEwbXRMWDlRbUkKVlRWekdRQ1RqL3laNmxGb1B5YkV0YTc3Z0N2ZlV6MEZYeEp6bzJCSjAycUdzSE1za3NJN2xqYmNSVE5IMVF6VAp1UUlOQkYwSG5iRUJFQURPVkVxeCtONWhNTHlpZEt3TjY3emN4SUVOalo2N0JPcjhOcjYydEFTY0Q2SnFMaTBvCml4b08zdUs0ZVI3YW9vWjVuMExER2hSNUVtQkZEdGVsY2VIR0dLYmFVcjRwNEt4NUdhKy8wWXlsN3lHZzNIMjEKMk1ub3lWS1NnUmVwMis3QVpPbHdWL1dablk1YmxmN0Jua21lSXowOTRodFE1T1BMa3NVUWZxZUZKemc1WmhUKwpSRzlOTUY1OE1xd2d1U3VldWVBa1JBc3NldncvSW9jbE05cHUyTEh3d0lmNHFKbG5iMEt6K3RQQjdqendPR2tCCjVOR2FIUXkvcjh2eTlIaThiSzNrWk8xK0FZcm5jdmdHSDJkUi9KRVlXU2MzWmlQZXQ2bDFWT3RPK3NlMVkzdjIKblQ1NW9UZDlRV2lkbFNPeGxiQStrckVtRDRuMUxIbHhPQit1MzRMQk1LLy9pWk1Hb0RpZUNTTHFSdlNONkRwZQo4d2J5SlQ4Mm9ITEtxN2lyYTNmeXA3blR0UUNneEdZMmVhUGU1NkVVc0FOakEvWjQyS3c4ZGRpeFFFR2paMHRrCkVXMEhNWVA2UjZlaFc4ODBFSjYxeWFhYXlJbE1zN0FEdlV4SjgzWmxReFhXVVdiMExweFRLRXdEemRlNkZxMEsKQUxzcXZOdGdhSXNXNzlYeVBRRkNqSnR6Y0JwUmJwQWo5bEl3UXU3L1lVM0E0TzBXWTBGYnNoQmxhaXlXMHI2cQo3cit2ZzE5OVovTld5SlhiUy9Ob01nZjdlSzdZL2JxOTA2VkFqVXBvUG1HdmRWMmFndzE1S29XaUZ2MU9NZi9vClVBS2tnN29ZcEdSVW9ybU9XcC8wYTUwemhpc1VCTjR0Qi9qZnkyNHJmVmR3ckRCeDNEbHNNRE90MVFBUkFRQUIKaVFJMkJCZ0JDQUFnRmlFRUo3dGt0NytxaDMrU0ZjQWJLdEhEYXNURHZPb0ZBbDBIbmJFQ0d3d0FDZ2tRS3RIRAphc1REdk9vak5SQUFpMWpzQWtheTA1eG51bU40b0J3TGpoczJUbEp6QjJqTEdmWVYvMzBQZHZWeTFrc1hHbmVaClV6a1ZRUGlqYWZlV3dGQTQwMzFSWG11b2lmczM5b0Zvek5yeXZYNTJ5WlV4a0hSMVRlbThNbzZCUmhYR2J5alcKNkZXMnJ1bFE5VUM0bEZzbUdzc2xQeGtnWVdOaE5nSlFFMTBJWHhkVGtWMnBjZndMNE9sK2YvWnpZVmV6WjliWgpqUHJxaExkcUwwWkJZV05CTnYxbVAyNlVmbTJkNnhwcGJxSGxabHplNEJVM1JwM0R2aWhzU2Frd0FiRnJQVVViClJ1dXJ1dHJ0K1pvMTY0M0VSWFo5eXpWQmZXWFU2UkU2QVVQL2RJZjlhdlV3REJpQllGc056UXlvZXovU213NzQKN0JqQU1pK1JSWDIzcCtpWVhzdm1yMjBFWGpmd3laRVhYcGVHNVhXYi9FeGNJbGIwN0hKNTl1ZHl5ODVPOFN1VgpXaWxNTFVaZUQvejhRZFhwMUdQMGI3L2dWbExCYjBTMEl5RmZwcjZJRlB5TU5pR3FOVGpqdVltV0FvODVNQzY4Cm9Bb2dCYUJHcGJmNk10TFMzMzcxcTNpR0NuTU9SaDJ6TWsvZDRLSkV5bkQ4Nm9qZHg0Z0V2R2dvK0g1M2d4ckkKOEp6MXZ5QXl5UzAzODc0M1RoVGFsck9yWVg5UnVxUWIySXVRRVh6YUhMUjdUYUxKbnRDdU5tQ00xTG5QUisxeApvSmpHSDhJOHdEdnkvS0tENjAyV2pyWjdJTnNHZzgrcndPeWxvTmcybXJ1U052VnVmaklFTDUzUnRBOHgreVlpCk1wakRLL2I4VmdYZHV6Myt2b2pka1FNeVJLM2NEYVJoV0hyS0JvVzNOVFk5Q251U2tJMWlvUUU9Cj1pMDlqCi0tLS0tRU5EIFBHUCBQVUJMSUMgS0VZIEJMT0NLLS0tLS0="
          },
          "next": ["3. Parse JSON"]
        },
        {
          "id": "3. Parse JSON",
          "type": "file.parse.json",
          "params": {
            "addFilename": false
          },
          "next": ["3. Rename Fields To Merge"]
        },
        {
          "id": "8. Evaluate Subscriptions & Preferences",
          "type": "field.evaluate",
          "params": {
            "fields": [
              {
                "expression": "subscriptions eq null || subscriptions eq ''? '{}' : subscriptions",
                "field": "subscriptions"
              }
            ],
            "language": "jexl"
          },
          "next": ["9. Import lite account"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "9. Import lite account",
          "type": "datasource.write.gigya.generic",
          "params": {
            "apiMethod": "accounts.importLiteAccount",
            "maxConnections": 20,
            "addResponse": true,
            "apiParams": [
              {
                "sourceField": "email",
                "paramName": "email",
                "value": ""
              },
              {
                "sourceField": "data",
                "paramName": "data",
                "value": ""
              },
              {
                "sourceField": "profile",
                "paramName": "profile",
                "value": ""
              },
              {
                "sourceField": "subscriptions",
                "paramName": "subscriptions",
                "value": ""
              }
            ]
          },
          "next": ["10A. Check if Preferences exists"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "4A. Existing Accounts",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "profile.email,data.areaOfInterest,data.pet,data.child,data.externalApplication,lastUpdated,data.initialAppSourceCode,UID",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "remove",
            "lookupFields": [
              {
                "sourceField": "profile.email",
                "gigyaField": "profile.email"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "process",
            "isCaseSensitive": false,
            "from": "emailAccounts",
            "batchSize": 200,
            "maxConcurrency": 1,
            "multiMatchBehavior": "error"
          },
          "next": ["5A. Perform Merge Logic", "Prepare existent accounts to extract"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "4B. New Accounts",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "profile.email",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "process",
            "lookupFields": [
              {
                "sourceField": "profile.email",
                "gigyaField": "profile.email"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "remove",
            "isCaseSensitive": false,
            "from": "emailAccounts",
            "batchSize": 200,
            "maxConcurrency": 1,
            "multiMatchBehavior": "error"
          },
          "next": ["Prepare new accounts error"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "3. Rename Fields To Merge",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "data.areaOfInterest",
                "targetField": "data._areaOfInterest"
              },
              {
                "sourceField": "data.pet",
                "targetField": "data._pet"
              },
              {
                "sourceField": "data.child",
                "targetField": "data._child"
              },
              {
                "sourceField": "data.externalApplication",
                "targetField": "data._externalApplication"
              },
              {
                "sourceField": "lastUpdated",
                "targetField": "_lastUpdated"
              },
              {
                "sourceField": "data.initialAppSourceCode",
                "targetField": "data._initialAppSourceCode"
              },
              {
                "sourceField": "subscriptions",
                "targetField": "_subscriptions"
              }
            ]
          },
          "next": ["4A. Existing Accounts", "4B. New Accounts"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "5A. Perform Merge Logic",
          "type": "record.evaluate",
          "params": {
            "script": "",
            "notifyLastRecord": false,
            "ECMAScriptVersion": "12"
          },
          "next": ["5A bis. Perform Merge Area of Interest Logic"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "11. Lite InitRegistrationgigya.generic",
          "type": "datasource.write.gigya.generic",
          "params": {
            "apiMethod": "accounts.initRegistration",
            "maxConnections": 10,
            "apiParams": [
              {
                "sourceField": "",
                "paramName": "isLite",
                "value": "true"
              }
            ],
            "addResponse": true
          },
          "next": ["12. setAccountInfo"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "12. setAccountInfo",
          "type": "datasource.write.gigya.generic",
          "params": {
            "apiMethod": "accounts.setAccountInfo",
            "maxConnections": 20,
            "addResponse": true,
            "apiParams": [
              {
                "sourceField": "profile",
                "paramName": "profile",
                "value": ""
              },
              {
                "sourceField": "_response.regToken",
                "paramName": "regToken",
                "value": ""
              },
              {
                "sourceField": "preferences",
                "paramName": "preferences",
                "value": ""
              },
              {
                "sourceField": "lang",
                "paramName": "lang",
                "value": ""
              }
            ]
          },
          "next": [],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "6A. Remove Fields",
          "type": "field.remove",
          "params": {
            "fields": ["data._areaOfInterest", "data._child", "data._pet", "data._externalApplication", "_lastUpdated", "data._initialAppSourceCode", "_subscriptions"]
          },
          "next": ["7. Add data.idxImportJobId"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "10A. Check if Preferences exists",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgaWYocmVjb3JkICYmIHJlY29yZC5wcmVmZXJlbmNlcykgew0KICAgICAgICBpZiAocmVjb3JkLnByZWZlcmVuY2VzICYmICFyZWNvcmQubGFuZykgew0KICAgICAgICAgICAgaWYgKHJlY29yZC5wcm9maWxlICYmIHJlY29yZC5wcm9maWxlLmxvY2FsZSkgew0KICAgICAgICAgICAgICAgIHJlY29yZC5sYW5nID0gcmVjb3JkLnByb2ZpbGUubG9jYWxlOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgIHJlY29yZC5sYW5nID0gImVuIjsgDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIHJlY29yZDsNCiAgICB9DQp9",
            "notifyLastRecord": false,
            "ECMAScriptVersion": "12"
          },
          "next": ["11. Lite InitRegistrationgigya.generic"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "Prepare new accounts error",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0LCBlcnJvcikgew0KICAgIHJlY29yZC5fZXJyb3JEZXRhaWxzID0gJ1RoaXMgcmVjb3JkIGRvZXMgbm90IGV4aXN0IG9uIHRoZSByZXBvc2l0b3J5IG9yIHlvdSBhcmUgdHJ5aW5nIHRvIHVwZGF0ZSBhIEZ1bGwgQWNjb3VudCB3aXRoIHRoZSBMaXRlIEFjY291bnQgZGF0YWZsb3cuIFlvdSBtdXN0IHJ1biBpdCB3aXRoIHRoZSBpbXBvcnQgd2l0aCBhbGwgdGhlIHJlcXVpcmVkIGZpZWxkcy4nOw0KICAgIGVycm9yLmFjY2VwdChyZWNvcmQsIHJlY29yZCk7DQogICAgcmV0dXJuOw0KfQ==",
            "notifyLastRecord": false,
            "ECMAScriptVersion": "12"
          },
          "next": [],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "1. Read From Blob Storage",
          "type": "datasource.read.azure.blob_token",
          "params": {
            "baseUri": "{{AZURE_BASE_URI}}",
            "accessToken": "********",
            "container": "{{AZURE_CONTAINER}}",
            "blobPrefix": "{{AZURE_BLOB_PREFIX}}"
          },
          "next": ["2. Decrypt PGP"]
        },
        {
          "id": "Prepare fields to extract email",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgdmFyIHJlY29yZFRvRXh0cmFjdCA9IHt9Ow0KICAgIHJlY29yZFRvRXh0cmFjdC5lbWFpbCA9IHJlY29yZC5lbWFpbDsNCiAgICBpZiAocmVjb3JkLlVJRCAmJiByZWNvcmQuVUlELmxlbmd0aCkgew0KICAgICAgICByZWNvcmRUb0V4dHJhY3QuVUlEID0gcmVjb3JkLlVJRDsNCiAgICB9DQogICAgDQogICAgcmVjb3JkVG9FeHRyYWN0LmVycm9yRGV0YWlscyA9IHJlY29yZC5fZXJyb3JEZXRhaWxzOw0KDQogICAgcmV0dXJuIHJlY29yZFRvRXh0cmFjdDsNCn0=",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["Generate file"]
        },
        {
          "id": "Generate file",
          "type": "file.format.json",
          "params": {
            "fileName": "{{AZURE_ERRORS_FILENAME}}_${now:yyMMddHHmm}.json",
            "maxFileSize": 5000,
            "createEmptyFile": false
          },
          "next": ["Encrypt file"]
        },
        {
          "id": "Encrypt file",
          "type": "file.encrypt.pgp",
          "params": {
            "publicKey": "{{PGP_Public_Key_Base64_Encoded}}",
            "asciiArmor": true
          },
          "next": ["Upload to Blob Storage"]
        },
        {
          "id": "Prepare existent accounts to extract",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgdmFyIG5ld1JlY29yZCA9IHsNCiAgICAgICAgIlVJRCI6IHJlY29yZC5VSUQsDQogICAgICAgICJlbWFpbCI6IHJlY29yZC5wcm9maWxlLmVtYWlsDQogICAgfTsNCiAgICANCiAgICBpZiAocmVjb3JkLmRhdGEuaW5pdGlhbEFwcFNvdXJjZUNvZGUpIHsNCiAgICAgICAgbmV3UmVjb3JkLmluaXRpYWxBcHBTb3VyY2VDb2RlID0gcmVjb3JkLmRhdGEuaW5pdGlhbEFwcFNvdXJjZUNvZGU7DQogICAgfQ0KICAgIA0KICAgIGlmIChyZWNvcmQuZGF0YS5saXRlQXBwU291cmNlQ29kZSkgew0KICAgICAgICBuZXdSZWNvcmQubGl0ZUFwcFNvdXJjZUNvZGUgPSByZWNvcmQuZGF0YS5saXRlQXBwU291cmNlQ29kZTsNCiAgICB9DQogICAgDQogICAgcmV0dXJuIG5ld1JlY29yZDsNCn0=",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["Generate Existent Accounts File"]
        },
        {
          "id": "Generate Existent Accounts File",
          "type": "file.format.json",
          "params": {
            "fileName": "{{AZURE_EXISTENT_ACCOUNTS_FILENAME}}_${now:yyMMddHHmm}.json",
            "maxFileSize": 5000,
            "createEmptyFile": false
          },
          "next": ["Encrypt file"]
        },
        {
          "id": "7. Add data.idxImportJobId",
          "type": "field.add",
          "params": {
            "fields": [
              {
                "field": "data.idxImportJobId",
                "value": "${jobId}"
              }
            ]
          },
          "next": ["8. Evaluate Subscriptions & Preferences"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "5A bis. Perform Merge Area of Interest Logic",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0LCBlcnJvcikgewogICAgLy8gSWYgc2V0IHRvIHRydWUgdGhlIHJlY29yZCB3aWxsIGJlIHByb2Nlc3NlZCBvbmx5IGlmIHRoZSBsYXN0VXBkYXRlIGluIHRoZSBmaWxlIGlzID4gbGFzdHVwZGF0ZSBpbiBTQVAtQ0RDLiBJZiBzZXQgdG8gZmFsc2UgdGhlIHJlY29yZCB3aWxsIGJlIGFsd2F5cyBwcm9jZXNzZWQuCiAgICB2YXIgY2hlY2tMYXN0VXBkYXRlZCA9IGZhbHNlOwogICAgLy8gSWYgc2V0IHRvIHRydWUgd2Ugd2lsbCBhcHBseSB0aGUgbWVyZ2UgbG9naWMgZm9yIHRoZSBjYXRlZ29yeS4gSWYgc2V0IHRvIGZhbHNlIHdlIHdpbGwgbm90IGFwcGx5IHRoZSBtZXJnaW5nIGxvZ2ljLgogICAgdmFyIG1lcmdlQXJlYU9mSW50ZXJlc3QgPSB0cnVlOwoKICAgIGlmKCBjaGVja0xhc3RVcGRhdGVkICYmIHJlY29yZC5sYXN0VXBkYXRlZCA+IHJlY29yZC5fbGFzdFVwZGF0ZWQgKSByZXR1cm47CiAgICAKICAgIHZhciBtYXRjaGluZ0NvbmRpdGlvbkFyZWFPZkludGVyZXN0ID0gWyJpbnRlcmVzdENvZGUiXTsKICAgIHZhciBzdHJhdGVneUNob29zZW4gPSAie3tNRVJHRV9TVFJBVEVHWX19IjsKCiAgICBpZiAoIG1lcmdlQXJlYU9mSW50ZXJlc3QgKSBjYWxsTWVyZ2VMb2dpYyggcmVjb3JkLCAiYXJlYU9mSW50ZXJlc3QiLCBzdHJhdGVneUNob29zZW4sIGxvZ2dlciwgZXJyb3IpOwogICAgCiAgICBpZiAocmVjb3JkLl9lcnJvckRldGFpbHMgJiYgcmVjb3JkLl9lcnJvckRldGFpbHMubGVuZ3RoKSB7CiAgICAgICAgZXJyb3IuYWNjZXB0KHJlY29yZCwgcmVjb3JkKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHJlY29yZDsKICAgIH0KfQoKZnVuY3Rpb24gY2FsbE1lcmdlTG9naWMoIHJlY29yZCwgcHJvcGVydHlOYW1lLCBzdHJhdGVneUNob29zZW4sIGxvZ2dlciwgZXJyb3IpIHsKICAgIHZhciBfcHJvcGVydHlOYW1lID0gIl8iICsgcHJvcGVydHlOYW1lOwogICAgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdICYmICFyZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdKSB7CiAgICAgICAgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdLmxlbmd0aCAhPT0gMCkgewogICAgICAgICAgICByZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdID0gZGVsZXRlUmVwZWF0ZWRzKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdKTsKICAgICAgICB9CiAgICB9IGVsc2UgaWYgKHJlY29yZC5kYXRhW3Byb3BlcnR5TmFtZV0gJiYgcmVjb3JkLmRhdGFbX3Byb3BlcnR5TmFtZV0pIHsKICAgICAgICBpZiAocmVjb3JkLmRhdGFbcHJvcGVydHlOYW1lXS5sZW5ndGggPT09IDAgJiYgcmVjb3JkLmRhdGFbX3Byb3BlcnR5TmFtZV0ubGVuZ3RoICE9PSAwKSByZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdID0gZGVsZXRlUmVwZWF0ZWRzKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdKTsgIAogICAgICAgIGVsc2UgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdLmxlbmd0aCAhPT0gMCkgewogICAgICAgICAgICBjb25zdCBtZXJnZVJlc3VsdCA9IHByb2Nlc3NNZXJnZShyZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdLCByZWNvcmQuZGF0YVtfcHJvcGVydHlOYW1lXSwgc3RyYXRlZ3lDaG9vc2VuKTsKICAgICAgICAgICAgaWYgKHR5cGVvZiBtZXJnZVJlc3VsdCA9PT0gJ3N0cmluZycpIHJlY29yZC5fZXJyb3JEZXRhaWxzID0gbWVyZ2VSZXN1bHQ7CiAgICAgICAgICAgIGVsc2UgcmVjb3JkLmRhdGFbcHJvcGVydHlOYW1lXSA9IG1lcmdlUmVzdWx0OwogICAgICAgIH0KICAgIH0KfQoKCmZ1bmN0aW9uIHByb2Nlc3NNZXJnZShleGlzdGluZ1JlY29yZEFycmF5LCBuZXdSZWNvcmRBcnJheSwgc3RyYXRlZ3kpIHsKICAgIHZhciByZXN1bHQgPSBbXTsKICAgIHZhciBjaGVjayA9IGZhbHNlOwogICAgaWYgKCBzdHJhdGVneSA9PT0gImZ1bGxSZXBsYWNlIikgewogICAgICAgIHJlc3VsdCA9IG5ld1JlY29yZEFycmF5OwogICAgICAgIHJldHVybiBkZWxldGVSZXBlYXRlZHMocmVzdWx0KTsKICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZXhpc3RpbmdSZWNvcmRBcnJheSkpIHsKICAgICAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSAicmVwbGFjZVBhcnRpYWxseSIpIHsKICAgICAgICAgICAgICAgIGNvbnN0IG5ld0ludGVyZXN0Q29kZXMgPSBuZXdSZWNvcmRBcnJheS5tYXAocmVjb3JkID0+IHJlY29yZC5pbnRlcmVzdENvZGUpOwogICAgCiAgICAgICAgICAgICAgICBleGlzdGluZ1JlY29yZEFycmF5ID0gWy4uLmV4aXN0aW5nUmVjb3JkQXJyYXkuZmlsdGVyKHJlY29yZCA9PiAhISFuZXdJbnRlcmVzdENvZGVzLmZpbmQoaW50ZXJlc3RDb2RlID0+IGludGVyZXN0Q29kZSA9PT0gcmVjb3JkLmludGVyZXN0Q29kZSkpXTsKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSAibWVyZ2UiKSB7CiAgICAgICAgICAgICAgICBjb25zdCBleGlzdGluZ1JlY29yZEFycmF5V291dFJlcGVhdGVkID0gZXhpc3RpbmdSZWNvcmRBcnJheS5maWx0ZXIocmVjb3JkID0+ICFuZXdSZWNvcmRBcnJheS5maW5kKF9yZWNvcmQgPT4gX3JlY29yZC5pbnRlcmVzdENvZGUgPT09IHJlY29yZC5pbnRlcmVzdENvZGUgJiYgX3JlY29yZC5hbnN3ZXJEZXRhaWxzID09PSByZWNvcmQuYW5zd2VyRGV0YWlscykpOwogICAgICAgICAgICAgICAgcmVzdWx0ID0gWy4uLmV4aXN0aW5nUmVjb3JkQXJyYXlXb3V0UmVwZWF0ZWQsIC4uLm5ld1JlY29yZEFycmF5XTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCA9IGV4aXN0aW5nUmVjb3JkQXJyYXkgJiYgZXhpc3RpbmdSZWNvcmRBcnJheS5sZW5ndGggPyBbLi4uZXhpc3RpbmdSZWNvcmRBcnJheV0gOiBbXTsKICAgIAogICAgICAgICAgICAgICAgZm9yICh2YXIgbSBpbiBuZXdSZWNvcmRBcnJheSkgewogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG4gaW4gZXhpc3RpbmdSZWNvcmRBcnJheSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV3UmVjb3JkQXJyYXlbbV0gJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXSAmJiBuZXdSZWNvcmRBcnJheVttXS5pbnRlcmVzdENvZGUgJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXS5pbnRlcmVzdENvZGUgJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXS5pbnRlcmVzdENvZGUgPT09IG5ld1JlY29yZEFycmF5W21dLmludGVyZXN0Q29kZSApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAoIWNoZWNrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKG5ld1JlY29yZEFycmF5W21dKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgY2hlY2sgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZVJlcGVhdGVkcyhyZXN1bHQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiAiVGhlIGFyZWEgb2YgaW50ZXJlc3QgaXMgbm90IGFuIGFycmF5LiI7CiAgICAgICAgfQogICAgICAgCiAgICB9Cn0KCmZ1bmN0aW9uIGRlbGV0ZVJlcGVhdGVkcyhyZXN1bHQpIHsKICAgIGNvbnN0IGVycm9ycyA9IG5ldyBTZXQoKTsKICAgIGNvbnN0IF9yZXN1bHQgPSBbLi4ucmVzdWx0LmZpbHRlcigodmFsdWUsIGluZGV4KSA9PiB7CiAgICAgICAgaWYgKCF2YWx1ZS5pbnRlcmVzdENvZGUgfHwgIXZhbHVlLmFuc3dlckRldGFpbHMpIHsKICAgICAgICAgICAgZXJyb3JzLmFkZChgVGhlIHJlY29yZCBoYXMgYW4gaW50ZXJlc3QgaW4gdGhlIHJlcG8gd2l0aG91dCBpbnRlcmVzdENvZGUgb3Igd2l0aG91dCBhbnN3ZXJEZXRhaWxzLmApOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNvbnN0IGludGVyZXN0Q29kZVZhbHVlID0gdHlwZW9mIHZhbHVlLmludGVyZXN0Q29kZSA9PT0gInN0cmluZyIgPyB2YWx1ZS5pbnRlcmVzdENvZGUudG9Mb3dlckNhc2UoKSA6IGAke3ZhbHVlLmludGVyZXN0Q29kZX1gLnRvTG93ZXJDYXNlKCk7CiAgICAgICAgICAgIGNvbnN0IGFuc3dlckRldGFpbHNWYWx1ZSA9IHR5cGVvZiB2YWx1ZS5hbnN3ZXJEZXRhaWxzID09PSAic3RyaW5nIiA/IHZhbHVlLmFuc3dlckRldGFpbHMudG9Mb3dlckNhc2UoKSA6IGAke3ZhbHVlLmFuc3dlckRldGFpbHN9YC50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICBjb25zdCBfdmFsdWUgPSBgJHsgaW50ZXJlc3RDb2RlVmFsdWUgfSAtICR7IGFuc3dlckRldGFpbHNWYWx1ZSB9YDsKICAgICAgICAgICAgcmV0dXJuIGluZGV4ID09PSByZXN1bHQuZmluZEluZGV4KG9iaiA9PiB7CiAgICAgICAgICAgICAgICBpZiAoIW9iai5pbnRlcmVzdENvZGUgfHwgIW9iai5hbnN3ZXJEZXRhaWxzKSB7CiAgICAgICAgICAgICAgICAgICAgZXJyb3JzLmFkZChgVGhlIHJlY29yZCBoYXMgYW4gaW50ZXJlc3QgaW4gdGhlIHJlcG8gd2l0aG91dCBpbnRlcmVzdENvZGUgb3Igd2l0aG91dCBhbnN3ZXJEZXRhaWxzLmApCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGNvbnN0IGludGVyZXN0Q29kZU9iaiA9IHR5cGVvZiBvYmouaW50ZXJlc3RDb2RlID09PSAic3RyaW5nIiA/IG9iai5pbnRlcmVzdENvZGUudG9Mb3dlckNhc2UoKSA6IGAke29iai5pbnRlcmVzdENvZGV9YC50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICAgICAgICAgIGNvbnN0IGFuc3dlckRldGFpbHNPYmogPSB0eXBlb2Ygb2JqLmFuc3dlckRldGFpbHMgPT09ICJzdHJpbmciID8gb2JqLmFuc3dlckRldGFpbHMudG9Mb3dlckNhc2UoKSA6IGAke29iai5hbnN3ZXJEZXRhaWxzfWAudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gYCR7IGludGVyZXN0Q29kZU9iaiB9IC0gJHsgYW5zd2VyRGV0YWlsc09iaiB9YCA9PSBfdmFsdWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgIH0pXTsKICAgIAogICAgaWYgKGVycm9ycy5zaXplKSB7CiAgICAgICAgbGV0IGVycm9yTWVzc2FnZSA9ICIiOwogICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBlcnJvcnMpIHsKICAgICAgICAgICAgaWYgKGVycm9yTWVzc2FnZSAmJiBlcnJvck1lc3NhZ2UubGVuZ3RoKSBlcnJvck1lc3NhZ2UgKz0gYCwgJHtpdGVtfWA7CiAgICAgICAgICAgIGVsc2UgZXJyb3JNZXNzYWdlID0gaXRlbTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGVycm9yTWVzc2FnZTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIF9yZXN1bHQ7CiAgICB9Cn0=",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["6A. Remove Fields"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "Upload to Blob Storage",
          "type": "datasource.write.azure.blob_token",
          "params": {
            "baseUri": "https://ciamprblobdataplatform.blob.core.windows.net",
            "accessToken": "********",
            "container": "{{AZURE_CONTAINER_IMPORT_ERROR}}"
          }
        }
      ],
      "version": 1,
      "createTime": "2024-10-15T09:59:15.822Z",
      "updateTime": "2024-10-15T09:59:15.822Z",
      "updatedByEmail": "l.marques@sap.com"
    },
    {
      "apiKey": "4_6Tv6z8O6NmUO_BZoHcXIRw",
      "siteId": 435061734600,
      "id": "288fa6ee2d644115aa039ec89e92406a",
      "name": "[LITE ACCOUNTS] - Import from DQV (BLOB STORAGE)",
      "status": "published",
      "description": "[LITE ACCOUNTS] - Import from DQV (BLOB STORAGE)",
      "steps": [
        {
          "id": "2. Decrypt PGP",
          "type": "file.decrypt.pgp",
          "params": {
            "pgpKey.importedPrivateKey": "",
            "pgpKey": "LS0tLS1CRUdJTiBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tCgptUUlOQkYwSG5iRUJFQUN5WHUrekJzanYveUlpNkFYSFBnL081b2VnRGVDTTRMaDMxY2xMMVhjK0J0dWFQb1B0CktVRHJLQXVhR1Q4cngzNGlzeExYdmJvSTVFRU96NTd5VEVxWDhMTHFadlY4U1ZFZUtVdzE1WVhKVkpFVDhFWXIKVTV0TmVvK0Zpajd1elEwWHV3a0JTOGpxMERGcFRUeXl1c3ZreHRtZWNnQW85a3FlQ0JmOEF3V0EwSXpiRmptTwpSbVBYSTBjYmMyWWplVXZ1WUkyOXVOa2hMbUM5VFVDcU9jMFlTaDJDWVZ6a3hBZjF5dGVOZ1BtQkVnRTBWNmFiCmlDMFhlSERBSTN0Z3ZxV2c0Nk8rWFNDTXZTclVndXV3aXRpbmtObXB5SWtadnFvWE9kUmtBN0hCcmc1VVRqVEMKOFM5L3lHMlF3anNvRUtRRmxhWHM2NzZJdTBwaTM2K1l0RHVuYnNITlZmbnEraSt5ZHFEcmlPRDZhRmpXNEFVYQp2NTNwOVJQQXEydDdCVnN0SklieHV2TWRRcDJJOEp0MW12NXFTeHJBOVZTeU9BMXFMcUl4NHd4T0t0RlhXZXJhCnFmVkRaV3RtS0NkQytPREpnbnVHMHdTRkQyRFY2WHN3YTNkdXJ4Sk5RaEZpc2JpTXJJTjZhc0dzSU5WUm9YNmEKd1hROEU2K2cyTjdKbitCeHpkNDllZ2h1Z3k2dHR4KzNjbTBJQ2lYVTVJRTZyZVdnNTVFU2cxdzQ4S3B1SmVtMwo2TWhUUEUwcksyY0c2em5FZUV0R0dFTzhxcXBtRDVjbmUzVzJRdGhJL3duVTR4aitpSXJaV0NSbCtYZkdlc2xYCjZkNDVMSTZBK3BpTGRkaVdUSWFZSzQ1OHVrVnFreTRRUm5SZVpqT3ZzbDY0bVlGdDFPYnlpSWhlc3dBUkFRQUIKdEIxRFNVRk5JRWx0Y0c5eWRDQThZMmxoYlVCdVpYTjBiR1V1WTI5dFBva0NUZ1FUQVFnQU9CWWhCQ2U3WkxlLwpxb2Qva2hYQUd5clJ3MnJFdzd6cUJRSmRCNTJ4QWhzREJRc0pDQWNDQmhVS0NRZ0xBZ1FXQWdNQkFoNEJBaGVBCkFBb0pFQ3JSdzJyRXc3enEwK0FQL1J0TldyR0xwK3BSV09IU1BNRlNoUUJBU1FZdUk5Sk5Sdk9vM3FhVnRpaTcKNHlvZzVKSVZ2M2VBS0tmVThhZjVPOEl6eXZKaWdoOEpTd1Blc2UzQldnT2M2amYrRStCZkdLa0ZBMGFyVFAvNgpLV0NGUzR0ZlA4VkpwVVBzVkUwbS9lanNRK0wzNW5hb0FUUnIrRmtKN0VBRldZVzhYT0xPOU94dGZDOVYyV3B0CkJQRDRmVUFXZXArQnB5ZTN3ZXBSVFNOelhHbkhKS0FjaEVCcUc1NjRTRmVCNWN2RXcydnE2RytNeTZ1MDdnRHMKZ1BUVzE4NnNrWkk2YkFOWEJucjVSaFg1YzBIRlRaNlZXTEJxYTI0U0pXNnVsemxmZWtpQlY3d0RDakxFbUljVQpId3JDSjhsSkh0dEcxT2JNYjBUT3pEb2I4anVSM1JWUFp0MzhXa3hwS0s1RmowbGlYeHgycWlacEtIN2RWYzRlCmZLNnZkWUJNcUZkL3B3SlpvOW12cHUwYTA1Nm9lMVhTcTRzbWxmalJ3WDhYMDRzb01USTEvbUxFK1c1aWJEREEKQ0tsQlNsSC9NZHdTTlQ1SXV4TzFxdUdjMjBKQ0x2WVF3OUhWVXNTMjV5NHhzNTZqa3U2MkVuZFJYZHFVM0FuSgp3TnBCOCtoNEVHVnFERmQybFVOV1hveUxZSk5IblcyUDZ6MlRyZ00wWWpqazRrTzQ2VWdzL1Zkcmd3czAzYUU3CjcwbDh3aHJLSm1GR1hJYWtJYk9qeENuRG4zaW5IV3ZGNUQ5dHkxanVkZ3dtY01rTE1OWnJ5SjEwbXRMWDlRbUkKVlRWekdRQ1RqL3laNmxGb1B5YkV0YTc3Z0N2ZlV6MEZYeEp6bzJCSjAycUdzSE1za3NJN2xqYmNSVE5IMVF6VAp1UUlOQkYwSG5iRUJFQURPVkVxeCtONWhNTHlpZEt3TjY3emN4SUVOalo2N0JPcjhOcjYydEFTY0Q2SnFMaTBvCml4b08zdUs0ZVI3YW9vWjVuMExER2hSNUVtQkZEdGVsY2VIR0dLYmFVcjRwNEt4NUdhKy8wWXlsN3lHZzNIMjEKMk1ub3lWS1NnUmVwMis3QVpPbHdWL1dablk1YmxmN0Jua21lSXowOTRodFE1T1BMa3NVUWZxZUZKemc1WmhUKwpSRzlOTUY1OE1xd2d1U3VldWVBa1JBc3NldncvSW9jbE05cHUyTEh3d0lmNHFKbG5iMEt6K3RQQjdqendPR2tCCjVOR2FIUXkvcjh2eTlIaThiSzNrWk8xK0FZcm5jdmdHSDJkUi9KRVlXU2MzWmlQZXQ2bDFWT3RPK3NlMVkzdjIKblQ1NW9UZDlRV2lkbFNPeGxiQStrckVtRDRuMUxIbHhPQit1MzRMQk1LLy9pWk1Hb0RpZUNTTHFSdlNONkRwZQo4d2J5SlQ4Mm9ITEtxN2lyYTNmeXA3blR0UUNneEdZMmVhUGU1NkVVc0FOakEvWjQyS3c4ZGRpeFFFR2paMHRrCkVXMEhNWVA2UjZlaFc4ODBFSjYxeWFhYXlJbE1zN0FEdlV4SjgzWmxReFhXVVdiMExweFRLRXdEemRlNkZxMEsKQUxzcXZOdGdhSXNXNzlYeVBRRkNqSnR6Y0JwUmJwQWo5bEl3UXU3L1lVM0E0TzBXWTBGYnNoQmxhaXlXMHI2cQo3cit2ZzE5OVovTld5SlhiUy9Ob01nZjdlSzdZL2JxOTA2VkFqVXBvUG1HdmRWMmFndzE1S29XaUZ2MU9NZi9vClVBS2tnN29ZcEdSVW9ybU9XcC8wYTUwemhpc1VCTjR0Qi9qZnkyNHJmVmR3ckRCeDNEbHNNRE90MVFBUkFRQUIKaVFJMkJCZ0JDQUFnRmlFRUo3dGt0NytxaDMrU0ZjQWJLdEhEYXNURHZPb0ZBbDBIbmJFQ0d3d0FDZ2tRS3RIRAphc1REdk9vak5SQUFpMWpzQWtheTA1eG51bU40b0J3TGpoczJUbEp6QjJqTEdmWVYvMzBQZHZWeTFrc1hHbmVaClV6a1ZRUGlqYWZlV3dGQTQwMzFSWG11b2lmczM5b0Zvek5yeXZYNTJ5WlV4a0hSMVRlbThNbzZCUmhYR2J5alcKNkZXMnJ1bFE5VUM0bEZzbUdzc2xQeGtnWVdOaE5nSlFFMTBJWHhkVGtWMnBjZndMNE9sK2YvWnpZVmV6WjliWgpqUHJxaExkcUwwWkJZV05CTnYxbVAyNlVmbTJkNnhwcGJxSGxabHplNEJVM1JwM0R2aWhzU2Frd0FiRnJQVVViClJ1dXJ1dHJ0K1pvMTY0M0VSWFo5eXpWQmZXWFU2UkU2QVVQL2RJZjlhdlV3REJpQllGc056UXlvZXovU213NzQKN0JqQU1pK1JSWDIzcCtpWVhzdm1yMjBFWGpmd3laRVhYcGVHNVhXYi9FeGNJbGIwN0hKNTl1ZHl5ODVPOFN1VgpXaWxNTFVaZUQvejhRZFhwMUdQMGI3L2dWbExCYjBTMEl5RmZwcjZJRlB5TU5pR3FOVGpqdVltV0FvODVNQzY4Cm9Bb2dCYUJHcGJmNk10TFMzMzcxcTNpR0NuTU9SaDJ6TWsvZDRLSkV5bkQ4Nm9qZHg0Z0V2R2dvK0g1M2d4ckkKOEp6MXZ5QXl5UzAzODc0M1RoVGFsck9yWVg5UnVxUWIySXVRRVh6YUhMUjdUYUxKbnRDdU5tQ00xTG5QUisxeApvSmpHSDhJOHdEdnkvS0tENjAyV2pyWjdJTnNHZzgrcndPeWxvTmcybXJ1U052VnVmaklFTDUzUnRBOHgreVlpCk1wakRLL2I4VmdYZHV6Myt2b2pka1FNeVJLM2NEYVJoV0hyS0JvVzNOVFk5Q251U2tJMWlvUUU9Cj1pMDlqCi0tLS0tRU5EIFBHUCBQVUJMSUMgS0VZIEJMT0NLLS0tLS0="
          },
          "next": ["3. Parse JSON"]
        },
        {
          "id": "3. Parse JSON",
          "type": "file.parse.json",
          "params": {
            "addFilename": false
          },
          "next": ["3. Rename Fields To Merge"]
        },
        {
          "id": "8. Evaluate Subscriptions & Preferences",
          "type": "field.evaluate",
          "params": {
            "fields": [
              {
                "expression": "subscriptions eq null || subscriptions eq ''? '{}' : subscriptions",
                "field": "subscriptions"
              }
            ],
            "language": "jexl"
          },
          "next": ["9. Import lite account"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "9. Import lite account",
          "type": "datasource.write.gigya.generic",
          "params": {
            "apiMethod": "accounts.importLiteAccount",
            "maxConnections": 20,
            "addResponse": true,
            "apiParams": [
              {
                "sourceField": "email",
                "paramName": "email",
                "value": ""
              },
              {
                "sourceField": "data",
                "paramName": "data",
                "value": ""
              },
              {
                "sourceField": "profile",
                "paramName": "profile",
                "value": ""
              },
              {
                "sourceField": "subscriptions",
                "paramName": "subscriptions",
                "value": ""
              }
            ]
          },
          "next": ["10A. Check if Preferences exists"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "4A. Existing Accounts",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "profile.email,data.areaOfInterest,data.pet,data.child,data.externalApplication,lastUpdated,data.initialAppSourceCode,UID",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "remove",
            "lookupFields": [
              {
                "sourceField": "profile.email",
                "gigyaField": "profile.email"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "process",
            "isCaseSensitive": false,
            "from": "emailAccounts",
            "batchSize": 200,
            "maxConcurrency": 1,
            "multiMatchBehavior": "error"
          },
          "next": ["5A. Perform Merge Logic", "Prepare existent accounts to extract"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "4B. New Accounts",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "profile.email",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "process",
            "lookupFields": [
              {
                "sourceField": "profile.email",
                "gigyaField": "profile.email"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "remove",
            "isCaseSensitive": false,
            "from": "emailAccounts",
            "batchSize": 200,
            "maxConcurrency": 1,
            "multiMatchBehavior": "error"
          },
          "next": ["5B. Rename Fields"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "3. Rename Fields To Merge",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "data.areaOfInterest",
                "targetField": "data._areaOfInterest"
              },
              {
                "sourceField": "data.pet",
                "targetField": "data._pet"
              },
              {
                "sourceField": "data.child",
                "targetField": "data._child"
              },
              {
                "sourceField": "data.externalApplication",
                "targetField": "data._externalApplication"
              },
              {
                "sourceField": "lastUpdated",
                "targetField": "_lastUpdated"
              },
              {
                "sourceField": "data.initialAppSourceCode",
                "targetField": "data._initialAppSourceCode"
              },
              {
                "sourceField": "subscriptions",
                "targetField": "_subscriptions"
              }
            ]
          },
          "next": ["4A. Existing Accounts", "4B. New Accounts"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "5A. Perform Merge Logic",
          "type": "record.evaluate",
          "params": {
            "script": "",
            "notifyLastRecord": false,
            "ECMAScriptVersion": "12"
          },
          "next": ["5A bis. Perform Merge Area of Interest Logic"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "5B. Rename Fields",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "data._areaOfInterest",
                "targetField": "data.areaOfInterest"
              },
              {
                "sourceField": "data._child",
                "targetField": "data.child"
              },
              {
                "sourceField": "data._pet",
                "targetField": "data.pet"
              },
              {
                "sourceField": "data._externalApplication",
                "targetField": "data.externalApplication"
              },
              {
                "sourceField": "_lastUpdated",
                "targetField": "lastUpdated"
              },
              {
                "sourceField": "data._initialAppSourceCode",
                "targetField": "data.initialAppSourceCode"
              }
            ]
          },
          "next": ["6B. Set Standard Data"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "11. Lite InitRegistrationgigya.generic",
          "type": "datasource.write.gigya.generic",
          "params": {
            "apiMethod": "accounts.initRegistration",
            "maxConnections": 10,
            "apiParams": [
              {
                "sourceField": "",
                "paramName": "isLite",
                "value": "true"
              }
            ],
            "addResponse": true
          },
          "next": ["12. setAccountInfo"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "12. setAccountInfo",
          "type": "datasource.write.gigya.generic",
          "params": {
            "apiMethod": "accounts.setAccountInfo",
            "maxConnections": 20,
            "addResponse": true,
            "apiParams": [
              {
                "sourceField": "profile",
                "paramName": "profile",
                "value": ""
              },
              {
                "sourceField": "_response.regToken",
                "paramName": "regToken",
                "value": ""
              },
              {
                "sourceField": "preferences",
                "paramName": "preferences",
                "value": ""
              },
              {
                "sourceField": "lang",
                "paramName": "lang",
                "value": ""
              }
            ]
          },
          "next": [],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "6A. Remove Fields",
          "type": "field.remove",
          "params": {
            "fields": ["data._areaOfInterest", "data._child", "data._pet", "data._externalApplication", "_lastUpdated", "data._initialAppSourceCode", "_subscriptions"]
          },
          "next": ["7. Add data.idxImportJobId"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "10A. Check if Preferences exists",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgaWYocmVjb3JkICYmIHJlY29yZC5wcmVmZXJlbmNlcykgew0KICAgICAgICBpZiAocmVjb3JkLnByZWZlcmVuY2VzICYmICFyZWNvcmQubGFuZykgew0KICAgICAgICAgICAgaWYgKHJlY29yZC5wcm9maWxlICYmIHJlY29yZC5wcm9maWxlLmxvY2FsZSkgew0KICAgICAgICAgICAgICAgIHJlY29yZC5sYW5nID0gcmVjb3JkLnByb2ZpbGUubG9jYWxlOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgIHJlY29yZC5sYW5nID0gImVuIjsgDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIHJlY29yZDsNCiAgICB9DQp9",
            "notifyLastRecord": false,
            "ECMAScriptVersion": "12"
          },
          "next": ["11. Lite InitRegistrationgigya.generic"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "6B. Set Standard Data",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQoNCiAgICAvLyBzZXQgZGF0YS5jaGlsZFtdLmFwcGxpY2F0aW9uSW50ZXJuYWxJZGVudGlmaWVyDQogICAgaWYgKHJlY29yZC5kYXRhLmNoaWxkICYmIHJlY29yZC5kYXRhLmNoaWxkLmxlbmd0aCA+IDApew0KICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8ICByZWNvcmQuZGF0YS5jaGlsZC5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgaWYoIWNoZWNrVVVJRChyZWNvcmQuZGF0YS5jaGlsZFtpXVsiYXBwbGljYXRpb25JbnRlcm5hbElkZW50aWZpZXIiXSkpew0KICAgICAgICAgICAgICAgIHJlY29yZC5kYXRhLmNoaWxkW2ldWyJhcHBsaWNhdGlvbkludGVybmFsSWRlbnRpZmllciJdID0gZ2VuZXJhdGVVVUlEKCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQogICAgDQogICAgIC8vIHNldCBkYXRhLnBldFtdLmFwcGxpY2F0aW9uSW50ZXJuYWxJZGVudGlmaWVyDQogICAgaWYgKHJlY29yZC5kYXRhLnBldCAmJiByZWNvcmQuZGF0YS5wZXQubGVuZ3RoID4gMCl7DQogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgIHJlY29yZC5kYXRhLnBldC5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgaWYoIWNoZWNrVVVJRChyZWNvcmQuZGF0YS5wZXRbaV1bImFwcGxpY2F0aW9uSW50ZXJuYWxJZGVudGlmaWVyIl0pKXsNCiAgICAgICAgICAgICAgICByZWNvcmQuZGF0YS5wZXRbaV1bImFwcGxpY2F0aW9uSW50ZXJuYWxJZGVudGlmaWVyIl0gPSBnZW5lcmF0ZVVVSUQoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCiAgICANCiAgICBpZiAocmVjb3JkLnByZWZlcmVuY2VzKSB7DQogICAgICAgIA0KICAgICAgICBmb3IgKHZhciBrZXkgaW4gcmVjb3JkLnByZWZlcmVuY2VzKSB7DQogICAgICAgICAgICBpZiAoa2V5ICE9ICJ0ZXJtcyIgJiYga2V5ICE9ICJwcml2YWN5IikNCiAgICAgICAgICAgICAgICByZWNvcmQucHJlZmVyZW5jZXNba2V5XS5jdXN0b21EYXRhID0gbnVsbDsNCiAgICAgICAgICAgIA0KICAgICAgICB9ICAgDQoNCiAgICAgICAgaWYgKHJlY29yZC5wcmVmZXJlbmNlcy50ZXJtcykgew0KICAgICAgICAgICAgZm9yICh2YXIgdGVybXNLZXkgaW4gcmVjb3JkLnByZWZlcmVuY2VzLnRlcm1zKSB7DQogICAgICAgICAgICAgICAgcmVjb3JkLnByZWZlcmVuY2VzLnRlcm1zW3Rlcm1zS2V5XS5jdXN0b21EYXRhID0gbnVsbDsNCiAgICAgICAgICAgIH0gICAgICAgIA0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKHJlY29yZC5wcmVmZXJlbmNlcy5wcml2YWN5KSB7DQogICAgICAgICAgICBmb3IgKHZhciBwcml2YWN5S2V5IGluIHJlY29yZC5wcmVmZXJlbmNlcy5wcml2YWN5KSB7DQogICAgICAgICAgICAgICAgcmVjb3JkLnByZWZlcmVuY2VzLnByaXZhY3lbcHJpdmFjeUtleV0uY3VzdG9tRGF0YSA9IG51bGw7DQogICAgICAgICAgICB9ICAgICAgICANCiAgICAgICAgfQ0KICAgIH0NCiAgICANCiAgICByZWNvcmQuc3Vic2NyaXB0aW9ucyA9IHt9Ow0KICAgIGlmIChyZWNvcmQuX3N1YnNjcmlwdGlvbnMpIHsNCiAgICAgICAgZm9yICh2YXIgc3ViS2V5IGluIHJlY29yZC5fc3Vic2NyaXB0aW9ucykgew0KICAgICAgICAgICAgaWYgKHJlY29yZC5fc3Vic2NyaXB0aW9uc1tzdWJLZXldLmVtYWlsKSB7DQogICAgICAgICAgICAgICAgaWYgKCJ0cnVlIiA9PSAie3tET1VCTEVfT1BUX0lOfX0iKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChyZWNvcmQuX3N1YnNjcmlwdGlvbnNbc3ViS2V5XS5lbWFpbC5kb3VibGVPcHRJbiAmJiByZWNvcmQuX3N1YnNjcmlwdGlvbnNbc3ViS2V5XS5lbWFpbC5kb3VibGVPcHRJbi5zdGF0dXMgJiYgcmVjb3JkLl9zdWJzY3JpcHRpb25zW3N1YktleV0uZW1haWwuZG91YmxlT3B0SW4uc3RhdHVzID09PSAiQ29uZmlybWVkIikgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3JkID0gcHJvY2Vzc1N1YnNjcmlwdGlvbnMocmVjb3JkLCBzdWJLZXkpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFyZWNvcmQuX3N1YnNjcmlwdGlvbnNbc3ViS2V5XS5lbWFpbC5kb3VibGVPcHRJbiB8fCAocmVjb3JkLl9zdWJzY3JpcHRpb25zW3N1YktleV0uZW1haWwuZG91YmxlT3B0SW4uc3RhdHVzICYmIHJlY29yZC5fc3Vic2NyaXB0aW9uc1tzdWJLZXldLmVtYWlsLmRvdWJsZU9wdEluLnN0YXR1cyA9PT0gIkNvbmZpcm1lZCIpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZWNvcmQgPSBwcm9jZXNzU3Vic2NyaXB0aW9ucyhyZWNvcmQsIHN1YktleSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQogICAgDQogICAgcmV0dXJuIHJlY29yZDsNCn0NCg0KZnVuY3Rpb24gcHJvY2Vzc1N1YnNjcmlwdGlvbnMocmVjb3JkLCBzdWJLZXkpIHsNCiAgICByZWNvcmQuc3Vic2NyaXB0aW9uc1tzdWJLZXldID0gcmVjb3JkLl9zdWJzY3JpcHRpb25zW3N1YktleV07DQogICAgDQogICAgaWYgKHJlY29yZC5zdWJzY3JpcHRpb25zW3N1YktleV0uZW1haWwuZG91YmxlT3B0SW4pIHsNCiAgICAgICAgdmFyIGRvaUNvbmRpdGlvbmFsbHlDb25maXJtZWQgPSByZWNvcmQuc3Vic2NyaXB0aW9uc1tzdWJLZXldLmVtYWlsLmRvdWJsZU9wdEluLmRvaUNvbmRpdGlvbmFsbHlDb25maXJtZWQ7DQogICAgICAgIGRvaUNvbmRpdGlvbmFsbHlDb25maXJtZWQgPSAoZG9pQ29uZGl0aW9uYWxseUNvbmZpcm1lZCAhPT0gbnVsbCAmJiBkb2lDb25kaXRpb25hbGx5Q29uZmlybWVkICE9PSB1bmRlZmluZWQpDQogICAgICAgICAgICA/IHR5cGVvZiBkb2lDb25kaXRpb25hbGx5Q29uZmlybWVkID09PSAiYm9vbGVhbiIgPyBkb2lDb25kaXRpb25hbGx5Q29uZmlybWVkIDogZG9pQ29uZGl0aW9uYWxseUNvbmZpcm1lZCA9PSAidHJ1ZSINCiAgICAgICAgICAgIDogbnVsbDsNCg0KICAgICAgICBzd2l0Y2ggKGRvaUNvbmRpdGlvbmFsbHlDb25maXJtZWQpIHsNCiAgICAgICAgICAgIGNhc2UgdHJ1ZToNCiAgICAgICAgICAgICAgICByZWNvcmQuc3Vic2NyaXB0aW9uc1tzdWJLZXldLmVtYWlsLmRvdWJsZU9wdEluLmlzRXh0ZXJuYWxseVZlcmlmaWVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgIGNhc2UgZmFsc2U6DQogICAgICAgICAgICAgICAgcmVjb3JkLnN1YnNjcmlwdGlvbnNbc3ViS2V5XS5lbWFpbC5kb3VibGVPcHRJbi5pc0V4dGVybmFsbHlWZXJpZmllZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgY2FzZSBudWxsOg0KICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICB9DQogICAgICAgIA0KICAgICAgICB2YXIgb2JqZWN0ID0ge307DQogICAgICAgIGZvciAodmFyIGtleSBpbiByZWNvcmQuc3Vic2NyaXB0aW9uc1tzdWJLZXldLmVtYWlsLmRvdWJsZU9wdEluKSB7DQogICAgICAgICAgICBpZiAoa2V5ICE9PSAnZG9pQ29uZGl0aW9uYWxseUNvbmZpcm1lZCcpIHsNCiAgICAgICAgICAgICAgICBvYmplY3Rba2V5XSA9IHJlY29yZC5zdWJzY3JpcHRpb25zW3N1YktleV0uZW1haWwuZG91YmxlT3B0SW5ba2V5XTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJlY29yZC5zdWJzY3JpcHRpb25zW3N1YktleV0uZW1haWwuZG91YmxlT3B0SW4gPSBvYmplY3Q7DQogICAgfQ0KICAgIA0KICAgIC8vU1RBUlQgLSBNU0NORC0zOTE3MiAtIENoYW5nZSBvbiBpbXBvcnRpbmcgc3Vic2NyaXB0aW9ucyB0byBleGlzdGluZyBhY2NvdW50cw0KICAgIGlmIChyZWNvcmQ/LnN1YnNjcmlwdGlvbnM/LltzdWJLZXldPy5lbWFpbD8ubGFzdFVwZGF0ZWRTdWJzY3JpcHRpb25TdGF0ZSAmJg0KICAgIGlzRGF0ZUluRnV0dXJlKHJlY29yZC5zdWJzY3JpcHRpb25zW3N1YktleV0uZW1haWwubGFzdFVwZGF0ZWRTdWJzY3JpcHRpb25TdGF0ZSkpIHsNCiAgICAgICAgZGVsZXRlIHJlY29yZC5zdWJzY3JpcHRpb25zW3N1YktleV0uZW1haWwubGFzdFVwZGF0ZWRTdWJzY3JpcHRpb25TdGF0ZTsNCiAgICB9DQogICAgLy9FTkQgLSBNU0NORC0zOTE3MiAtIENoYW5nZSBvbiBpbXBvcnRpbmcgc3Vic2NyaXB0aW9ucyB0byBleGlzdGluZyBhY2NvdW50cw0KDQogICAgcmV0dXJuIHJlY29yZDsNCn0NCg0KLy9TVEFSVCAtIE1TQ05ELTM5MTcyIC0gQ2hhbmdlIG9uIGltcG9ydGluZyBzdWJzY3JpcHRpb25zIHRvIGV4aXN0aW5nIGFjY291bnRzDQpmdW5jdGlvbiBpc0RhdGVJbkZ1dHVyZShkYXRlU3RyaW5nKSB7DQogIC8vIFBhcnNlIHRoZSBnaXZlbiBkYXRlIHN0cmluZyBpbnRvIGEgRGF0ZSBvYmplY3QNCiAgY29uc3QgZ2l2ZW5EYXRlID0gbmV3IERhdGUoZGF0ZVN0cmluZyk7DQogIA0KICAvLyBHZXQgdGhlIGN1cnJlbnQgZGF0ZSBhbmQgdGltZQ0KICBjb25zdCBjdXJyZW50RGF0ZSA9IG5ldyBEYXRlKCk7DQogIA0KICAvLyBDb21wYXJlIHRoZSBnaXZlbiBkYXRlIHdpdGggdGhlIGN1cnJlbnQgZGF0ZQ0KICByZXR1cm4gZ2l2ZW5EYXRlID4gY3VycmVudERhdGU7DQp9DQovL0VORCAtIE1TQ05ELTM5MTcyIC0gQ2hhbmdlIG9uIGltcG9ydGluZyBzdWJzY3JpcHRpb25zIHRvIGV4aXN0aW5nIGFjY291bnRzDQoNCmZ1bmN0aW9uIGNoZWNrVVVJRCh1dWlkKSB7DQogICAgY29uc3QgcmVnZXggPSAvXlswLTlhLWZdezh9LVswLTlhLWZdezR9LTRbMC05YS1mXXszfS1bODlhYl1bMC05YS1mXXszfS1bMC05YS1mXXsxMn0kL2k7DQogICAgcmV0dXJuIHJlZ2V4LnRlc3QodXVpZCk7DQp9DQoNCmZ1bmN0aW9uIGdlbmVyYXRlVVVJRCgpIHsNCiAgIHZhciBkID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7DQogICB2YXIgdXVpZCA9ICJ4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHgiLnJlcGxhY2UoL1t4eV0vZywgZnVuY3Rpb24oYykgew0KICAgICAgIHZhciByID0gKGQgKyBNYXRoLnJhbmRvbSgpKjE2KSUxNiB8IDA7DQogICAgICAgZCA9IE1hdGguZmxvb3IoZC8xNik7DQogICAgICAgICAgICByZXR1cm4gKGM9PSJ4IiA/IHIgOiAociYweDN8MHg4KSkudG9TdHJpbmcoMTYpOw0KICAgIH0pOw0KICAgIHJldHVybiB1dWlkOw0KfQ==",
            "notifyLastRecord": false,
            "ECMAScriptVersion": "12"
          },
          "next": ["6B bis. Set standard Area of Interest"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "1. Read From Blob Storage",
          "type": "datasource.read.azure.blob_token",
          "params": {
            "baseUri": "{{AZURE_BASE_URI}}",
            "accessToken": "********",
            "container": "{{AZURE_CONTAINER}}",
            "blobPrefix": "{{AZURE_BLOB_PREFIX}}"
          },
          "next": ["2. Decrypt PGP"]
        },
        {
          "id": "Prepare fields to extract email",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgdmFyIHJlY29yZFRvRXh0cmFjdCA9IHt9Ow0KICAgIHJlY29yZFRvRXh0cmFjdC5lbWFpbCA9IHJlY29yZC5lbWFpbDsNCiAgICBpZiAocmVjb3JkLlVJRCAmJiByZWNvcmQuVUlELmxlbmd0aCkgew0KICAgICAgICByZWNvcmRUb0V4dHJhY3QuVUlEID0gcmVjb3JkLlVJRDsNCiAgICB9DQogICAgDQogICAgcmVjb3JkVG9FeHRyYWN0LmVycm9yRGV0YWlscyA9IHJlY29yZC5fZXJyb3JEZXRhaWxzOw0KDQogICAgcmV0dXJuIHJlY29yZFRvRXh0cmFjdDsNCn0=",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["Generate file"]
        },
        {
          "id": "Generate file",
          "type": "file.format.json",
          "params": {
            "fileName": "{{AZURE_ERRORS_FILENAME}}_${now:yyMMddHHmm}.json",
            "maxFileSize": 5000,
            "createEmptyFile": false
          },
          "next": ["Encrypt file"]
        },
        {
          "id": "Encrypt file",
          "type": "file.encrypt.pgp",
          "params": {
            "publicKey": "{{PGP_Public_Key_Base64_Encoded}}",
            "asciiArmor": true
          },
          "next": ["Upload to Blob Storage"]
        },
        {
          "id": "Prepare existent accounts to extract",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgdmFyIG5ld1JlY29yZCA9IHsNCiAgICAgICAgIlVJRCI6IHJlY29yZC5VSUQsDQogICAgICAgICJlbWFpbCI6IHJlY29yZC5wcm9maWxlLmVtYWlsDQogICAgfTsNCiAgICANCiAgICBpZiAocmVjb3JkLmRhdGEuaW5pdGlhbEFwcFNvdXJjZUNvZGUpIHsNCiAgICAgICAgbmV3UmVjb3JkLmluaXRpYWxBcHBTb3VyY2VDb2RlID0gcmVjb3JkLmRhdGEuaW5pdGlhbEFwcFNvdXJjZUNvZGU7DQogICAgfQ0KICAgIA0KICAgIGlmIChyZWNvcmQuZGF0YS5saXRlQXBwU291cmNlQ29kZSkgew0KICAgICAgICBuZXdSZWNvcmQubGl0ZUFwcFNvdXJjZUNvZGUgPSByZWNvcmQuZGF0YS5saXRlQXBwU291cmNlQ29kZTsNCiAgICB9DQogICAgDQogICAgcmV0dXJuIG5ld1JlY29yZDsNCn0=",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["Generate Existent Accounts File"]
        },
        {
          "id": "Generate Existent Accounts File",
          "type": "file.format.json",
          "params": {
            "fileName": "{{AZURE_EXISTENT_ACCOUNTS_FILENAME}}_${now:yyMMddHHmm}.json",
            "maxFileSize": 5000,
            "createEmptyFile": false
          },
          "next": ["Encrypt file"]
        },
        {
          "id": "7. Add data.idxImportJobId",
          "type": "field.add",
          "params": {
            "fields": [
              {
                "field": "data.idxImportJobId",
                "value": "${jobId}"
              }
            ]
          },
          "next": ["8. Evaluate Subscriptions & Preferences"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "6B bis. Set standard Area of Interest",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0LCBlcnJvcikgew0KICAgIC8vYXZvaWQgcmVwZWF0ZWQgaW50ZXJlc3RDb2Rlcy1hbnN3ZXJEZXRhaWxzIG9uIGFyZWEgb2YgaW50ZXJlc3QNCiAgICBjb25zdCBlcnJvcnMgPSBuZXcgU2V0KCk7DQoNCiAgICBpZiAocmVjb3JkLmRhdGEuYXJlYU9mSW50ZXJlc3QgJiYgcmVjb3JkLmRhdGEuYXJlYU9mSW50ZXJlc3QubGVuZ3RoID4gMCl7DQogICAgICAgIHJlY29yZC5kYXRhLmFyZWFPZkludGVyZXN0ID0gWy4uLnJlY29yZC5kYXRhLmFyZWFPZkludGVyZXN0LmZpbHRlcigodmFsdWUsIGluZGV4KSA9PiB7DQogICAgICAgICAgICBpZiAoIXZhbHVlLmludGVyZXN0Q29kZSB8fCAhdmFsdWUuYW5zd2VyRGV0YWlscykgew0KICAgICAgICAgICAgICAgIGVycm9ycy5hZGQoYEludmFsaWQgcmVjb3JkIHNlbnQuIFRoZSByZWNvcmQgaGFzIGFuIGludGVyZXN0IHdpdGhvdXQgaW50ZXJlc3RDb2RlIG9yIHdpdGhvdXQgYW5zd2VyRGV0YWlscy5gKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgY29uc3QgX3ZhbHVlID0gYCR7dmFsdWUuaW50ZXJlc3RDb2RlLnRvTG93ZXJDYXNlKCl9IC0gJHt2YWx1ZS5hbnN3ZXJEZXRhaWxzLnRvTG93ZXJDYXNlKCl9YDsNCiAgICAgICAgICAgICAgICByZXR1cm4gaW5kZXggPT09IHJlY29yZC5kYXRhLmFyZWFPZkludGVyZXN0LmZpbmRJbmRleChvYmogPT4gew0KICAgICAgICAgICAgICAgICAgICBpZiAoIW9iai5pbnRlcmVzdENvZGUgfHwgIW9iai5hbnN3ZXJEZXRhaWxzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBlcnJvcnMuYWRkKGBJbnZhbGlkIHJlY29yZCBzZW50LiBUaGUgcmVjb3JkIGhhcyBhbiBpbnRlcmVzdCB3aXRob3V0IGludGVyZXN0Q29kZSBvciB3aXRob3V0IGFuc3dlckRldGFpbHMuYCk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYCR7b2JqLmludGVyZXN0Q29kZS50b0xvd2VyQ2FzZSgpfSAtICR7b2JqLmFuc3dlckRldGFpbHMudG9Mb3dlckNhc2UoKX1gID09IF92YWx1ZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9KV07DQogICAgfQ0KICAgIGlmIChlcnJvcnMuc2l6ZSkgew0KICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgZXJyb3JzKSB7DQogICAgICAgICAgICBpZiAocmVjb3JkLl9lcnJvckRldGFpbHMgJiYgcmVjb3JkLl9lcnJvckRldGFpbHMubGVuZ3RoKSByZWNvcmQuX2Vycm9yRGV0YWlscyArPSBgLCAke2l0ZW19YDsNCiAgICAgICAgICAgIGVsc2UgcmVjb3JkLl9lcnJvckRldGFpbHMgPSBpdGVtOw0KICAgICAgICB9DQogICAgICAgIGVycm9yLmFjY2VwdChyZWNvcmQsIHJlY29yZCk7DQogICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIHJlY29yZDsNCiAgICB9DQp9",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["6A. Remove Fields"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "5A bis. Perform Merge Area of Interest Logic",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0LCBlcnJvcikgewogICAgLy8gSWYgc2V0IHRvIHRydWUgdGhlIHJlY29yZCB3aWxsIGJlIHByb2Nlc3NlZCBvbmx5IGlmIHRoZSBsYXN0VXBkYXRlIGluIHRoZSBmaWxlIGlzID4gbGFzdHVwZGF0ZSBpbiBTQVAtQ0RDLiBJZiBzZXQgdG8gZmFsc2UgdGhlIHJlY29yZCB3aWxsIGJlIGFsd2F5cyBwcm9jZXNzZWQuCiAgICB2YXIgY2hlY2tMYXN0VXBkYXRlZCA9IGZhbHNlOwogICAgLy8gSWYgc2V0IHRvIHRydWUgd2Ugd2lsbCBhcHBseSB0aGUgbWVyZ2UgbG9naWMgZm9yIHRoZSBjYXRlZ29yeS4gSWYgc2V0IHRvIGZhbHNlIHdlIHdpbGwgbm90IGFwcGx5IHRoZSBtZXJnaW5nIGxvZ2ljLgogICAgdmFyIG1lcmdlQXJlYU9mSW50ZXJlc3QgPSB0cnVlOwoKICAgIGlmKCBjaGVja0xhc3RVcGRhdGVkICYmIHJlY29yZC5sYXN0VXBkYXRlZCA+IHJlY29yZC5fbGFzdFVwZGF0ZWQgKSByZXR1cm47CiAgICAKICAgIHZhciBtYXRjaGluZ0NvbmRpdGlvbkFyZWFPZkludGVyZXN0ID0gWyJpbnRlcmVzdENvZGUiXTsKICAgIHZhciBzdHJhdGVneUNob29zZW4gPSAie3tNRVJHRV9TVFJBVEVHWX19IjsKCiAgICBpZiAoIG1lcmdlQXJlYU9mSW50ZXJlc3QgKSBjYWxsTWVyZ2VMb2dpYyggcmVjb3JkLCAiYXJlYU9mSW50ZXJlc3QiLCBzdHJhdGVneUNob29zZW4sIGxvZ2dlciwgZXJyb3IpOwogICAgCiAgICBpZiAocmVjb3JkLl9lcnJvckRldGFpbHMgJiYgcmVjb3JkLl9lcnJvckRldGFpbHMubGVuZ3RoKSB7CiAgICAgICAgZXJyb3IuYWNjZXB0KHJlY29yZCwgcmVjb3JkKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHJlY29yZDsKICAgIH0KfQoKZnVuY3Rpb24gY2FsbE1lcmdlTG9naWMoIHJlY29yZCwgcHJvcGVydHlOYW1lLCBzdHJhdGVneUNob29zZW4sIGxvZ2dlciwgZXJyb3IpIHsKICAgIHZhciBfcHJvcGVydHlOYW1lID0gIl8iICsgcHJvcGVydHlOYW1lOwogICAgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdICYmICFyZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdKSB7CiAgICAgICAgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdLmxlbmd0aCAhPT0gMCkgewogICAgICAgICAgICByZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdID0gZGVsZXRlUmVwZWF0ZWRzKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdKTsKICAgICAgICB9CiAgICB9IGVsc2UgaWYgKHJlY29yZC5kYXRhW3Byb3BlcnR5TmFtZV0gJiYgcmVjb3JkLmRhdGFbX3Byb3BlcnR5TmFtZV0pIHsKICAgICAgICBpZiAocmVjb3JkLmRhdGFbcHJvcGVydHlOYW1lXS5sZW5ndGggPT09IDAgJiYgcmVjb3JkLmRhdGFbX3Byb3BlcnR5TmFtZV0ubGVuZ3RoICE9PSAwKSByZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdID0gZGVsZXRlUmVwZWF0ZWRzKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdKTsgIAogICAgICAgIGVsc2UgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdLmxlbmd0aCAhPT0gMCkgewogICAgICAgICAgICBjb25zdCBtZXJnZVJlc3VsdCA9IHByb2Nlc3NNZXJnZShyZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdLCByZWNvcmQuZGF0YVtfcHJvcGVydHlOYW1lXSwgc3RyYXRlZ3lDaG9vc2VuKTsKICAgICAgICAgICAgaWYgKHR5cGVvZiBtZXJnZVJlc3VsdCA9PT0gJ3N0cmluZycpIHJlY29yZC5fZXJyb3JEZXRhaWxzID0gbWVyZ2VSZXN1bHQ7CiAgICAgICAgICAgIGVsc2UgcmVjb3JkLmRhdGFbcHJvcGVydHlOYW1lXSA9IG1lcmdlUmVzdWx0OwogICAgICAgIH0KICAgIH0KfQoKCmZ1bmN0aW9uIHByb2Nlc3NNZXJnZShleGlzdGluZ1JlY29yZEFycmF5LCBuZXdSZWNvcmRBcnJheSwgc3RyYXRlZ3kpIHsKICAgIHZhciByZXN1bHQgPSBbXTsKICAgIHZhciBjaGVjayA9IGZhbHNlOwogICAgaWYgKCBzdHJhdGVneSA9PT0gImZ1bGxSZXBsYWNlIikgewogICAgICAgIHJlc3VsdCA9IG5ld1JlY29yZEFycmF5OwogICAgICAgIHJldHVybiBkZWxldGVSZXBlYXRlZHMocmVzdWx0KTsKICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZXhpc3RpbmdSZWNvcmRBcnJheSkpIHsKICAgICAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSAicmVwbGFjZVBhcnRpYWxseSIpIHsKICAgICAgICAgICAgICAgIGNvbnN0IG5ld0ludGVyZXN0Q29kZXMgPSBuZXdSZWNvcmRBcnJheS5tYXAocmVjb3JkID0+IHJlY29yZC5pbnRlcmVzdENvZGUpOwogICAgCiAgICAgICAgICAgICAgICBleGlzdGluZ1JlY29yZEFycmF5ID0gWy4uLmV4aXN0aW5nUmVjb3JkQXJyYXkuZmlsdGVyKHJlY29yZCA9PiAhISFuZXdJbnRlcmVzdENvZGVzLmZpbmQoaW50ZXJlc3RDb2RlID0+IGludGVyZXN0Q29kZSA9PT0gcmVjb3JkLmludGVyZXN0Q29kZSkpXTsKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSAibWVyZ2UiKSB7CiAgICAgICAgICAgICAgICBjb25zdCBleGlzdGluZ1JlY29yZEFycmF5V291dFJlcGVhdGVkID0gZXhpc3RpbmdSZWNvcmRBcnJheS5maWx0ZXIocmVjb3JkID0+ICFuZXdSZWNvcmRBcnJheS5maW5kKF9yZWNvcmQgPT4gX3JlY29yZC5pbnRlcmVzdENvZGUgPT09IHJlY29yZC5pbnRlcmVzdENvZGUgJiYgX3JlY29yZC5hbnN3ZXJEZXRhaWxzID09PSByZWNvcmQuYW5zd2VyRGV0YWlscykpOwogICAgICAgICAgICAgICAgcmVzdWx0ID0gWy4uLmV4aXN0aW5nUmVjb3JkQXJyYXlXb3V0UmVwZWF0ZWQsIC4uLm5ld1JlY29yZEFycmF5XTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCA9IGV4aXN0aW5nUmVjb3JkQXJyYXkgJiYgZXhpc3RpbmdSZWNvcmRBcnJheS5sZW5ndGggPyBbLi4uZXhpc3RpbmdSZWNvcmRBcnJheV0gOiBbXTsKICAgIAogICAgICAgICAgICAgICAgZm9yICh2YXIgbSBpbiBuZXdSZWNvcmRBcnJheSkgewogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG4gaW4gZXhpc3RpbmdSZWNvcmRBcnJheSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV3UmVjb3JkQXJyYXlbbV0gJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXSAmJiBuZXdSZWNvcmRBcnJheVttXS5pbnRlcmVzdENvZGUgJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXS5pbnRlcmVzdENvZGUgJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXS5pbnRlcmVzdENvZGUgPT09IG5ld1JlY29yZEFycmF5W21dLmludGVyZXN0Q29kZSApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAoIWNoZWNrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKG5ld1JlY29yZEFycmF5W21dKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgY2hlY2sgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZVJlcGVhdGVkcyhyZXN1bHQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiAiVGhlIGFyZWEgb2YgaW50ZXJlc3QgaXMgbm90IGFuIGFycmF5LiI7CiAgICAgICAgfQogICAgICAgCiAgICB9Cn0KCmZ1bmN0aW9uIGRlbGV0ZVJlcGVhdGVkcyhyZXN1bHQpIHsKICAgIGNvbnN0IGVycm9ycyA9IG5ldyBTZXQoKTsKICAgIGNvbnN0IF9yZXN1bHQgPSBbLi4ucmVzdWx0LmZpbHRlcigodmFsdWUsIGluZGV4KSA9PiB7CiAgICAgICAgaWYgKCF2YWx1ZS5pbnRlcmVzdENvZGUgfHwgIXZhbHVlLmFuc3dlckRldGFpbHMpIHsKICAgICAgICAgICAgZXJyb3JzLmFkZChgVGhlIHJlY29yZCBoYXMgYW4gaW50ZXJlc3QgaW4gdGhlIHJlcG8gd2l0aG91dCBpbnRlcmVzdENvZGUgb3Igd2l0aG91dCBhbnN3ZXJEZXRhaWxzLmApOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNvbnN0IGludGVyZXN0Q29kZVZhbHVlID0gdHlwZW9mIHZhbHVlLmludGVyZXN0Q29kZSA9PT0gInN0cmluZyIgPyB2YWx1ZS5pbnRlcmVzdENvZGUudG9Mb3dlckNhc2UoKSA6IGAke3ZhbHVlLmludGVyZXN0Q29kZX1gLnRvTG93ZXJDYXNlKCk7CiAgICAgICAgICAgIGNvbnN0IGFuc3dlckRldGFpbHNWYWx1ZSA9IHR5cGVvZiB2YWx1ZS5hbnN3ZXJEZXRhaWxzID09PSAic3RyaW5nIiA/IHZhbHVlLmFuc3dlckRldGFpbHMudG9Mb3dlckNhc2UoKSA6IGAke3ZhbHVlLmFuc3dlckRldGFpbHN9YC50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICBjb25zdCBfdmFsdWUgPSBgJHsgaW50ZXJlc3RDb2RlVmFsdWUgfSAtICR7IGFuc3dlckRldGFpbHNWYWx1ZSB9YDsKICAgICAgICAgICAgcmV0dXJuIGluZGV4ID09PSByZXN1bHQuZmluZEluZGV4KG9iaiA9PiB7CiAgICAgICAgICAgICAgICBpZiAoIW9iai5pbnRlcmVzdENvZGUgfHwgIW9iai5hbnN3ZXJEZXRhaWxzKSB7CiAgICAgICAgICAgICAgICAgICAgZXJyb3JzLmFkZChgVGhlIHJlY29yZCBoYXMgYW4gaW50ZXJlc3QgaW4gdGhlIHJlcG8gd2l0aG91dCBpbnRlcmVzdENvZGUgb3Igd2l0aG91dCBhbnN3ZXJEZXRhaWxzLmApCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGNvbnN0IGludGVyZXN0Q29kZU9iaiA9IHR5cGVvZiBvYmouaW50ZXJlc3RDb2RlID09PSAic3RyaW5nIiA/IG9iai5pbnRlcmVzdENvZGUudG9Mb3dlckNhc2UoKSA6IGAke29iai5pbnRlcmVzdENvZGV9YC50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICAgICAgICAgIGNvbnN0IGFuc3dlckRldGFpbHNPYmogPSB0eXBlb2Ygb2JqLmFuc3dlckRldGFpbHMgPT09ICJzdHJpbmciID8gb2JqLmFuc3dlckRldGFpbHMudG9Mb3dlckNhc2UoKSA6IGAke29iai5hbnN3ZXJEZXRhaWxzfWAudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gYCR7IGludGVyZXN0Q29kZU9iaiB9IC0gJHsgYW5zd2VyRGV0YWlsc09iaiB9YCA9PSBfdmFsdWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgIH0pXTsKICAgIAogICAgaWYgKGVycm9ycy5zaXplKSB7CiAgICAgICAgbGV0IGVycm9yTWVzc2FnZSA9ICIiOwogICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBlcnJvcnMpIHsKICAgICAgICAgICAgaWYgKGVycm9yTWVzc2FnZSAmJiBlcnJvck1lc3NhZ2UubGVuZ3RoKSBlcnJvck1lc3NhZ2UgKz0gYCwgJHtpdGVtfWA7CiAgICAgICAgICAgIGVsc2UgZXJyb3JNZXNzYWdlID0gaXRlbTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGVycm9yTWVzc2FnZTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIF9yZXN1bHQ7CiAgICB9Cn0=",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["6A. Remove Fields"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "Upload to Blob Storage",
          "type": "datasource.write.azure.blob_token",
          "params": {
            "baseUri": "https://ciamprblobdataplatform.blob.core.windows.net",
            "accessToken": "********",
            "container": "{{AZURE_CONTAINER_IMPORT_ERROR}}"
          }
        }
      ],
      "version": 1,
      "createTime": "2024-10-15T09:59:15.825Z",
      "updateTime": "2024-10-15T09:59:15.825Z",
      "updatedByEmail": "l.marques@sap.com"
    },
    {
      "apiKey": "4_6Tv6z8O6NmUO_BZoHcXIRw",
      "siteId": 435061734600,
      "id": "71eef8ac47884bf2a69149b133c1a4ac",
      "name": "[FULL ACCOUNTS] - Import from DQV (BLOB STORAGE) - ONE-FIELD",
      "status": "published",
      "description": "[FULL ACCOUNTS] - Import from DQV (BLOB STORAGE) - ONE-FIELD",
      "steps": [
        {
          "id": "10B. Remove Fields",
          "type": "field.remove",
          "params": {
            "fields": [
              "_loginIDs",
              "_emails",
              "_identities",
              "_phoneNumber",
              "profile._email",
              "password",
              "_response",
              "query",
              "data._areaOfInterest",
              "data._child",
              "data._pet",
              "data._externalApplication",
              "_lastUpdated",
              "data._initialAppSourceCode",
              "isRegistered",
              "lastUpdated",
              "identities",
              "loginIDs",
              "_subscriptions"
            ]
          },
          "next": ["11C. Update Account"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": " 7A. Perform Merge Logic",
          "type": "record.evaluate",
          "params": {
            "script": "",
            "notifyLastRecord": false,
            "ECMAScriptVersion": "12"
          },
          "next": ["7A bis. Perform Merge Logic Area of Interest"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "7B. Rename Fields To Merge",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "data.areaOfInterest",
                "targetField": "data._areaOfInterest"
              },
              {
                "sourceField": "data.pet",
                "targetField": "data._pet"
              },
              {
                "sourceField": "data.child",
                "targetField": "data._child"
              },
              {
                "sourceField": "data.externalApplication",
                "targetField": "data._externalApplication"
              },
              {
                "sourceField": "lastUpdated",
                "targetField": "_lastUpdated"
              },
              {
                "sourceField": "data.initialAppSourceCode",
                "targetField": "data._initialAppSourceCode"
              },
              {
                "sourceField": "identities",
                "targetField": "_identities"
              },
              {
                "sourceField": "subscriptions",
                "targetField": "_subscriptions"
              }
            ]
          },
          "next": ["8B. Existing Accounts", "8C. New Accounts"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "8A. New Accounts",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "UID",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "process",
            "lookupFields": [
              {
                "sourceField": "_phoneNumber",
                "gigyaField": "phoneNumber"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "remove",
            "isCaseSensitive": false,
            "from": "accounts",
            "batchSize": 200,
            "maxConcurrency": 1,
            "multiMatchBehavior": "error"
          },
          "next": ["Process new phone account error"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "6A. Existing Accounts",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "UID,identities,data.areaOfInterest,data.pet,data.child,data.externalApplication,lastUpdated,data.initialAppSourceCode,phoneNumber,profile.email",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "remove",
            "lookupFields": [
              {
                "sourceField": "_phoneNumber",
                "gigyaField": "phoneNumber"
              },
              {
                "sourceField": "profile._email",
                "gigyaField": "loginIDs.unverifiedEmails"
              },
              {
                "sourceField": "profile._email",
                "gigyaField": "loginIDs.emails"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "process",
            "isCaseSensitive": false,
            "from": "accounts",
            "batchSize": 200,
            "maxConcurrency": 1,
            "multiMatchBehavior": "error"
          },
          "next": [" 7A. Perform Merge Logic", "Prepare existent accounts to extract"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "5. Generate UID and check lang",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7CiAgICByZWNvcmQuVUlEID0gJ3h4eHh4eHh4eHh4eDR4eHh5eHh4eHh4eHh4eHh4eHh4Jy5yZXBsYWNlKC9beHldL2csIGZ1bmN0aW9uKGMpIHsKICAgICAgICB2YXIgciA9IE1hdGgucmFuZG9tKCkgKiAxNiB8IDAsIHYgPSBjID09ICd4JyA/IHIgOiAociAmIDB4MyB8IDB4OCk7CiAgICAgICAgcmV0dXJuIHYudG9TdHJpbmcoMTYpOwogICAgfSk7CiAgICBpZiAocmVjb3JkLnByZWZlcmVuY2VzICYmICFyZWNvcmQubGFuZykgewogICAgICAgIGlmIChyZWNvcmQucHJvZmlsZSAmJiByZWNvcmQucHJvZmlsZS5sb2NhbGUpIHsKICAgICAgICAgICAgcmVjb3JkLmxhbmcgPSByZWNvcmQucHJvZmlsZS5sb2NhbGU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICByZWNvcmQubGFuZyA9ICJlbiI7IAogICAgICAgIH0KICAgIH0KICAgIHJldHVybiByZWNvcmQ7Cn0=",
            "notifyLastRecord": false,
            "ECMAScriptVersion": "12"
          },
          "next": ["6A. PhoneNumber accounts", "6B. Email accounts"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "2. Decrypt PGP",
          "type": "file.decrypt.pgp",
          "params": {
            "pgpKey": "LS0tLS1CRUdJTiBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tCgptUUlOQkYwSG5iRUJFQUN5WHUrekJzanYveUlpNkFYSFBnL081b2VnRGVDTTRMaDMxY2xMMVhjK0J0dWFQb1B0CktVRHJLQXVhR1Q4cngzNGlzeExYdmJvSTVFRU96NTd5VEVxWDhMTHFadlY4U1ZFZUtVdzE1WVhKVkpFVDhFWXIKVTV0TmVvK0Zpajd1elEwWHV3a0JTOGpxMERGcFRUeXl1c3ZreHRtZWNnQW85a3FlQ0JmOEF3V0EwSXpiRmptTwpSbVBYSTBjYmMyWWplVXZ1WUkyOXVOa2hMbUM5VFVDcU9jMFlTaDJDWVZ6a3hBZjF5dGVOZ1BtQkVnRTBWNmFiCmlDMFhlSERBSTN0Z3ZxV2c0Nk8rWFNDTXZTclVndXV3aXRpbmtObXB5SWtadnFvWE9kUmtBN0hCcmc1VVRqVEMKOFM5L3lHMlF3anNvRUtRRmxhWHM2NzZJdTBwaTM2K1l0RHVuYnNITlZmbnEraSt5ZHFEcmlPRDZhRmpXNEFVYQp2NTNwOVJQQXEydDdCVnN0SklieHV2TWRRcDJJOEp0MW12NXFTeHJBOVZTeU9BMXFMcUl4NHd4T0t0RlhXZXJhCnFmVkRaV3RtS0NkQytPREpnbnVHMHdTRkQyRFY2WHN3YTNkdXJ4Sk5RaEZpc2JpTXJJTjZhc0dzSU5WUm9YNmEKd1hROEU2K2cyTjdKbitCeHpkNDllZ2h1Z3k2dHR4KzNjbTBJQ2lYVTVJRTZyZVdnNTVFU2cxdzQ4S3B1SmVtMwo2TWhUUEUwcksyY0c2em5FZUV0R0dFTzhxcXBtRDVjbmUzVzJRdGhJL3duVTR4aitpSXJaV0NSbCtYZkdlc2xYCjZkNDVMSTZBK3BpTGRkaVdUSWFZSzQ1OHVrVnFreTRRUm5SZVpqT3ZzbDY0bVlGdDFPYnlpSWhlc3dBUkFRQUIKdEIxRFNVRk5JRWx0Y0c5eWRDQThZMmxoYlVCdVpYTjBiR1V1WTI5dFBva0NUZ1FUQVFnQU9CWWhCQ2U3WkxlLwpxb2Qva2hYQUd5clJ3MnJFdzd6cUJRSmRCNTJ4QWhzREJRc0pDQWNDQmhVS0NRZ0xBZ1FXQWdNQkFoNEJBaGVBCkFBb0pFQ3JSdzJyRXc3enEwK0FQL1J0TldyR0xwK3BSV09IU1BNRlNoUUJBU1FZdUk5Sk5Sdk9vM3FhVnRpaTcKNHlvZzVKSVZ2M2VBS0tmVThhZjVPOEl6eXZKaWdoOEpTd1Blc2UzQldnT2M2amYrRStCZkdLa0ZBMGFyVFAvNgpLV0NGUzR0ZlA4VkpwVVBzVkUwbS9lanNRK0wzNW5hb0FUUnIrRmtKN0VBRldZVzhYT0xPOU94dGZDOVYyV3B0CkJQRDRmVUFXZXArQnB5ZTN3ZXBSVFNOelhHbkhKS0FjaEVCcUc1NjRTRmVCNWN2RXcydnE2RytNeTZ1MDdnRHMKZ1BUVzE4NnNrWkk2YkFOWEJucjVSaFg1YzBIRlRaNlZXTEJxYTI0U0pXNnVsemxmZWtpQlY3d0RDakxFbUljVQpId3JDSjhsSkh0dEcxT2JNYjBUT3pEb2I4anVSM1JWUFp0MzhXa3hwS0s1RmowbGlYeHgycWlacEtIN2RWYzRlCmZLNnZkWUJNcUZkL3B3SlpvOW12cHUwYTA1Nm9lMVhTcTRzbWxmalJ3WDhYMDRzb01USTEvbUxFK1c1aWJEREEKQ0tsQlNsSC9NZHdTTlQ1SXV4TzFxdUdjMjBKQ0x2WVF3OUhWVXNTMjV5NHhzNTZqa3U2MkVuZFJYZHFVM0FuSgp3TnBCOCtoNEVHVnFERmQybFVOV1hveUxZSk5IblcyUDZ6MlRyZ00wWWpqazRrTzQ2VWdzL1Zkcmd3czAzYUU3CjcwbDh3aHJLSm1GR1hJYWtJYk9qeENuRG4zaW5IV3ZGNUQ5dHkxanVkZ3dtY01rTE1OWnJ5SjEwbXRMWDlRbUkKVlRWekdRQ1RqL3laNmxGb1B5YkV0YTc3Z0N2ZlV6MEZYeEp6bzJCSjAycUdzSE1za3NJN2xqYmNSVE5IMVF6VAp1UUlOQkYwSG5iRUJFQURPVkVxeCtONWhNTHlpZEt3TjY3emN4SUVOalo2N0JPcjhOcjYydEFTY0Q2SnFMaTBvCml4b08zdUs0ZVI3YW9vWjVuMExER2hSNUVtQkZEdGVsY2VIR0dLYmFVcjRwNEt4NUdhKy8wWXlsN3lHZzNIMjEKMk1ub3lWS1NnUmVwMis3QVpPbHdWL1dablk1YmxmN0Jua21lSXowOTRodFE1T1BMa3NVUWZxZUZKemc1WmhUKwpSRzlOTUY1OE1xd2d1U3VldWVBa1JBc3NldncvSW9jbE05cHUyTEh3d0lmNHFKbG5iMEt6K3RQQjdqendPR2tCCjVOR2FIUXkvcjh2eTlIaThiSzNrWk8xK0FZcm5jdmdHSDJkUi9KRVlXU2MzWmlQZXQ2bDFWT3RPK3NlMVkzdjIKblQ1NW9UZDlRV2lkbFNPeGxiQStrckVtRDRuMUxIbHhPQit1MzRMQk1LLy9pWk1Hb0RpZUNTTHFSdlNONkRwZQo4d2J5SlQ4Mm9ITEtxN2lyYTNmeXA3blR0UUNneEdZMmVhUGU1NkVVc0FOakEvWjQyS3c4ZGRpeFFFR2paMHRrCkVXMEhNWVA2UjZlaFc4ODBFSjYxeWFhYXlJbE1zN0FEdlV4SjgzWmxReFhXVVdiMExweFRLRXdEemRlNkZxMEsKQUxzcXZOdGdhSXNXNzlYeVBRRkNqSnR6Y0JwUmJwQWo5bEl3UXU3L1lVM0E0TzBXWTBGYnNoQmxhaXlXMHI2cQo3cit2ZzE5OVovTld5SlhiUy9Ob01nZjdlSzdZL2JxOTA2VkFqVXBvUG1HdmRWMmFndzE1S29XaUZ2MU9NZi9vClVBS2tnN29ZcEdSVW9ybU9XcC8wYTUwemhpc1VCTjR0Qi9qZnkyNHJmVmR3ckRCeDNEbHNNRE90MVFBUkFRQUIKaVFJMkJCZ0JDQUFnRmlFRUo3dGt0NytxaDMrU0ZjQWJLdEhEYXNURHZPb0ZBbDBIbmJFQ0d3d0FDZ2tRS3RIRAphc1REdk9vak5SQUFpMWpzQWtheTA1eG51bU40b0J3TGpoczJUbEp6QjJqTEdmWVYvMzBQZHZWeTFrc1hHbmVaClV6a1ZRUGlqYWZlV3dGQTQwMzFSWG11b2lmczM5b0Zvek5yeXZYNTJ5WlV4a0hSMVRlbThNbzZCUmhYR2J5alcKNkZXMnJ1bFE5VUM0bEZzbUdzc2xQeGtnWVdOaE5nSlFFMTBJWHhkVGtWMnBjZndMNE9sK2YvWnpZVmV6WjliWgpqUHJxaExkcUwwWkJZV05CTnYxbVAyNlVmbTJkNnhwcGJxSGxabHplNEJVM1JwM0R2aWhzU2Frd0FiRnJQVVViClJ1dXJ1dHJ0K1pvMTY0M0VSWFo5eXpWQmZXWFU2UkU2QVVQL2RJZjlhdlV3REJpQllGc056UXlvZXovU213NzQKN0JqQU1pK1JSWDIzcCtpWVhzdm1yMjBFWGpmd3laRVhYcGVHNVhXYi9FeGNJbGIwN0hKNTl1ZHl5ODVPOFN1VgpXaWxNTFVaZUQvejhRZFhwMUdQMGI3L2dWbExCYjBTMEl5RmZwcjZJRlB5TU5pR3FOVGpqdVltV0FvODVNQzY4Cm9Bb2dCYUJHcGJmNk10TFMzMzcxcTNpR0NuTU9SaDJ6TWsvZDRLSkV5bkQ4Nm9qZHg0Z0V2R2dvK0g1M2d4ckkKOEp6MXZ5QXl5UzAzODc0M1RoVGFsck9yWVg5UnVxUWIySXVRRVh6YUhMUjdUYUxKbnRDdU5tQ00xTG5QUisxeApvSmpHSDhJOHdEdnkvS0tENjAyV2pyWjdJTnNHZzgrcndPeWxvTmcybXJ1U052VnVmaklFTDUzUnRBOHgreVlpCk1wakRLL2I4VmdYZHV6Myt2b2pka1FNeVJLM2NEYVJoV0hyS0JvVzNOVFk5Q251U2tJMWlvUUU9Cj1pMDlqCi0tLS0tRU5EIFBHUCBQVUJMSUMgS0VZIEJMT0NLLS0tLS0=",
            "pgpKey.importedPrivateKey": ""
          },
          "next": ["3. Parse JSON"],
          "error": []
        },
        {
          "id": "3. Parse JSON",
          "type": "file.parse.json",
          "params": {
            "addFilename": false
          },
          "next": ["4. Add data.idxImportJobId"],
          "error": []
        },
        {
          "id": "1. Read From Blob Storage",
          "type": "datasource.read.azure.blob_token",
          "params": {
            "baseUri": "{{AZURE_BASE_URI}}",
            "accessToken": "********",
            "container": "{{AZURE_CONTAINER}}",
            "blobPrefix": "{{AZURE_BLOB_PREFIX}}"
          },
          "next": ["2. Decrypt PGP"],
          "error": []
        },
        {
          "id": "6A. PhoneNumber accounts",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgaWYocmVjb3JkLnBob25lTnVtYmVyKQ0KICAgICAgICByZXR1cm4gcmVjb3JkOw0KfQ==",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["7A. Rename Fields To Merge"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "6B. Email accounts",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgaWYoIXJlY29yZC5waG9uZU51bWJlcikNCiAgICAgICAgcmV0dXJuIHJlY29yZDsNCn0=",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["7B. Rename Fields To Merge"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "8B. Existing Accounts",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "UID,data.areaOfInterest,data.pet,data.child,data.externalApplication,lastUpdated,data.initialAppSourceCode",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "remove",
            "lookupFields": [
              {
                "sourceField": "profile.email",
                "gigyaField": "loginIDs.emails"
              },
              {
                "sourceField": "profile.email",
                "gigyaField": "loginIDs.unverifiedEmails"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "process",
            "isCaseSensitive": false,
            "from": "accounts",
            "batchSize": 200,
            "maxConcurrency": 1,
            "multiMatchBehavior": "error"
          },
          "next": [" 9B. Perform Merge Logic", "Prepare existent accounts to extract"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": " 9B. Perform Merge Logic",
          "type": "record.evaluate",
          "params": {
            "script": "",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["9B bis. Perform Merge Area Of Interest Logic"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "10C. Remove Fields",
          "type": "field.remove",
          "params": {
            "fields": [
              "_identities",
              "password",
              "_response",
              "query",
              "data._areaOfInterest",
              "data._child",
              "data._pet",
              "data._externalApplication",
              "_lastUpdated",
              "data._initialAppSourceCode",
              "_subscriptions"
            ]
          },
          "next": ["11D. Import Full Account Upsert"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "8C. New Accounts",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "UID",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "process",
            "lookupFields": [
              {
                "sourceField": "profile.email",
                "gigyaField": "loginIDs.emails"
              },
              {
                "sourceField": "profile.email",
                "gigyaField": "loginIDs.unverifiedEmails"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "remove",
            "isCaseSensitive": false,
            "from": "accounts",
            "batchSize": 200,
            "maxConcurrency": 1,
            "multiMatchBehavior": "error"
          },
          "next": ["Process new email account error"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "Process new email account error",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0LCBlcnJvcikgew0KICAgIHJlY29yZC5fZXJyb3JEZXRhaWxzID0gJ1RoaXMgcmVjb3JkIGRvZXMgbm90IGV4aXN0IG9uIHRoZSByZXBvc2l0b3J5IG9yIHlvdSBhcmUgdHJ5aW5nIHRvIHVwZGF0ZSBhIExpdGUgQWNjb3VudCB3aXRoIHRoZSBGdWxsIEFjY291bnQgZGF0YWZsb3cuIFlvdSBtdXN0IHJ1biBpdCB3aXRoIHRoZSBpbXBvcnQgd2l0aCBhbGwgdGhlIHJlcXVpcmVkIGZpZWxkcy4nOw0KICAgIGVycm9yLmFjY2VwdChyZWNvcmQsIHJlY29yZCk7DQogICAgcmV0dXJuOw0KfQ==",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": [],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "7A. Rename Fields To Merge",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "data.areaOfInterest",
                "targetField": "data._areaOfInterest"
              },
              {
                "sourceField": "data.pet",
                "targetField": "data._pet"
              },
              {
                "sourceField": "data.child",
                "targetField": "data._child"
              },
              {
                "sourceField": "data.externalApplication",
                "targetField": "data._externalApplication"
              },
              {
                "sourceField": "lastUpdated",
                "targetField": "_lastUpdated"
              },
              {
                "sourceField": "data.initialAppSourceCode",
                "targetField": "data._initialAppSourceCode"
              },
              {
                "sourceField": "profile.email",
                "targetField": "profile._email"
              },
              {
                "sourceField": "phoneNumber",
                "targetField": "_phoneNumber"
              },
              {
                "sourceField": "loginIDs",
                "targetField": "_loginIDs"
              },
              {
                "sourceField": "emails",
                "targetField": "_emails"
              },
              {
                "sourceField": "identities",
                "targetField": "_identities"
              },
              {
                "sourceField": "subscriptions",
                "targetField": "_subscriptions"
              }
            ]
          },
          "next": ["8A. New Accounts", "6A. Existing Accounts"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "12C. Set Account Info Webhook",
          "type": "datasource.write.gigya.generic",
          "params": {
            "apiMethod": "accounts.setAccountInfo",
            "maxConnections": 10,
            "apiParams": [
              {
                "sourceField": "UID",
                "paramName": "UID",
                "value": ""
              }
            ],
            "addResponse": false
          },
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "Generate file",
          "type": "file.format.json",
          "params": {
            "fileName": "{{AZURE_ERRORS_FILENAME}}_${now:yyMMddHHmm}.json",
            "maxFileSize": 5000,
            "createEmptyFile": false
          },
          "next": ["Encrypt file"]
        },
        {
          "id": "Prepare fields to extract phone as ID",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgdmFyIHJlY29yZFRvRXh0cmFjdCA9IHt9Ow0KICAgIHJlY29yZFRvRXh0cmFjdC5waG9uZU51bWJlciA9IHJlY29yZC5waG9uZU51bWJlcjsNCiAgICAgICAgaWYgKHJlY29yZC5VSUQgJiYgcmVjb3JkLlVJRC5sZW5ndGgpIHsNCiAgICAgICAgcmVjb3JkVG9FeHRyYWN0LlVJRCA9IHJlY29yZC5VSUQ7DQogICAgfQ0KICAgIA0KICAgIHJlY29yZFRvRXh0cmFjdC5lcnJvckRldGFpbHMgPSByZWNvcmQuX2Vycm9yRGV0YWlsczsNCiAgICANCiAgICBpZiAocmVjb3JkVG9FeHRyYWN0LmVycm9yRGV0YWlscy5lcnJvck1lc3NhZ2UgIT09ICJJZ25vcmVkIFBhcmFtczogW3twYXJhbU5hbWUgPSBwaG9uZU51bWJlciwgd2FybmluZ0NvZGUgPSA0MDMwMDcsIG1lc3NhZ2UgPSBUaGlzIHBhcmFtZXRlciB3YXMgbm90IHJlY29nbml6ZWQgYXMgdmFsaWQgZm9yIHRoaXMgQVBJIG1ldGhvZCB3aXRoIHlvdXIgc2VjdXJpdHkgY3JlZGVudGlhbHMgbm9yIHdhcyBpdCByZWNvZ25pemVkIGFzIGEgc3RhbmRhcmQgR2lneWEgY29udHJvbCBwYXJhbWV0ZXIufV0iKSB7DQogICAgICAgIHJldHVybiByZWNvcmRUb0V4dHJhY3Q7DQogICAgfQ0KfQ==",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["Generate file"]
        },
        {
          "id": "Prepare fields to extract email",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgdmFyIHJlY29yZFRvRXh0cmFjdCA9IHt9Ow0KICAgIHJlY29yZFRvRXh0cmFjdC5lbWFpbCA9IHJlY29yZC5wcm9maWxlLmVtYWlsOw0KICAgIGlmIChyZWNvcmQuVUlEICYmIHJlY29yZC5VSUQubGVuZ3RoKSB7DQogICAgICAgIHJlY29yZFRvRXh0cmFjdC5VSUQgPSByZWNvcmQuVUlEOw0KICAgIH0NCiAgICANCiAgICByZWNvcmRUb0V4dHJhY3QuZXJyb3JEZXRhaWxzID0gcmVjb3JkLl9lcnJvckRldGFpbHM7DQoNCiAgICByZXR1cm4gcmVjb3JkVG9FeHRyYWN0Ow0KfQ==",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["Generate file"]
        },
        {
          "id": "Encrypt file",
          "type": "file.encrypt.pgp",
          "params": {
            "publicKey": "{{PGP_Public_Key_Base64_Encoded}}",
            "asciiArmor": true
          },
          "next": ["Upload to Blob Storage"]
        },
        {
          "id": "Generate Existent Accounts File",
          "type": "file.format.json",
          "params": {
            "fileName": "{{AZURE_EXISTENT_ACCOUNTS_FILENAME}}_${now:yyMMddHHmm}.json",
            "maxFileSize": 5000,
            "createEmptyFile": false
          },
          "next": ["Encrypt file"]
        },
        {
          "id": "Prepare existent accounts to extract",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgdmFyIG5ld1JlY29yZCA9IHsNCiAgICAgICAgIlVJRCI6IHJlY29yZC5VSUQsDQogICAgICAgICJlbWFpbCI6IHJlY29yZC5wcm9maWxlLmVtYWlsLA0KICAgICAgICAiaW5pdGlhbEFwcFNvdXJjZUNvZGUiOiByZWNvcmQuZGF0YS5pbml0aWFsQXBwU291cmNlQ29kZQ0KICAgIH0NCiAgICANCiAgICBpZiAocmVjb3JkLnBob25lTnVtYmVyKSB7DQogICAgICAgIG5ld1JlY29yZC5waG9uZU51bWJlciA9IHJlY29yZC5waG9uZU51bWJlcjsNCiAgICB9DQogICAgDQogICAgcmV0dXJuIG5ld1JlY29yZDsNCn0=",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["Generate Existent Accounts File"]
        },
        {
          "id": "4. Add data.idxImportJobId",
          "type": "field.add",
          "params": {
            "fields": [
              {
                "field": "data.idxImportJobId",
                "value": "${jobId}"
              },
              {
                "field": "isRegistered",
                "value": "true"
              }
            ]
          },
          "next": ["5. Generate UID and check lang"]
        },
        {
          "id": "9B bis. Perform Merge Area Of Interest Logic",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0LCBlcnJvcikgewogICAgLy8gSWYgc2V0IHRvIHRydWUgdGhlIHJlY29yZCB3aWxsIGJlIHByb2Nlc3NlZCBvbmx5IGlmIHRoZSBsYXN0VXBkYXRlIGluIHRoZSBmaWxlIGlzID4gbGFzdHVwZGF0ZSBpbiBTQVAtQ0RDLiBJZiBzZXQgdG8gZmFsc2UgdGhlIHJlY29yZCB3aWxsIGJlIGFsd2F5cyBwcm9jZXNzZWQuCiAgICB2YXIgY2hlY2tMYXN0VXBkYXRlZCA9IGZhbHNlOwogICAgLy8gSWYgc2V0IHRvIHRydWUgd2Ugd2lsbCBhcHBseSB0aGUgbWVyZ2UgbG9naWMgZm9yIHRoZSBjYXRlZ29yeS4gSWYgc2V0IHRvIGZhbHNlIHdlIHdpbGwgbm90IGFwcGx5IHRoZSBtZXJnaW5nIGxvZ2ljLgogICAgdmFyIG1lcmdlQXJlYU9mSW50ZXJlc3QgPSB0cnVlOwoKICAgIGlmKCBjaGVja0xhc3RVcGRhdGVkICYmIHJlY29yZC5sYXN0VXBkYXRlZCA+IHJlY29yZC5fbGFzdFVwZGF0ZWQgKSByZXR1cm47CiAgICAKICAgIHZhciBtYXRjaGluZ0NvbmRpdGlvbkFyZWFPZkludGVyZXN0ID0gWyJpbnRlcmVzdENvZGUiXTsKICAgIHZhciBzdHJhdGVneUNob29zZW4gPSAie3tNRVJHRV9TVFJBVEVHWX19IjsKCiAgICBpZiAoIG1lcmdlQXJlYU9mSW50ZXJlc3QgKSBjYWxsTWVyZ2VMb2dpYyggcmVjb3JkLCAiYXJlYU9mSW50ZXJlc3QiLCBzdHJhdGVneUNob29zZW4sIGxvZ2dlciwgZXJyb3IpOwogICAgCiAgICBpZiAocmVjb3JkLl9lcnJvckRldGFpbHMgJiYgcmVjb3JkLl9lcnJvckRldGFpbHMubGVuZ3RoKSB7CiAgICAgICAgZXJyb3IuYWNjZXB0KHJlY29yZCwgcmVjb3JkKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHJlY29yZDsKICAgIH0KfQoKZnVuY3Rpb24gY2FsbE1lcmdlTG9naWMoIHJlY29yZCwgcHJvcGVydHlOYW1lLCBzdHJhdGVneUNob29zZW4sIGxvZ2dlciwgZXJyb3IpIHsKICAgIHZhciBfcHJvcGVydHlOYW1lID0gIl8iICsgcHJvcGVydHlOYW1lOwogICAgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdICYmICFyZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdKSB7CiAgICAgICAgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdLmxlbmd0aCAhPT0gMCkgewogICAgICAgICAgICByZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdID0gZGVsZXRlUmVwZWF0ZWRzKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdKTsKICAgICAgICB9CiAgICB9IGVsc2UgaWYgKHJlY29yZC5kYXRhW3Byb3BlcnR5TmFtZV0gJiYgcmVjb3JkLmRhdGFbX3Byb3BlcnR5TmFtZV0pIHsKICAgICAgICBpZiAocmVjb3JkLmRhdGFbcHJvcGVydHlOYW1lXS5sZW5ndGggPT09IDAgJiYgcmVjb3JkLmRhdGFbX3Byb3BlcnR5TmFtZV0ubGVuZ3RoICE9PSAwKSByZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdID0gZGVsZXRlUmVwZWF0ZWRzKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdKTsgIAogICAgICAgIGVsc2UgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdLmxlbmd0aCAhPT0gMCkgewogICAgICAgICAgICBjb25zdCBtZXJnZVJlc3VsdCA9IHByb2Nlc3NNZXJnZShyZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdLCByZWNvcmQuZGF0YVtfcHJvcGVydHlOYW1lXSwgc3RyYXRlZ3lDaG9vc2VuKTsKICAgICAgICAgICAgaWYgKHR5cGVvZiBtZXJnZVJlc3VsdCA9PT0gJ3N0cmluZycpIHJlY29yZC5fZXJyb3JEZXRhaWxzID0gbWVyZ2VSZXN1bHQ7CiAgICAgICAgICAgIGVsc2UgcmVjb3JkLmRhdGFbcHJvcGVydHlOYW1lXSA9IG1lcmdlUmVzdWx0OwogICAgICAgIH0KICAgIH0KfQoKCmZ1bmN0aW9uIHByb2Nlc3NNZXJnZShleGlzdGluZ1JlY29yZEFycmF5LCBuZXdSZWNvcmRBcnJheSwgc3RyYXRlZ3kpIHsKICAgIHZhciByZXN1bHQgPSBbXTsKICAgIHZhciBjaGVjayA9IGZhbHNlOwogICAgaWYgKCBzdHJhdGVneSA9PT0gImZ1bGxSZXBsYWNlIikgewogICAgICAgIHJlc3VsdCA9IG5ld1JlY29yZEFycmF5OwogICAgICAgIHJldHVybiBkZWxldGVSZXBlYXRlZHMocmVzdWx0KTsKICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZXhpc3RpbmdSZWNvcmRBcnJheSkpIHsKICAgICAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSAicmVwbGFjZVBhcnRpYWxseSIpIHsKICAgICAgICAgICAgICAgIGNvbnN0IG5ld0ludGVyZXN0Q29kZXMgPSBuZXdSZWNvcmRBcnJheS5tYXAocmVjb3JkID0+IHJlY29yZC5pbnRlcmVzdENvZGUpOwogICAgCiAgICAgICAgICAgICAgICBleGlzdGluZ1JlY29yZEFycmF5ID0gWy4uLmV4aXN0aW5nUmVjb3JkQXJyYXkuZmlsdGVyKHJlY29yZCA9PiAhISFuZXdJbnRlcmVzdENvZGVzLmZpbmQoaW50ZXJlc3RDb2RlID0+IGludGVyZXN0Q29kZSA9PT0gcmVjb3JkLmludGVyZXN0Q29kZSkpXTsKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSAibWVyZ2UiKSB7CiAgICAgICAgICAgICAgICBjb25zdCBleGlzdGluZ1JlY29yZEFycmF5V291dFJlcGVhdGVkID0gZXhpc3RpbmdSZWNvcmRBcnJheS5maWx0ZXIocmVjb3JkID0+ICFuZXdSZWNvcmRBcnJheS5maW5kKF9yZWNvcmQgPT4gX3JlY29yZC5pbnRlcmVzdENvZGUgPT09IHJlY29yZC5pbnRlcmVzdENvZGUgJiYgX3JlY29yZC5hbnN3ZXJEZXRhaWxzID09PSByZWNvcmQuYW5zd2VyRGV0YWlscykpOwogICAgICAgICAgICAgICAgcmVzdWx0ID0gWy4uLmV4aXN0aW5nUmVjb3JkQXJyYXlXb3V0UmVwZWF0ZWQsIC4uLm5ld1JlY29yZEFycmF5XTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCA9IGV4aXN0aW5nUmVjb3JkQXJyYXkgJiYgZXhpc3RpbmdSZWNvcmRBcnJheS5sZW5ndGggPyBbLi4uZXhpc3RpbmdSZWNvcmRBcnJheV0gOiBbXTsKICAgIAogICAgICAgICAgICAgICAgZm9yICh2YXIgbSBpbiBuZXdSZWNvcmRBcnJheSkgewogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG4gaW4gZXhpc3RpbmdSZWNvcmRBcnJheSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV3UmVjb3JkQXJyYXlbbV0gJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXSAmJiBuZXdSZWNvcmRBcnJheVttXS5pbnRlcmVzdENvZGUgJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXS5pbnRlcmVzdENvZGUgJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXS5pbnRlcmVzdENvZGUgPT09IG5ld1JlY29yZEFycmF5W21dLmludGVyZXN0Q29kZSApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAoIWNoZWNrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKG5ld1JlY29yZEFycmF5W21dKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgY2hlY2sgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZVJlcGVhdGVkcyhyZXN1bHQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiAiVGhlIGFyZWEgb2YgaW50ZXJlc3QgaXMgbm90IGFuIGFycmF5LiI7CiAgICAgICAgfQogICAgfQp9CgpmdW5jdGlvbiBkZWxldGVSZXBlYXRlZHMocmVzdWx0KSB7CiAgICBjb25zdCBlcnJvcnMgPSBuZXcgU2V0KCk7CiAgICBjb25zdCBfcmVzdWx0ID0gWy4uLnJlc3VsdC5maWx0ZXIoKHZhbHVlLCBpbmRleCkgPT4gewogICAgICAgIGlmICghdmFsdWUuaW50ZXJlc3RDb2RlIHx8ICF2YWx1ZS5hbnN3ZXJEZXRhaWxzKSB7CiAgICAgICAgICAgIGVycm9ycy5hZGQoYFRoZSByZWNvcmQgaGFzIGFuIGludGVyZXN0IGluIHRoZSByZXBvIHdpdGhvdXQgaW50ZXJlc3RDb2RlIG9yIHdpdGhvdXQgYW5zd2VyRGV0YWlscy5gKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb25zdCBpbnRlcmVzdENvZGVWYWx1ZSA9IHR5cGVvZiB2YWx1ZS5pbnRlcmVzdENvZGUgPT09ICJzdHJpbmciID8gdmFsdWUuaW50ZXJlc3RDb2RlLnRvTG93ZXJDYXNlKCkgOiBgJHt2YWx1ZS5pbnRlcmVzdENvZGV9YC50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICBjb25zdCBhbnN3ZXJEZXRhaWxzVmFsdWUgPSB0eXBlb2YgdmFsdWUuYW5zd2VyRGV0YWlscyA9PT0gInN0cmluZyIgPyB2YWx1ZS5hbnN3ZXJEZXRhaWxzLnRvTG93ZXJDYXNlKCkgOiBgJHt2YWx1ZS5hbnN3ZXJEZXRhaWxzfWAudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgY29uc3QgX3ZhbHVlID0gYCR7IGludGVyZXN0Q29kZVZhbHVlIH0gLSAkeyBhbnN3ZXJEZXRhaWxzVmFsdWUgfWA7CiAgICAgICAgICAgIHJldHVybiBpbmRleCA9PT0gcmVzdWx0LmZpbmRJbmRleChvYmogPT4gewogICAgICAgICAgICAgICAgaWYgKCFvYmouaW50ZXJlc3RDb2RlIHx8ICFvYmouYW5zd2VyRGV0YWlscykgewogICAgICAgICAgICAgICAgICAgIGVycm9ycy5hZGQoYFRoZSByZWNvcmQgaGFzIGFuIGludGVyZXN0IGluIHRoZSByZXBvIHdpdGhvdXQgaW50ZXJlc3RDb2RlIG9yIHdpdGhvdXQgYW5zd2VyRGV0YWlscy5gKQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBpbnRlcmVzdENvZGVPYmogPSB0eXBlb2Ygb2JqLmludGVyZXN0Q29kZSA9PT0gInN0cmluZyIgPyBvYmouaW50ZXJlc3RDb2RlLnRvTG93ZXJDYXNlKCkgOiBgJHtvYmouaW50ZXJlc3RDb2RlfWAudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgICAgICAgICBjb25zdCBhbnN3ZXJEZXRhaWxzT2JqID0gdHlwZW9mIG9iai5hbnN3ZXJEZXRhaWxzID09PSAic3RyaW5nIiA/IG9iai5hbnN3ZXJEZXRhaWxzLnRvTG93ZXJDYXNlKCkgOiBgJHtvYmouYW5zd2VyRGV0YWlsc31gLnRvTG93ZXJDYXNlKCk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGAkeyBpbnRlcmVzdENvZGVPYmogfSAtICR7IGFuc3dlckRldGFpbHNPYmogfWAgPT0gX3ZhbHVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9KV07CiAgICAKICAgIGlmIChlcnJvcnMuc2l6ZSkgewogICAgICAgIGxldCBlcnJvck1lc3NhZ2UgPSAiIjsKICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgZXJyb3JzKSB7CiAgICAgICAgICAgIGlmIChlcnJvck1lc3NhZ2UgJiYgZXJyb3JNZXNzYWdlLmxlbmd0aCkgZXJyb3JNZXNzYWdlICs9IGAsICR7aXRlbX1gOwogICAgICAgICAgICBlbHNlIGVycm9yTWVzc2FnZSA9IGl0ZW07CiAgICAgICAgfQogICAgICAgIHJldHVybiBlcnJvck1lc3NhZ2U7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBfcmVzdWx0OwogICAgfQp9",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["10C. Remove Fields"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "7A bis. Perform Merge Logic Area of Interest",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0LCBlcnJvcikgewogICAgLy8gSWYgc2V0IHRvIHRydWUgdGhlIHJlY29yZCB3aWxsIGJlIHByb2Nlc3NlZCBvbmx5IGlmIHRoZSBsYXN0VXBkYXRlIGluIHRoZSBmaWxlIGlzID4gbGFzdHVwZGF0ZSBpbiBTQVAtQ0RDLiBJZiBzZXQgdG8gZmFsc2UgdGhlIHJlY29yZCB3aWxsIGJlIGFsd2F5cyBwcm9jZXNzZWQuCiAgICB2YXIgY2hlY2tMYXN0VXBkYXRlZCA9IGZhbHNlOwogICAgLy8gSWYgc2V0IHRvIHRydWUgd2Ugd2lsbCBhcHBseSB0aGUgbWVyZ2UgbG9naWMgZm9yIHRoZSBjYXRlZ29yeS4gSWYgc2V0IHRvIGZhbHNlIHdlIHdpbGwgbm90IGFwcGx5IHRoZSBtZXJnaW5nIGxvZ2ljLgogICAgdmFyIG1lcmdlQXJlYU9mSW50ZXJlc3QgPSB0cnVlOwoKICAgIGlmKCBjaGVja0xhc3RVcGRhdGVkICYmIHJlY29yZC5sYXN0VXBkYXRlZCA+IHJlY29yZC5fbGFzdFVwZGF0ZWQgKSByZXR1cm47CiAgICAKICAgIHZhciBtYXRjaGluZ0NvbmRpdGlvbkFyZWFPZkludGVyZXN0ID0gWyJpbnRlcmVzdENvZGUiXTsKICAgIHZhciBzdHJhdGVneUNob29zZW4gPSAie3tNRVJHRV9TVFJBVEVHWX19IjsKCiAgICBpZiAoIG1lcmdlQXJlYU9mSW50ZXJlc3QgKSBjYWxsTWVyZ2VMb2dpYyggcmVjb3JkLCAiYXJlYU9mSW50ZXJlc3QiLCBzdHJhdGVneUNob29zZW4sIGxvZ2dlciwgZXJyb3IpOwogICAgCiAgICBpZiAocmVjb3JkLl9lcnJvckRldGFpbHMgJiYgcmVjb3JkLl9lcnJvckRldGFpbHMubGVuZ3RoKSB7CiAgICAgICAgZXJyb3IuYWNjZXB0KHJlY29yZCwgcmVjb3JkKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHJlY29yZDsKICAgIH0KfQoKZnVuY3Rpb24gY2FsbE1lcmdlTG9naWMoIHJlY29yZCwgcHJvcGVydHlOYW1lLCBzdHJhdGVneUNob29zZW4sIGxvZ2dlciwgZXJyb3IpIHsKICAgIHZhciBfcHJvcGVydHlOYW1lID0gIl8iICsgcHJvcGVydHlOYW1lOwogICAgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdICYmICFyZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdKSB7CiAgICAgICAgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdLmxlbmd0aCAhPT0gMCkgewogICAgICAgICAgICByZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdID0gZGVsZXRlUmVwZWF0ZWRzKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdKTsKICAgICAgICB9CiAgICB9IGVsc2UgaWYgKHJlY29yZC5kYXRhW3Byb3BlcnR5TmFtZV0gJiYgcmVjb3JkLmRhdGFbX3Byb3BlcnR5TmFtZV0pIHsKICAgICAgICBpZiAocmVjb3JkLmRhdGFbcHJvcGVydHlOYW1lXS5sZW5ndGggPT09IDAgJiYgcmVjb3JkLmRhdGFbX3Byb3BlcnR5TmFtZV0ubGVuZ3RoICE9PSAwKSByZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdID0gZGVsZXRlUmVwZWF0ZWRzKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdKTsgIAogICAgICAgIGVsc2UgaWYgKHJlY29yZC5kYXRhW19wcm9wZXJ0eU5hbWVdLmxlbmd0aCAhPT0gMCkgewogICAgICAgICAgICBjb25zdCBtZXJnZVJlc3VsdCA9IHByb2Nlc3NNZXJnZShyZWNvcmQuZGF0YVtwcm9wZXJ0eU5hbWVdLCByZWNvcmQuZGF0YVtfcHJvcGVydHlOYW1lXSwgc3RyYXRlZ3lDaG9vc2VuKTsKICAgICAgICAgICAgaWYgKHR5cGVvZiBtZXJnZVJlc3VsdCA9PT0gJ3N0cmluZycpIHJlY29yZC5fZXJyb3JEZXRhaWxzID0gbWVyZ2VSZXN1bHQ7CiAgICAgICAgICAgIGVsc2UgcmVjb3JkLmRhdGFbcHJvcGVydHlOYW1lXSA9IG1lcmdlUmVzdWx0OwogICAgICAgIH0KICAgIH0KfQoKCmZ1bmN0aW9uIHByb2Nlc3NNZXJnZShleGlzdGluZ1JlY29yZEFycmF5LCBuZXdSZWNvcmRBcnJheSwgc3RyYXRlZ3kpIHsKICAgIHZhciByZXN1bHQgPSBbXTsKICAgIHZhciBjaGVjayA9IGZhbHNlOwogICAgaWYgKCBzdHJhdGVneSA9PT0gImZ1bGxSZXBsYWNlIikgewogICAgICAgIHJlc3VsdCA9IG5ld1JlY29yZEFycmF5OwogICAgICAgIHJldHVybiBkZWxldGVSZXBlYXRlZHMocmVzdWx0KTsKICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZXhpc3RpbmdSZWNvcmRBcnJheSkpIHsKICAgICAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSAicmVwbGFjZVBhcnRpYWxseSIpIHsKICAgICAgICAgICAgICAgIGNvbnN0IG5ld0ludGVyZXN0Q29kZXMgPSBuZXdSZWNvcmRBcnJheS5tYXAocmVjb3JkID0+IHJlY29yZC5pbnRlcmVzdENvZGUpOwogICAgCiAgICAgICAgICAgICAgICBleGlzdGluZ1JlY29yZEFycmF5ID0gWy4uLmV4aXN0aW5nUmVjb3JkQXJyYXkuZmlsdGVyKHJlY29yZCA9PiAhISFuZXdJbnRlcmVzdENvZGVzLmZpbmQoaW50ZXJlc3RDb2RlID0+IGludGVyZXN0Q29kZSA9PT0gcmVjb3JkLmludGVyZXN0Q29kZSkpXTsKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSAibWVyZ2UiKSB7CiAgICAgICAgICAgICAgICBjb25zdCBleGlzdGluZ1JlY29yZEFycmF5V291dFJlcGVhdGVkID0gZXhpc3RpbmdSZWNvcmRBcnJheS5maWx0ZXIocmVjb3JkID0+ICFuZXdSZWNvcmRBcnJheS5maW5kKF9yZWNvcmQgPT4gX3JlY29yZC5pbnRlcmVzdENvZGUgPT09IHJlY29yZC5pbnRlcmVzdENvZGUgJiYgX3JlY29yZC5hbnN3ZXJEZXRhaWxzID09PSByZWNvcmQuYW5zd2VyRGV0YWlscykpOwogICAgICAgICAgICAgICAgcmVzdWx0ID0gWy4uLmV4aXN0aW5nUmVjb3JkQXJyYXlXb3V0UmVwZWF0ZWQsIC4uLm5ld1JlY29yZEFycmF5XTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJlc3VsdCA9IGV4aXN0aW5nUmVjb3JkQXJyYXkgJiYgZXhpc3RpbmdSZWNvcmRBcnJheS5sZW5ndGggPyBbLi4uZXhpc3RpbmdSZWNvcmRBcnJheV0gOiBbXTsKICAgIAogICAgICAgICAgICAgICAgZm9yICh2YXIgbSBpbiBuZXdSZWNvcmRBcnJheSkgewogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG4gaW4gZXhpc3RpbmdSZWNvcmRBcnJheSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV3UmVjb3JkQXJyYXlbbV0gJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXSAmJiBuZXdSZWNvcmRBcnJheVttXS5pbnRlcmVzdENvZGUgJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXS5pbnRlcmVzdENvZGUgJiYgZXhpc3RpbmdSZWNvcmRBcnJheVtuXS5pbnRlcmVzdENvZGUgPT09IG5ld1JlY29yZEFycmF5W21dLmludGVyZXN0Q29kZSApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAoIWNoZWNrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKG5ld1JlY29yZEFycmF5W21dKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgY2hlY2sgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZVJlcGVhdGVkcyhyZXN1bHQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiAiVGhlIGFyZWEgb2YgaW50ZXJlc3QgaXMgbm90IGFuIGFycmF5LiI7CiAgICAgICAgfQogICAgfQp9CgpmdW5jdGlvbiBkZWxldGVSZXBlYXRlZHMocmVzdWx0KSB7CiAgICBjb25zdCBlcnJvcnMgPSBuZXcgU2V0KCk7CiAgICBjb25zdCBfcmVzdWx0ID0gWy4uLnJlc3VsdC5maWx0ZXIoKHZhbHVlLCBpbmRleCkgPT4gewogICAgICAgIGlmICghdmFsdWUuaW50ZXJlc3RDb2RlIHx8ICF2YWx1ZS5hbnN3ZXJEZXRhaWxzKSB7CiAgICAgICAgICAgIGVycm9ycy5hZGQoYFRoZSByZWNvcmQgaGFzIGFuIGludGVyZXN0IGluIHRoZSByZXBvIHdpdGhvdXQgaW50ZXJlc3RDb2RlIG9yIHdpdGhvdXQgYW5zd2VyRGV0YWlscy5gKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb25zdCBpbnRlcmVzdENvZGVWYWx1ZSA9IHR5cGVvZiB2YWx1ZS5pbnRlcmVzdENvZGUgPT09ICJzdHJpbmciID8gdmFsdWUuaW50ZXJlc3RDb2RlLnRvTG93ZXJDYXNlKCkgOiBgJHt2YWx1ZS5pbnRlcmVzdENvZGV9YC50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICBjb25zdCBhbnN3ZXJEZXRhaWxzVmFsdWUgPSB0eXBlb2YgdmFsdWUuYW5zd2VyRGV0YWlscyA9PT0gInN0cmluZyIgPyB2YWx1ZS5hbnN3ZXJEZXRhaWxzLnRvTG93ZXJDYXNlKCkgOiBgJHt2YWx1ZS5hbnN3ZXJEZXRhaWxzfWAudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgY29uc3QgX3ZhbHVlID0gYCR7IGludGVyZXN0Q29kZVZhbHVlIH0gLSAkeyBhbnN3ZXJEZXRhaWxzVmFsdWUgfWA7CiAgICAgICAgICAgIHJldHVybiBpbmRleCA9PT0gcmVzdWx0LmZpbmRJbmRleChvYmogPT4gewogICAgICAgICAgICAgICAgaWYgKCFvYmouaW50ZXJlc3RDb2RlIHx8ICFvYmouYW5zd2VyRGV0YWlscykgewogICAgICAgICAgICAgICAgICAgIGVycm9ycy5hZGQoYFRoZSByZWNvcmQgaGFzIGFuIGludGVyZXN0IGluIHRoZSByZXBvIHdpdGhvdXQgaW50ZXJlc3RDb2RlIG9yIHdpdGhvdXQgYW5zd2VyRGV0YWlscy5gKQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBpbnRlcmVzdENvZGVPYmogPSB0eXBlb2Ygb2JqLmludGVyZXN0Q29kZSA9PT0gInN0cmluZyIgPyBvYmouaW50ZXJlc3RDb2RlLnRvTG93ZXJDYXNlKCkgOiBgJHtvYmouaW50ZXJlc3RDb2RlfWAudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgICAgICAgICBjb25zdCBhbnN3ZXJEZXRhaWxzT2JqID0gdHlwZW9mIG9iai5hbnN3ZXJEZXRhaWxzID09PSAic3RyaW5nIiA/IG9iai5hbnN3ZXJEZXRhaWxzLnRvTG93ZXJDYXNlKCkgOiBgJHtvYmouYW5zd2VyRGV0YWlsc31gLnRvTG93ZXJDYXNlKCk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGAkeyBpbnRlcmVzdENvZGVPYmogfSAtICR7IGFuc3dlckRldGFpbHNPYmogfWAgPT0gX3ZhbHVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9KV07CiAgICAKICAgIGlmIChlcnJvcnMuc2l6ZSkgewogICAgICAgIGxldCBlcnJvck1lc3NhZ2UgPSAiIjsKICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgZXJyb3JzKSB7CiAgICAgICAgICAgIGlmIChlcnJvck1lc3NhZ2UgJiYgZXJyb3JNZXNzYWdlLmxlbmd0aCkgZXJyb3JNZXNzYWdlICs9IGAsICR7aXRlbX1gOwogICAgICAgICAgICBlbHNlIGVycm9yTWVzc2FnZSA9IGl0ZW07CiAgICAgICAgfQogICAgICAgIHJldHVybiBlcnJvck1lc3NhZ2U7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBfcmVzdWx0OwogICAgfQp9",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["10B. Remove Fields"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "Upload to Blob Storage",
          "type": "datasource.write.azure.blob_token",
          "params": {
            "baseUri": "https://ciamprblobdataplatform.blob.core.windows.net",
            "accessToken": "********",
            "container": "{{AZURE_CONTAINER_IMPORT_ERROR}}"
          }
        },
        {
          "id": "11C. Update Account",
          "type": "datasource.write.gigya.importaccount",
          "params": {
            "importPolicy": "upsert",
            "maxConnections": 20,
            "addResponse": false
          },
          "next": ["12A. Rename Fields To Register"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "12A. Rename Fields To Register",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "profile.email",
                "targetField": "profile._email"
              },
              {
                "sourceField": "phoneNumber",
                "targetField": "_phoneNumber"
              },
              {
                "sourceField": "loginIDs",
                "targetField": "_loginIDs"
              },
              {
                "sourceField": "emails",
                "targetField": "_emails"
              }
            ]
          },
          "next": ["13A. Existing Account to Register"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "13A. Existing Account to Register",
          "type": "datasource.lookup.gigya.account",
          "params": {
            "select": "UID,phoneNumber,profile.email,isRegistered",
            "handleFieldConflicts": "take_lookup",
            "mismatchBehavior": "remove",
            "lookupFields": [
              {
                "sourceField": "_phoneNumber",
                "gigyaField": "phoneNumber"
              },
              {
                "sourceField": "profile._email",
                "gigyaField": "loginIDs.unverifiedEmails"
              },
              {
                "sourceField": "profile._email",
                "gigyaField": "loginIDs.emails"
              }
            ],
            "lookupFieldsOperator": "OR",
            "matchBehavior": "process",
            "isCaseSensitive": true,
            "maxConcurrency": 1,
            "from": "accounts",
            "batchSize": 200,
            "multiMatchBehavior": "error"
          },
          "next": ["14A. Check isRegistered"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "14A. Check isRegistered",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0KSB7DQogICAgaWYgKCFyZWNvcmQuaXNSZWdpc3RlcmVkKSB7DQogICAgICAgIHJldHVybiByZWNvcmQ7DQogICAgfQ0KfQ==",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "next": ["15. Notify Login"],
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "15. Notify Login",
          "type": "datasource.write.gigya.generic",
          "params": {
            "apiMethod": "accounts.notifyLogin",
            "maxConnections": 10,
            "apiParams": [
              {
                "sourceField": "UID",
                "paramName": "siteUID",
                "value": ""
              }
            ],
            "addResponse": false
          },
          "error": ["Prepare fields to extract phone as ID"]
        },
        {
          "id": "11D. Import Full Account Upsert",
          "type": "datasource.write.gigya.importaccount",
          "params": {
            "importPolicy": "upsert",
            "maxConnections": 20,
            "addResponse": false
          },
          "next": ["12C. Set Account Info Webhook"],
          "error": ["Prepare fields to extract email"]
        },
        {
          "id": "Process new phone account error",
          "type": "record.evaluate",
          "params": {
            "script": "ZnVuY3Rpb24gcHJvY2VzcyhyZWNvcmQsIGN0eCwgbG9nZ2VyLCBuZXh0LCBlcnJvcikgew0KICAgIHJlY29yZC5fZXJyb3JEZXRhaWxzID0gJ1RoaXMgcmVjb3JkIGRvZXMgbm90IGV4aXN0IG9uIHRoZSByZXBvc2l0b3J5IG9yIHlvdSBhcmUgdHJ5aW5nIHRvIHVwZGF0ZSBhIExpdGUgQWNjb3VudCB3aXRoIHRoZSBGdWxsIEFjY291bnQgZGF0YWZsb3cuIFlvdSBtdXN0IHJ1biBpdCB3aXRoIHRoZSBpbXBvcnQgd2l0aCBhbGwgdGhlIHJlcXVpcmVkIGZpZWxkcy4nOw0KICAgIHJlY29yZC5waG9uZU51bWJlciA9IHJlY29yZC5fcGhvbmVOdW1iZXI7DQogICAgZXJyb3IuYWNjZXB0KHJlY29yZCwgcmVjb3JkKTsNCiAgICByZXR1cm47DQp9",
            "ECMAScriptVersion": "12",
            "notifyLastRecord": false
          },
          "error": ["Prepare fields to extract phone as ID"]
        }
      ],
      "version": 1,
      "createTime": "2024-10-15T09:59:15.824Z",
      "updateTime": "2024-10-15T09:59:15.824Z",
      "updatedByEmail": "l.marques@sap.com"
    },
    {
      "apiKey": "4_6Tv6z8O6NmUO_BZoHcXIRw",
      "siteId": 435061734600,
      "id": "83ec0f85760141e8944bfa74966f786d",
      "name": "Krux_Dataflow",
      "status": "draft",
      "description": "account > rename > krux > lzo > s3",
      "steps": [
        {
          "id": "account",
          "type": "datasource.read.gigya.account",
          "params": {
            "select": "UID,profile.gender,profile.age",
            "from": "accounts",
            "deltaField": "lastUpdatedTimestamp",
            "keepFieldNamesWithDotAsIs": false,
            "batchSize": 300,
            "maxConcurrency": 1
          },
          "next": ["rename"]
        },
        {
          "id": "rename",
          "type": "field.rename",
          "params": {
            "fields": [
              {
                "sourceField": "UID",
                "targetField": "id"
              },
              {
                "sourceField": "profile.gender",
                "targetField": "g_gender"
              },
              {
                "sourceField": "profile.age",
                "targetField": "g_age"
              },
              {
                "sourceField": "profile.likes",
                "targetField": "likes"
              }
            ]
          },
          "next": ["krux"]
        },
        {
          "id": "krux",
          "type": "file.format.krux",
          "params": {
            "fileName": "Gigya_Krux_M6.csv",
            "createEmptyFile": true,
            "quoteFields": false,
            "separator": ";"
          },
          "next": ["lzo"]
        },
        {
          "id": "lzo",
          "type": "file.compress.lzo",
          "params": {
            "createIndexFile": true
          },
          "next": ["s3"]
        },
        {
          "id": "s3",
          "type": "datasource.write.amazon.s3",
          "params": {
            "bucketName": "...",
            "accessKey": "...",
            "secretKey": "********",
            "objectKeyPrefix": "...",
            "region": "not specified"
          }
        }
      ],
      "version": 1,
      "createTime": "2023-04-21T10:28:35.98Z",
      "updateTime": "2023-04-21T10:28:35.98Z",
      "updatedByEmail": "g.lopes@sap.com"
    },
    {
      "apiKey": "4_6Tv6z8O6NmUO_BZoHcXIRw",
      "siteId": 435061734600,
      "id": "5e14ee0b96264f2c812e0c255c7f4e55",
      "name": "Import Lite Accounts from SFTP",
      "status": "draft",
      "description": "sftp > parse > injectJobId > importLiteAccount > format > sftp",
      "steps": [
        {
          "id": "Read files from SFTP",
          "type": "datasource.read.sftp",
          "params": {
            "host": "...",
            "username": "...",
            "password": "********",
            "fileNameRegex": ".*.json",
            "port": 22,
            "sortOrder": "ASC",
            "sortBy": "time",
            "timeout": 60
          },
          "next": ["parse JSON"]
        },
        {
          "id": "parse JSON",
          "type": "file.parse.json",
          "params": {
            "addFilename": false
          },
          "next": ["sharedvariable"]
        },
        {
          "id": "Import Lite Account",
          "type": "datasource.write.gigya.generic",
          "params": {
            "apiMethod": "accounts.importLiteAccount",
            "maxConnections": 20,
            "apiParams": [
              {
                "sourceField": "profile",
                "paramName": "profile",
                "value": ""
              },
              {
                "sourceField": "data",
                "paramName": "data",
                "value": ""
              },
              {
                "sourceField": "email",
                "paramName": "email",
                "value": ""
              }
            ],
            "addResponse": false
          },
          "next": [],
          "error": ["Format Error File"]
        },
        {
          "id": "Format Error File",
          "type": "file.format.json",
          "params": {
            "fileName": "import_lite_accounts_errors_${now}.json",
            "maxFileSize": 5000,
            "createEmptyFile": false
          },
          "next": ["Save errors to SFTP"]
        },
        {
          "id": "Save errors to SFTP",
          "type": "datasource.write.sftp",
          "params": {
            "host": "...",
            "username": "...",
            "password": "********",
            "port": 22,
            "remotePath": "errors",
            "temporaryUploadExtension": true,
            "timeout": 60
          }
        },
        {
          "id": "sharedvariable",
          "type": "datasource.read.sharedvariable",
          "next": ["Import Lite Account"]
        }
      ],
      "version": 1,
      "createTime": "2023-05-30T16:16:09.439Z",
      "updateTime": "2023-05-30T16:16:09.439Z",
      "updatedByEmail": "g.lopes@sap.com"
    }
  ]
}
